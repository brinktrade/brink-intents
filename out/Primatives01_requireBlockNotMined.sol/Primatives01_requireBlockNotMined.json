{
  "abi": [
    {
      "inputs": [],
      "name": "BlockMined",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BlockNotMined",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC1155IdNotProvided",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IdNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MerkleProofAndAmountMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MerkleProofsRequired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NftIdAlreadyOwned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NftIdNotReceived",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "NotEnoughTokenReceived",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerHasNft",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedTokenStandard",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "swapsIds",
          "type": "bytes32[]"
        }
      ],
      "name": "bindLimitSwapFills",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "createSeaportListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "swap0",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "swap1",
          "type": "bytes32"
        }
      ],
      "name": "invertLimitSwapFills",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "tokenIn",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "tokenOut",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenInAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "basePrice",
          "type": "uint256"
        },
        {
          "internalType": "contract IPriceCurve",
          "name": "priceCurve",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenInAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenInId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct TokenHelper.IdMerkleProof[]",
              "name": "tokenInIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct TokenHelper.IdMerkleProof[]",
              "name": "tokenOutIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Primatives01.Call",
              "name": "fillCall",
              "type": "tuple"
            }
          ],
          "internalType": "struct Primatives01.UnsignedLimitSwapData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "limitSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mainnetFork",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "tokenIn",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "tokenOut",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenInAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenInId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct TokenHelper.IdMerkleProof[]",
              "name": "tokenInIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct TokenHelper.IdMerkleProof[]",
              "name": "tokenOutIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Primatives01.Call",
              "name": "fillCall",
              "type": "tuple"
            }
          ],
          "internalType": "struct Primatives01.UnsignedMarketSwapData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "marketSwapExactInput",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "tokenIn",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "tokenOut",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenOutAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenInId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct TokenHelper.IdMerkleProof[]",
              "name": "tokenInIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct TokenHelper.IdMerkleProof[]",
              "name": "tokenOutIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Primatives01.Call",
              "name": "fillCall",
              "type": "tuple"
            }
          ],
          "internalType": "struct Primatives01.UnsignedMarketSwapData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "marketSwapExactOutput",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "numberOfRuns",
          "type": "uint256"
        }
      ],
      "name": "maxRuns",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bitmapIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bit",
          "type": "uint256"
        }
      ],
      "name": "requireBitNotUsed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bitmapIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bit",
          "type": "uint256"
        }
      ],
      "name": "requireBitUsed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "requireBlockMined",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "requireBlockNotMined",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "numberOfBlocksElapsed",
          "type": "uint256"
        }
      ],
      "name": "requireBlocksElapsed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "requireLimitSwapFilled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "requireLimitSwapOpen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceDeltaOracle",
          "name": "priceDeltaOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceDecrease",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceDeltaOracle",
          "name": "priceDeltaOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceIncrease",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceLowerBound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceUpperBound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "stakerSignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Primatives01.UnsignedStakeProofData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "requireStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupFork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "setupFork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBlockIsMined",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBlockIsMining",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBlockIsNotMined",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum TokenHelper.TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenHelper.Token",
          "name": "token",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct TokenHelper.IdMerkleProof[]",
              "name": "idMerkleProofs",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Primatives01.UnsignedTransferData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bitmapIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bit",
          "type": "uint256"
        }
      ],
      "name": "useBit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905562fb8aed60135534801561002457600080fd5b50611caa806100346000396000f3fe608060405234801561001057600080fd5b50600436106101e45760003560e01c80636fc4fde71161010f578063d46b8d2c116100a2578063f7440e1611610071578063f7440e161461031a578063f868f99c1461032d578063f9e3e2fc14610335578063fa7626d41461033e57600080fd5b8063d46b8d2c146102ec578063db5b273a14610245578063f0c27e3d146102f4578063f0f6ee2a1461030757600080fd5b8063a9aa5f7e116100de578063a9aa5f7e1461021f578063b4caf1cb1461021f578063ba414fa6146102c1578063be330dbd146102d957600080fd5b80636fc4fde71461020e5780638129ef951461023157806389dee6ab146102a657806398bc97c7146102b957600080fd5b8063333aa2fc116101875780634ef935ca116101565780634ef935ca1461020e578063502929ff1461028557806361ebbca81461029857806365c8efda1461021f57600080fd5b8063333aa2fc1461024557806340362fea1461025b57806347244b0d1461021f57806348213e221461027757600080fd5b80630f984250116101c35780630f9842501461020e578063181233ee1461021f578063193a0f621461021f5780631ccf3c0c1461023157600080fd5b8062f4b4de146101e957806302908ed3146101f35780630a9254e414610206575b600080fd5b6101f161034b565b005b6101f16102013660046114a7565b61035f565b6101f1610380565b6101f161021c3660046114a7565b50565b6101f161022d3660046114c0565b5050565b6101f161023f36600461150f565b50505050565b6101f1610253366004611560565b505050505050565b61026460145481565b6040519081526020015b60405180910390f35b6101f161021c3660046115c7565b6101f16102933660046114a7565b610388565b6101f161022d366004611609565b6101f16102b436600461167e565b6103a8565b6101f16103f9565b6102c9610476565b604051901515815260200161026e565b6101f16102e736600461167e565b6105a1565b6101f16105ca565b6101f16103023660046114a7565b6105d1565b6101f1610315366004611716565b61073f565b6101f16103283660046117c4565b61082b565b6101f1610876565b61026460135481565b6000546102c99060ff1681565b61035d6013546001610293919061185b565b565b4381111561021c5760405163281f6f0d60e01b815260040160405180910390fd5b61035d6105ca565b43811161021c5760405163c64743d560e01b815260040160405180910390fd5b60006103f08585886103bd6020870187611874565b878660208901356103d160408b018b611891565b6103de60608d018d611891565b6103eb60808f018f6118e2565b6108ec565b50505050505050565b604051630618f58760e51b815263c64743d560e01b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801561044c57600080fd5b505af1158015610460573d6000803e3d6000fd5b5050505061035d60016013546102939190611902565b60008054610100900460ff16156104965750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561059c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610524917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611939565b60408051601f198184030181529082905261053e9161196a565b6000604051808303816000865af19150503d806000811461057b576040519150601f19603f3d011682016040523d82523d6000602084013e610580565b606091505b5091505080806020019051810190610598919061197c565b9150505b919050565b60006103f08585886105b66020870187611874565b858860208901356103d160408b018b611891565b61035d6013545b60405163f877cb1960e01b815260206004820152600f60248201526e1350525393915517d49410d7d55493608a1b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636ba3ba2b90829063f877cb1990606401600060405180830381865afa158015610648573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067091908101906119b4565b836040518363ffffffff1660e01b815260040161068e929190611a61565b6020604051808303816000875af11580156106ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d19190611a9c565b6014819055604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b15801561072457600080fd5b505af1158015610738573d6000803e3d6000fd5b5050505050565b6107498682610a5f565b6000806040516306e5639760e21b8152600481018790526024810186905260448101829052602084013560648201529091506000906001600160a01b03851690631b958e5c906084016020604051808303816000875af11580156107b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d59190611a9c565b905061081f88888b6107ea6020880188611874565b60208801358660408a013561080260608c018c611891565b61080f60808e018e611891565b8e8060a001906103eb91906118e2565b50505050505050505050565b610836868483610b11565b60006001600160a01b038516610858576108536020830183611874565b61085a565b845b90506103f087878387876108716020890189611891565b610b55565b604051630618f58760e51b815263c64743d560e01b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b1580156108c957600080fd5b505af11580156108dd573d6000803e3d6000fd5b5050505061035d601354610388565b6108fb8c8b8b8b8a8a8a610b55565b600080600061090c8d8f8888610ffa565b909350839250905080156109335760405163170fb50d60e01b815260040160405180910390fd5b50736fe756b9c61cf7e9f11d96740b096e51b64ebf139050632a31f6b461095d6020850185611874565b61096a6020860186611ab5565b6040518463ffffffff1660e01b815260040161098893929190611afc565b600060405180830381600087803b1580156109a257600080fd5b505af11580156109b6573d6000803e3d6000fd5b505050506000806109c98d8f8888610ffa565b9150915060008e606001351180156109e15750600181105b806109f9575060408e0135158015906109f957508481105b15610a175760405163e904550160e01b815260040160405180910390fd5b6000610a238484611902565b90508a811015610a4d57604051634c19cdaf60e11b81526004810182905260240160405180910390fd5b50505050505050505050505050505050565b6040820135158015610a745750606082013515155b8015610a8857508060400135826060013514155b15610aa6576040516369443e5560e11b815260040160405180910390fd5b60408201351561022d57610abd6060820182611891565b9050600003610adf576040516308bf63cd60e01b815260040160405180910390fd5b6020810135610af16060830183611891565b90501461022d5760405163024c78fd60e51b815260040160405180910390fd5b604083013515801590610b32575081610b2d6020830183611891565b905014155b15610b505760405163024c78fd60e51b815260040160405180910390fd5b505050565b6000610b646020890189611b52565b6003811115610b7557610b75611b3c565b03610c0d57610b8a6040880160208901611874565b6040516323b872dd60e01b81526001600160a01b03888116600483015287811660248301526044820187905291909116906323b872dd906064016020604051808303816000875af1158015610be3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c07919061197c565b506103f0565b6001610c1c6020890189611b52565b6003811115610c2d57610c2d611b3c565b03610df1576040870135610cbd57610c4b6040880160208901611874565b6040516323b872dd60e01b81526001600160a01b03888116600483015287811660248301526044820186905291909116906323b872dd906064015b600060405180830381600087803b158015610ca057600080fd5b505af1158015610cb4573d6000803e3d6000fd5b505050506103f0565b60005b60ff8116821115610c0757610d2f886040013584848460ff16818110610ce857610ce8611b73565b9050602002810190610cfa91906118e2565b610d08906020810190611891565b86868660ff16818110610d1d57610d1d611b73565b905060200281019061023f91906118e2565b610d3f6040890160208a01611874565b6001600160a01b03166323b872dd888886868660ff16818110610d6457610d64611b73565b9050602002810190610d7691906118e2565b60405160e085901b6001600160e01b03191681526001600160a01b039384166004820152929091166024830152356044820152606401600060405180830381600087803b158015610dc657600080fd5b505af1158015610dda573d6000803e3d6000fd5b505050508080610de990611b89565b915050610cc0565b6002610e006020890189611b52565b6003811115610e1157610e11611b3c565b03610fe1576040870135610e8357610e2f6040880160208901611874565b604051637921219560e11b81526001600160a01b0388811660048301528781166024830152604482018690526064820187905260a06084830152600060a4830152919091169063f242432a9060c401610c86565b60608060005b60ff8116841115610f6657610ee68a6040013586868460ff16818110610eb157610eb1611b73565b9050602002810190610ec391906118e2565b610ed1906020810190611891565b88888660ff16818110610d1d57610d1d611b73565b84848260ff16818110610efb57610efb611b73565b9050602002810190610f0d91906118e2565b60000135838260ff1681518110610f2657610f26611b73565b6020026020010181815250506001828260ff1681518110610f4957610f49611b73565b602090810291909101015280610f5e81611b89565b915050610e89565b50610f7760408a0160208b01611874565b6001600160a01b0316632eb2c2d6898985856040518563ffffffff1660e01b8152600401610fa89493929190611be3565b600060405180830381600087803b158015610fc257600080fd5b505af1158015610fd6573d6000803e3d6000fd5b5050505050506103f0565b604051639a9d6f4f60e01b815260040160405180910390fd5b600080600161100c6020870187611b52565b600381111561101d5761101d611b3c565b036111cb57600085606001351180156110c457506001600160a01b03861661104b6040870160208801611874565b6040516331a9108f60e11b8152606088013560048201526001600160a01b039190911690636352211e90602401602060405180830381865afa158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b99190611c3e565b6001600160a01b0316145b156110d1575060016111cb565b6040850135156111cb5760005b60ff81168411156111c9576001600160a01b0387166111036040880160208901611874565b6001600160a01b0316636352211e87878560ff1681811061112657611126611b73565b905060200281019061113891906118e2565b60405160e083901b6001600160e01b031916815290356004820152602401602060405180830381865afa158015611173573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111979190611c3e565b6001600160a01b0316036111b757816111af81611c5b565b9250506111c9565b806111c181611b89565b9150506110de565b505b6111d78587868661121a565b915060026111e86020870187611b52565b60038111156111f9576111f9611b3c565b1480156112095750604085013515155b156112115750805b94509492505050565b6000600361122b6020870187611b52565b600381111561123c5761123c611b3c565b0361125257506001600160a01b0383163161149f565b60006112616020870187611b52565b600381111561127257611272611b3c565b036112fb576112876040860160208701611874565b6040516370a0823160e01b81526001600160a01b03868116600483015291909116906370a08231906024015b602060405180830381865afa1580156112d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f49190611a9c565b905061149f565b600161130a6020870187611b52565b600381111561131b5761131b611b3c565b03611330576112876040860160208701611874565b600261133f6020870187611b52565b600381111561135057611350611b3c565b03610fe1576060850135156113a75761136f6040860160208701611874565b604051627eeac760e11b81526001600160a01b03868116600483015260608801356024830152919091169062fdd58e906044016112b3565b6000805b60ff811684111561149b5760006113c86040890160208a01611874565b6001600160a01b031662fdd58e8888888660ff168181106113eb576113eb611b73565b90506020028101906113fd91906118e2565b60405160e084901b6001600160e01b03191681526001600160a01b039092166004830152356024820152604401602060405180830381865afa158015611447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146b9190611a9c565b1161147757600061147a565b60015b6114879060ff168361185b565b91508061149381611b89565b9150506113ab565b5090505b949350505050565b6000602082840312156114b957600080fd5b5035919050565b600080604083850312156114d357600080fd5b50508035926020909101359150565b6001600160a01b038116811461021c57600080fd5b60006080828403121561150957600080fd5b50919050565b600080600080610140858703121561152657600080fd5b8435611531816114e2565b935061154086602087016114f7565b925061154f8660a087016114f7565b939692955092936101200135925050565b600080600080600080610180878903121561157a57600080fd5b8635611585816114e2565b955061159488602089016114f7565b94506115a38860a089016114f7565b93506101208701359250610140870135915061016087013590509295509295509295565b6000602082840312156115d957600080fd5b813567ffffffffffffffff8111156115f057600080fd5b82016020818503121561160257600080fd5b9392505050565b6000806020838503121561161c57600080fd5b823567ffffffffffffffff8082111561163457600080fd5b818501915085601f83011261164857600080fd5b81358181111561165757600080fd5b8660208260051b850101111561166c57600080fd5b60209290920196919550909350505050565b600080600080600080610180878903121561169857600080fd5b86356116a3816114e2565b955060208701356116b3816114e2565b94506116c288604089016114f7565b93506116d18860c089016114f7565b9250610140870135915061016087013567ffffffffffffffff8111156116f657600080fd5b870160a0818a03121561170857600080fd5b809150509295509295509295565b6000806000806000806000806101c0898b03121561173357600080fd5b883597506020890135611745816114e2565b96506117548a60408b016114f7565b95506117638a60c08b016114f7565b945061014089013593506101608901359250610180890135611784816114e2565b91506101a089013567ffffffffffffffff8111156117a157600080fd5b890160c0818c0312156117b357600080fd5b809150509295985092959890939650565b60008060008060008061012087890312156117de57600080fd5b6117e888886114f7565b955060808701356117f8816114e2565b945060a0870135611808816114e2565b935060c0870135925060e0870135915061010087013567ffffffffffffffff81111561183357600080fd5b87016040818a03121561170857600080fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561186e5761186e611845565b92915050565b60006020828403121561188657600080fd5b8135611602816114e2565b6000808335601e198436030181126118a857600080fd5b83018035915067ffffffffffffffff8211156118c357600080fd5b6020019150600581901b36038213156118db57600080fd5b9250929050565b60008235603e198336030181126118f857600080fd5b9190910192915050565b8181038181111561186e5761186e611845565b60005b83811015611930578181015183820152602001611918565b50506000910152565b6001600160e01b031983168152815160009061195c816004850160208701611915565b919091016004019392505050565b600082516118f8818460208701611915565b60006020828403121561198e57600080fd5b8151801515811461160257600080fd5b634e487b7160e01b600052604160045260246000fd5b6000602082840312156119c657600080fd5b815167ffffffffffffffff808211156119de57600080fd5b818401915084601f8301126119f257600080fd5b815181811115611a0457611a0461199e565b604051601f8201601f19908116603f01168101908382118183101715611a2c57611a2c61199e565b81604052828152876020848701011115611a4557600080fd5b611a56836020830160208801611915565b979650505050505050565b6040815260008351806040840152611a80816060850160208801611915565b602083019390935250601f91909101601f191601606001919050565b600060208284031215611aae57600080fd5b5051919050565b6000808335601e19843603018112611acc57600080fd5b83018035915067ffffffffffffffff821115611ae757600080fd5b6020019150368190038213156118db57600080fd5b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215611b6457600080fd5b81356004811061160257600080fd5b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103611b9f57611b9f611845565b60010192915050565b600081518084526020808501945080840160005b83811015611bd857815187529582019590820190600101611bbc565b509495945050505050565b6001600160a01b0385811682528416602082015260a060408201819052600090611c0f90830185611ba8565b8281036060840152611c218185611ba8565b838103608090940193909352505060008152602001949350505050565b600060208284031215611c5057600080fd5b8151611602816114e2565b600060018201611c6d57611c6d611845565b506001019056fea2646970667358221220da85889cdade3f949f83d1579aae75d4ea90f847313f9637ca39ecbb62671be064736f6c63430008110033",
    "sourceMap": "163:685:26:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;154:10:24;124:40;;163:685:26;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101e45760003560e01c80636fc4fde71161010f578063d46b8d2c116100a2578063f7440e1611610071578063f7440e161461031a578063f868f99c1461032d578063f9e3e2fc14610335578063fa7626d41461033e57600080fd5b8063d46b8d2c146102ec578063db5b273a14610245578063f0c27e3d146102f4578063f0f6ee2a1461030757600080fd5b8063a9aa5f7e116100de578063a9aa5f7e1461021f578063b4caf1cb1461021f578063ba414fa6146102c1578063be330dbd146102d957600080fd5b80636fc4fde71461020e5780638129ef951461023157806389dee6ab146102a657806398bc97c7146102b957600080fd5b8063333aa2fc116101875780634ef935ca116101565780634ef935ca1461020e578063502929ff1461028557806361ebbca81461029857806365c8efda1461021f57600080fd5b8063333aa2fc1461024557806340362fea1461025b57806347244b0d1461021f57806348213e221461027757600080fd5b80630f984250116101c35780630f9842501461020e578063181233ee1461021f578063193a0f621461021f5780631ccf3c0c1461023157600080fd5b8062f4b4de146101e957806302908ed3146101f35780630a9254e414610206575b600080fd5b6101f161034b565b005b6101f16102013660046114a7565b61035f565b6101f1610380565b6101f161021c3660046114a7565b50565b6101f161022d3660046114c0565b5050565b6101f161023f36600461150f565b50505050565b6101f1610253366004611560565b505050505050565b61026460145481565b6040519081526020015b60405180910390f35b6101f161021c3660046115c7565b6101f16102933660046114a7565b610388565b6101f161022d366004611609565b6101f16102b436600461167e565b6103a8565b6101f16103f9565b6102c9610476565b604051901515815260200161026e565b6101f16102e736600461167e565b6105a1565b6101f16105ca565b6101f16103023660046114a7565b6105d1565b6101f1610315366004611716565b61073f565b6101f16103283660046117c4565b61082b565b6101f1610876565b61026460135481565b6000546102c99060ff1681565b61035d6013546001610293919061185b565b565b4381111561021c5760405163281f6f0d60e01b815260040160405180910390fd5b61035d6105ca565b43811161021c5760405163c64743d560e01b815260040160405180910390fd5b60006103f08585886103bd6020870187611874565b878660208901356103d160408b018b611891565b6103de60608d018d611891565b6103eb60808f018f6118e2565b6108ec565b50505050505050565b604051630618f58760e51b815263c64743d560e01b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801561044c57600080fd5b505af1158015610460573d6000803e3d6000fd5b5050505061035d60016013546102939190611902565b60008054610100900460ff16156104965750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561059c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610524917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611939565b60408051601f198184030181529082905261053e9161196a565b6000604051808303816000865af19150503d806000811461057b576040519150601f19603f3d011682016040523d82523d6000602084013e610580565b606091505b5091505080806020019051810190610598919061197c565b9150505b919050565b60006103f08585886105b66020870187611874565b858860208901356103d160408b018b611891565b61035d6013545b60405163f877cb1960e01b815260206004820152600f60248201526e1350525393915517d49410d7d55493608a1b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636ba3ba2b90829063f877cb1990606401600060405180830381865afa158015610648573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067091908101906119b4565b836040518363ffffffff1660e01b815260040161068e929190611a61565b6020604051808303816000875af11580156106ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d19190611a9c565b6014819055604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b15801561072457600080fd5b505af1158015610738573d6000803e3d6000fd5b5050505050565b6107498682610a5f565b6000806040516306e5639760e21b8152600481018790526024810186905260448101829052602084013560648201529091506000906001600160a01b03851690631b958e5c906084016020604051808303816000875af11580156107b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d59190611a9c565b905061081f88888b6107ea6020880188611874565b60208801358660408a013561080260608c018c611891565b61080f60808e018e611891565b8e8060a001906103eb91906118e2565b50505050505050505050565b610836868483610b11565b60006001600160a01b038516610858576108536020830183611874565b61085a565b845b90506103f087878387876108716020890189611891565b610b55565b604051630618f58760e51b815263c64743d560e01b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b1580156108c957600080fd5b505af11580156108dd573d6000803e3d6000fd5b5050505061035d601354610388565b6108fb8c8b8b8b8a8a8a610b55565b600080600061090c8d8f8888610ffa565b909350839250905080156109335760405163170fb50d60e01b815260040160405180910390fd5b50736fe756b9c61cf7e9f11d96740b096e51b64ebf139050632a31f6b461095d6020850185611874565b61096a6020860186611ab5565b6040518463ffffffff1660e01b815260040161098893929190611afc565b600060405180830381600087803b1580156109a257600080fd5b505af11580156109b6573d6000803e3d6000fd5b505050506000806109c98d8f8888610ffa565b9150915060008e606001351180156109e15750600181105b806109f9575060408e0135158015906109f957508481105b15610a175760405163e904550160e01b815260040160405180910390fd5b6000610a238484611902565b90508a811015610a4d57604051634c19cdaf60e11b81526004810182905260240160405180910390fd5b50505050505050505050505050505050565b6040820135158015610a745750606082013515155b8015610a8857508060400135826060013514155b15610aa6576040516369443e5560e11b815260040160405180910390fd5b60408201351561022d57610abd6060820182611891565b9050600003610adf576040516308bf63cd60e01b815260040160405180910390fd5b6020810135610af16060830183611891565b90501461022d5760405163024c78fd60e51b815260040160405180910390fd5b604083013515801590610b32575081610b2d6020830183611891565b905014155b15610b505760405163024c78fd60e51b815260040160405180910390fd5b505050565b6000610b646020890189611b52565b6003811115610b7557610b75611b3c565b03610c0d57610b8a6040880160208901611874565b6040516323b872dd60e01b81526001600160a01b03888116600483015287811660248301526044820187905291909116906323b872dd906064016020604051808303816000875af1158015610be3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c07919061197c565b506103f0565b6001610c1c6020890189611b52565b6003811115610c2d57610c2d611b3c565b03610df1576040870135610cbd57610c4b6040880160208901611874565b6040516323b872dd60e01b81526001600160a01b03888116600483015287811660248301526044820186905291909116906323b872dd906064015b600060405180830381600087803b158015610ca057600080fd5b505af1158015610cb4573d6000803e3d6000fd5b505050506103f0565b60005b60ff8116821115610c0757610d2f886040013584848460ff16818110610ce857610ce8611b73565b9050602002810190610cfa91906118e2565b610d08906020810190611891565b86868660ff16818110610d1d57610d1d611b73565b905060200281019061023f91906118e2565b610d3f6040890160208a01611874565b6001600160a01b03166323b872dd888886868660ff16818110610d6457610d64611b73565b9050602002810190610d7691906118e2565b60405160e085901b6001600160e01b03191681526001600160a01b039384166004820152929091166024830152356044820152606401600060405180830381600087803b158015610dc657600080fd5b505af1158015610dda573d6000803e3d6000fd5b505050508080610de990611b89565b915050610cc0565b6002610e006020890189611b52565b6003811115610e1157610e11611b3c565b03610fe1576040870135610e8357610e2f6040880160208901611874565b604051637921219560e11b81526001600160a01b0388811660048301528781166024830152604482018690526064820187905260a06084830152600060a4830152919091169063f242432a9060c401610c86565b60608060005b60ff8116841115610f6657610ee68a6040013586868460ff16818110610eb157610eb1611b73565b9050602002810190610ec391906118e2565b610ed1906020810190611891565b88888660ff16818110610d1d57610d1d611b73565b84848260ff16818110610efb57610efb611b73565b9050602002810190610f0d91906118e2565b60000135838260ff1681518110610f2657610f26611b73565b6020026020010181815250506001828260ff1681518110610f4957610f49611b73565b602090810291909101015280610f5e81611b89565b915050610e89565b50610f7760408a0160208b01611874565b6001600160a01b0316632eb2c2d6898985856040518563ffffffff1660e01b8152600401610fa89493929190611be3565b600060405180830381600087803b158015610fc257600080fd5b505af1158015610fd6573d6000803e3d6000fd5b5050505050506103f0565b604051639a9d6f4f60e01b815260040160405180910390fd5b600080600161100c6020870187611b52565b600381111561101d5761101d611b3c565b036111cb57600085606001351180156110c457506001600160a01b03861661104b6040870160208801611874565b6040516331a9108f60e11b8152606088013560048201526001600160a01b039190911690636352211e90602401602060405180830381865afa158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b99190611c3e565b6001600160a01b0316145b156110d1575060016111cb565b6040850135156111cb5760005b60ff81168411156111c9576001600160a01b0387166111036040880160208901611874565b6001600160a01b0316636352211e87878560ff1681811061112657611126611b73565b905060200281019061113891906118e2565b60405160e083901b6001600160e01b031916815290356004820152602401602060405180830381865afa158015611173573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111979190611c3e565b6001600160a01b0316036111b757816111af81611c5b565b9250506111c9565b806111c181611b89565b9150506110de565b505b6111d78587868661121a565b915060026111e86020870187611b52565b60038111156111f9576111f9611b3c565b1480156112095750604085013515155b156112115750805b94509492505050565b6000600361122b6020870187611b52565b600381111561123c5761123c611b3c565b0361125257506001600160a01b0383163161149f565b60006112616020870187611b52565b600381111561127257611272611b3c565b036112fb576112876040860160208701611874565b6040516370a0823160e01b81526001600160a01b03868116600483015291909116906370a08231906024015b602060405180830381865afa1580156112d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f49190611a9c565b905061149f565b600161130a6020870187611b52565b600381111561131b5761131b611b3c565b03611330576112876040860160208701611874565b600261133f6020870187611b52565b600381111561135057611350611b3c565b03610fe1576060850135156113a75761136f6040860160208701611874565b604051627eeac760e11b81526001600160a01b03868116600483015260608801356024830152919091169062fdd58e906044016112b3565b6000805b60ff811684111561149b5760006113c86040890160208a01611874565b6001600160a01b031662fdd58e8888888660ff168181106113eb576113eb611b73565b90506020028101906113fd91906118e2565b60405160e084901b6001600160e01b03191681526001600160a01b039092166004830152356024820152604401602060405180830381865afa158015611447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146b9190611a9c565b1161147757600061147a565b60015b6114879060ff168361185b565b91508061149381611b89565b9150506113ab565b5090505b949350505050565b6000602082840312156114b957600080fd5b5035919050565b600080604083850312156114d357600080fd5b50508035926020909101359150565b6001600160a01b038116811461021c57600080fd5b60006080828403121561150957600080fd5b50919050565b600080600080610140858703121561152657600080fd5b8435611531816114e2565b935061154086602087016114f7565b925061154f8660a087016114f7565b939692955092936101200135925050565b600080600080600080610180878903121561157a57600080fd5b8635611585816114e2565b955061159488602089016114f7565b94506115a38860a089016114f7565b93506101208701359250610140870135915061016087013590509295509295509295565b6000602082840312156115d957600080fd5b813567ffffffffffffffff8111156115f057600080fd5b82016020818503121561160257600080fd5b9392505050565b6000806020838503121561161c57600080fd5b823567ffffffffffffffff8082111561163457600080fd5b818501915085601f83011261164857600080fd5b81358181111561165757600080fd5b8660208260051b850101111561166c57600080fd5b60209290920196919550909350505050565b600080600080600080610180878903121561169857600080fd5b86356116a3816114e2565b955060208701356116b3816114e2565b94506116c288604089016114f7565b93506116d18860c089016114f7565b9250610140870135915061016087013567ffffffffffffffff8111156116f657600080fd5b870160a0818a03121561170857600080fd5b809150509295509295509295565b6000806000806000806000806101c0898b03121561173357600080fd5b883597506020890135611745816114e2565b96506117548a60408b016114f7565b95506117638a60c08b016114f7565b945061014089013593506101608901359250610180890135611784816114e2565b91506101a089013567ffffffffffffffff8111156117a157600080fd5b890160c0818c0312156117b357600080fd5b809150509295985092959890939650565b60008060008060008061012087890312156117de57600080fd5b6117e888886114f7565b955060808701356117f8816114e2565b945060a0870135611808816114e2565b935060c0870135925060e0870135915061010087013567ffffffffffffffff81111561183357600080fd5b87016040818a03121561170857600080fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561186e5761186e611845565b92915050565b60006020828403121561188657600080fd5b8135611602816114e2565b6000808335601e198436030181126118a857600080fd5b83018035915067ffffffffffffffff8211156118c357600080fd5b6020019150600581901b36038213156118db57600080fd5b9250929050565b60008235603e198336030181126118f857600080fd5b9190910192915050565b8181038181111561186e5761186e611845565b60005b83811015611930578181015183820152602001611918565b50506000910152565b6001600160e01b031983168152815160009061195c816004850160208701611915565b919091016004019392505050565b600082516118f8818460208701611915565b60006020828403121561198e57600080fd5b8151801515811461160257600080fd5b634e487b7160e01b600052604160045260246000fd5b6000602082840312156119c657600080fd5b815167ffffffffffffffff808211156119de57600080fd5b818401915084601f8301126119f257600080fd5b815181811115611a0457611a0461199e565b604051601f8201601f19908116603f01168101908382118183101715611a2c57611a2c61199e565b81604052828152876020848701011115611a4557600080fd5b611a56836020830160208801611915565b979650505050505050565b6040815260008351806040840152611a80816060850160208801611915565b602083019390935250601f91909101601f191601606001919050565b600060208284031215611aae57600080fd5b5051919050565b6000808335601e19843603018112611acc57600080fd5b83018035915067ffffffffffffffff821115611ae757600080fd5b6020019150368190038213156118db57600080fd5b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215611b6457600080fd5b81356004811061160257600080fd5b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103611b9f57611b9f611845565b60010192915050565b600081518084526020808501945080840160005b83811015611bd857815187529582019590820190600101611bbc565b509495945050505050565b6001600160a01b0385811682528416602082015260a060408201819052600090611c0f90830185611ba8565b8281036060840152611c218185611ba8565b838103608090940193909352505060008152602001949350505050565b600060208284031215611c5057600080fd5b8151611602816114e2565b600060018201611c6d57611c6d611845565b506001019056fea2646970667358221220da85889cdade3f949f83d1579aae75d4ea90f847313f9637ca39ecbb62671be064736f6c63430008110033",
    "sourceMap": "163:685:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;293:151;;;:::i;:::-;;1631:137:22;;;;;;:::i;:::-;;:::i;242:47:26:-;;;:::i;6244:55:22:-;;;;;;:::i;:::-;1631:137;;1284:69;;;;;;:::i;:::-;;;;2442:130;;;;;;:::i;:::-;;;;;;2695:169;;;;;;:::i;:::-;;;;;;;;168:26:24;;;;;;;;;2698:25:27;;;2686:2;2671:18;168:26:24;;;;;;;;3250:74:22;;;;;;:::i;1772:138::-;;;;;;:::i;:::-;;:::i;6924:75::-;;;;;;:::i;3828:568::-;;;;;;:::i;:::-;;:::i;648:197:26:-;;;:::i;1819:584:0:-;;;:::i;:::-;;;5231:14:27;;5224:22;5206:41;;5194:2;5179:18;1819:584:0;5066:187:27;4515:569:22;;;;;;:::i;:::-;;:::i;199:63:24:-;;;:::i;266:161::-;;;;;;:::i;:::-;;:::i;5190:1012:22:-;;;;;;:::i;:::-;;:::i;3328:382::-;;;;;;:::i;:::-;;:::i;448:196:26:-;;;:::i;124:40:24:-;;;;;;1572:26:0;;;;;;;;;293:151:26;401:38;422:12;;437:1;422:16;;;;:::i;401:38::-;293:151::o;1631:137:22:-;1713:12;1699:11;:26;1695:69;;;1742:15;;-1:-1:-1;;;1742:15:22;;;;;;;;;;;242:47:26;273:11;:9;:11::i;1772:138:22:-;1858:12;1843:11;:27;1839:67;;1887:12;;-1:-1:-1;;;1887:12:22;;;;;;;;;;;3828:568;4048:27;4147:244;4164:7;4179:8;4195:5;4208:14;;;;:4;:14;:::i;:::-;4230:13;4251:22;4281:14;;;;4303:26;;;;4281:4;4303:26;:::i;:::-;4337:27;;;;:4;:27;:::i;:::-;4372:13;;;;:4;:13;:::i;:::-;4147:9;:244::i;:::-;4042:354;3828:568;;;;;;:::o;648:197:26:-;760:36;;-1:-1:-1;;;760:36:26;;-1:-1:-1;;;760:36:26;;;9003:52:27;760:15:26;;;;8976:18:27;;760:36:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:38;838:1;823:12;;:16;;;;:::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;9373:51:27;;;-1:-1:-1;;;9440:18:27;;;9433:34;2196:43:0;;;;;;;;;9346:18:27;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;4515:569:22:-;4737:26;4835:244;4852:7;4867:8;4883:5;4896:14;;;;:4;:14;:::i;:::-;4918:21;4947:14;4969;;;;4991:26;;;;4969:4;4991:26;:::i;199:63:24:-;234:23;244:12;;266:161;345:31;;-1:-1:-1;;;345:31:24;;10898:2:27;345:31:24;;;10880:21:27;10937:2;10917:18;;;10910:30;-1:-1:-1;;;10956:18:27;;;10949:45;331:13:24;;;;;;345:12;;11011:18:27;;345:31:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;345:31:24;;;;;;;;;;;;:::i;:::-;378:11;331:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;317:11;:73;;;396:26;;-1:-1:-1;;;396:26:24;;;;;2698:25:27;;;;396:13:24;;;;2671:18:27;;396:26:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:161;:::o;5190:1012:22:-;5432:42;5460:7;5469:4;5432:27;:42::i;:::-;5636:17;;5798:80;;-1:-1:-1;;;5798:80:22;;;;;12970:25:27;;;13011:18;;;13004:34;;;13054:18;;;13047:34;;;5859:18:22;;;;13097::27;;;13090:34;5636:49:22;;-1:-1:-1;5768:27:22;;-1:-1:-1;;;;;5798:20:22;;;;;12942:19:27;;5798:80:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5768:110;-1:-1:-1;5885:249:22;5902:7;5917:8;5933:5;5946:14;;;;:4;:14;:::i;:::-;5968:18;;;;5994:22;6024:14;;;;6046:26;;;;5968:4;6046:26;:::i;:::-;6080:27;;;;:4;:27;:::i;:::-;6115:4;:13;;;;;;;;:::i;5885:249::-;5426:776;;5190:1012;;;;;;;;:::o;3328:382::-;3502:47;3529:5;3536:6;3544:4;3502:26;:47::i;:::-;3555:18;-1:-1:-1;;;;;3576:23:22;;:52;;3614:14;;;;:4;:14;:::i;:::-;3576:52;;;3602:9;3576:52;3555:73;-1:-1:-1;3634:71:22;3647:5;3654;3555:73;3673:6;3681:2;3685:19;;;;:4;:19;:::i;:::-;3634:12;:71::i;448:196:26:-;563:36;;-1:-1:-1;;;563:36:26;;-1:-1:-1;;;563:36:26;;;9003:52:27;563:15:26;;;;8976:18:27;;563:36:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;605:34;626:12;;605:20;:34::i;8861:1366:22:-;9200:88;9213:7;9222:5;9229:9;9240:13;9255:9;9266:21;;9200:12;:88::i;:::-;9295:27;9337:28;9367:24;9395:60;9415:5;9422:8;9432:22;;9395:19;:60::i;:::-;9336:119;;-1:-1:-1;9336:119:22;;-1:-1:-1;9336:119:22;-1:-1:-1;9523:23:22;;9519:74;;9565:19;;-1:-1:-1;;;9565:19:22;;;;;;;;;;;9519:74;-1:-1:-1;566:42:22;;-1:-1:-1;9605:26:22;9632:23;;;;:8;:23;:::i;:::-;9657:13;;;;:8;:13;:::i;:::-;9605:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9679:25;9706:22;9732:60;9752:5;9759:8;9769:22;;9732:19;:60::i;:::-;9678:114;;;;9825:1;9811:8;:11;;;:15;:40;;;;;9850:1;9830:17;:21;9811:40;9810:143;;;-1:-1:-1;9863:22:22;;;;:36;;;;:89;;-1:-1:-1;9903:49:22;;;9863:89;9799:424;;;9975:18;;-1:-1:-1;;;9975:18:22;;;;;;;;;;;9799:424;10014:30;10047:45;10070:22;10047:20;:45;:::i;:::-;10014:78;;10129:14;10104:22;:39;10100:117;;;10162:46;;-1:-1:-1;;;10162:46:22;;;;;2698:25:27;;;2671:18;;10162:46:22;;;;;;;10100:117;10006:217;9194:1033;;;8861:1366;;;;;;;;;;;;:::o;7937:638::-;8072:19;;;;:33;:56;;;;-1:-1:-1;8115:8:22;;;;:13;;8072:56;:100;;;;;8150:12;:22;;;8138:5;:8;;;:34;;8072:100;8061:154;;;8194:14;;-1:-1:-1;;;8194:14:22;;;;;;;;;;;8061:154;8225:19;;;;:33;8221:350;;8272:34;;;;:12;:34;:::i;:::-;:41;;8317:1;8272:46;8268:100;;8337:22;;-1:-1:-1;;;8337:22:22;;;;;;;;;;;8268:100;8424:26;;;;8379:34;;;;8424:12;8379:34;:::i;:::-;:41;;:71;8375:133;;8469:30;;-1:-1:-1;;;8469:30:22;;;;;;;;;;;8579:278;8718:19;;;;:33;;;;:81;;-1:-1:-1;8793:6:22;8755:27;;;;:12;:27;:::i;:::-;:34;;:44;;8718:81;8714:139;;;8816:30;;-1:-1:-1;;;8816:30:22;;;;;;;;;;;8714:139;8579:278;;;:::o;616:1337:23:-;787:19;769:14;;;;:5;:14;:::i;:::-;:37;;;;;;;;:::i;:::-;;765:121;;823:10;;;;;;;;:::i;:::-;816:49;;-1:-1:-1;;;816:49:23;;-1:-1:-1;;;;;14821:15:27;;;816:49:23;;;14803:34:27;14873:15;;;14853:18;;;14846:43;14905:18;;;14898:34;;;816:31:23;;;;;;;14738:18:27;;816:49:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;873:7;;765:121;918:20;900:14;;;;:5;:14;:::i;:::-;:38;;;;;;;;:::i;:::-;;896:1013;;952:19;;;;948:358;;1005:10;;;;;;;;:::i;:::-;997:46;;-1:-1:-1;;;997:46:23;;-1:-1:-1;;;;;14821:15:27;;;997:46:23;;;14803:34:27;14873:15;;;14853:18;;;14846:43;14905:18;;;14898:34;;;997:32:23;;;;;;;14738:18:27;;997:46:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1313:7;;948:358;1073:7;1068:230;1084:23;;;;-1:-1:-1;1068:230:23;;;1126:85;1144:5;:19;;;1165:14;;1180:1;1165:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:23;;;;;;;:::i;:::-;1190:14;;1205:1;1190:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;1126:85::-;1231:10;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1223:32:23;;1256:4;1262:2;1266:14;;1281:1;1266:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1223:64;;;;;;-1:-1:-1;;;;;;1223:64:23;;;-1:-1:-1;;;;;14821:15:27;;;1223:64:23;;;14803:34:27;14873:15;;;;14853:18;;;14846:43;1266:20:23;14905:18:27;;;14898:34;14738:18;;1223:64:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1109:3;;;;;:::i;:::-;;;;1068:230;;896:1013;1354:21;1336:14;;;;:5;:14;:::i;:::-;:39;;;;;;;;:::i;:::-;;1332:577;;1389:19;;;;1385:504;;1443:10;;;;;;;;:::i;:::-;1434:63;;-1:-1:-1;;;1434:63:23;;-1:-1:-1;;;;;16492:15:27;;;1434:63:23;;;16474:34:27;16544:15;;;16524:18;;;16517:43;16576:18;;;16569:34;;;16619:18;;;16612:34;;;16454:3;16662:19;;;16655:32;-1:-1:-1;16703:19:27;;;16696:30;1434:37:23;;;;;;;16743:19:27;;1434:63:23;16141:627:27;1385:504:23;1522:17;1549:21;1585:7;1580:221;1596:23;;;;-1:-1:-1;1580:221:23;;;1638:85;1656:5;:19;;;1677:14;;1692:1;1677:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:23;;;;;;;:::i;:::-;1702:14;;1717:1;1702:17;;;;;;;;;:::i;1638:85::-;1744:14;;1759:1;1744:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;;;1735:3;1739:1;1735:6;;;;;;;;;;:::i;:::-;;;;;;:29;;;;;1789:1;1776:7;1784:1;1776:10;;;;;;;;;;:::i;:::-;;;;;;;;;;:14;1621:3;;;;:::i;:::-;;;;1580:221;;;-1:-1:-1;1819:10:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1810:42:23;;1853:4;1859:2;1863:3;1868:7;1810:70;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1512:377;;1896:7;;1332:577;1922:26;;-1:-1:-1;;;1922:26:23;;;;;;;;;;;2873:787;3020:12;;3081:20;3063:14;;;;:5;:14;:::i;:::-;:38;;;;;;;;:::i;:::-;;3059:416;;3126:1;3115:5;:8;;;:12;:62;;;;-1:-1:-1;;;;;;3131:46:23;;3139:10;;;;;;;;:::i;:::-;3131:37;;-1:-1:-1;;;3131:37:23;;3159:8;;;;3131:37;;;2698:25:27;-1:-1:-1;;;;;3131:27:23;;;;;;;2671:18:27;;3131:37:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3131:46:23;;3115:62;3111:358;;;-1:-1:-1;3204:1:23;3111:358;;;3224:19;;;;:33;3220:249;;3274:7;3269:192;3285:23;;;;-1:-1:-1;3269:192:23;;;-1:-1:-1;;;;;3331:58:23;;3339:10;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3331:27:23;;3359:14;;3374:1;3359:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3331:49;;;;;;-1:-1:-1;;;;;;3331:49:23;;;3359:20;;3331:49;;;2698:25:27;2671:18;;3331:49:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3331:58:23;;3327:124;;3405:14;;;;:::i;:::-;;;;3433:5;;3327:124;3310:3;;;;:::i;:::-;;;;3269:192;;;;3220:249;3491:39;3501:5;3508;3515:14;;3491:9;:39::i;:::-;3481:49;-1:-1:-1;3559:21:23;3541:14;;;;:5;:14;:::i;:::-;:39;;;;;;;;:::i;:::-;;:76;;;;-1:-1:-1;3584:19:23;;;;:33;;3541:76;3537:119;;;-1:-1:-1;3642:7:23;3537:119;2873:787;;;;;;;:::o;1957:857::-;2077:4;2111:17;2093:14;;;;:5;:14;:::i;:::-;:35;;;;;;;;:::i;:::-;;2089:76;;-1:-1:-1;;;;;;2145:13:23;;;2138:20;;2089:76;2197:19;2179:14;;;;:5;:14;:::i;:::-;:37;;;;;;;;:::i;:::-;;2175:100;;2240:10;;;;;;;;:::i;:::-;2233:35;;-1:-1:-1;;;2233:35:23;;-1:-1:-1;;;;;18681:32:27;;;2233:35:23;;;18663:51:27;2233:28:23;;;;;;;18636:18:27;;2233:35:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2226:42;;;;2175:100;2307:20;2289:14;;;;:5;:14;:::i;:::-;:38;;;;;;;;:::i;:::-;;2285:102;;2352:10;;;;;;;;:::i;2285:102::-;2419:21;2401:14;;;;:5;:14;:::i;:::-;:39;;;;;;;;:::i;:::-;;2397:373;;2454:8;;;;:12;2450:314;;2494:10;;;;;;;;:::i;:::-;2485:47;;-1:-1:-1;;;2485:47:23;;-1:-1:-1;;;;;9391:32:27;;;2485:47:23;;;9373:51:27;2523:8:23;;;;9440:18:27;;;9433:34;2485:30:23;;;;;;;9346:18:27;;2485:47:23;9199:274:27;2450:314:23;2557:12;;2579:153;2595:23;;;;-1:-1:-1;2579:153:23;;;2711:1;2658:10;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2649:30:23;;2680:5;2687:14;;2702:1;2687:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2649:59;;;;;;-1:-1:-1;;;;;;2649:59:23;;;-1:-1:-1;;;;;9391:32:27;;;2649:59:23;;;9373:51:27;2687:20:23;9440:18:27;;;9433:34;9346:18;;2649:59:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;:71;;2719:1;2649:71;;;2715:1;2649:71;2637:84;;;;;;:::i;:::-;;-1:-1:-1;2620:3:23;;;;:::i;:::-;;;;2579:153;;;-1:-1:-1;2748:7:23;-1:-1:-1;1957:857:23;;;;;;;:::o;14:180:27:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:27;;14:180;-1:-1:-1;14:180:27:o;384:248::-;452:6;460;513:2;501:9;492:7;488:23;484:32;481:52;;;529:1;526;519:12;481:52;-1:-1:-1;;552:23:27;;;622:2;607:18;;;594:32;;-1:-1:-1;384:248:27:o;890:145::-;-1:-1:-1;;;;;979:31:27;;969:42;;959:70;;1025:1;1022;1015:12;1040:154;1098:5;1143:3;1134:6;1129:3;1125:16;1121:26;1118:46;;;1160:1;1157;1150:12;1118:46;-1:-1:-1;1182:6:27;1040:154;-1:-1:-1;1040:154:27:o;1199:600::-;1359:6;1367;1375;1383;1436:3;1424:9;1415:7;1411:23;1407:33;1404:53;;;1453:1;1450;1443:12;1404:53;1492:9;1479:23;1511:45;1550:5;1511:45;:::i;:::-;1575:5;-1:-1:-1;1599:61:27;1652:7;1647:2;1632:18;;1599:61;:::i;:::-;1589:71;;1679:62;1733:7;1727:3;1716:9;1712:19;1679:62;:::i;:::-;1199:600;;;;-1:-1:-1;1669:72:27;;1788:3;1773:19;1760:33;;-1:-1:-1;;1199:600:27:o;1804:743::-;1987:6;1995;2003;2011;2019;2027;2080:3;2068:9;2059:7;2055:23;2051:33;2048:53;;;2097:1;2094;2087:12;2048:53;2136:9;2123:23;2155:45;2194:5;2155:45;:::i;:::-;2219:5;-1:-1:-1;2243:61:27;2296:7;2291:2;2276:18;;2243:61;:::i;:::-;2233:71;;2323:62;2377:7;2371:3;2360:9;2356:19;2323:62;:::i;:::-;2313:72;;2432:3;2421:9;2417:19;2404:33;2394:43;;2484:3;2473:9;2469:19;2456:33;2446:43;;2536:3;2525:9;2521:19;2508:33;2498:43;;1804:743;;;;;;;;:::o;2734:402::-;2836:6;2889:2;2877:9;2868:7;2864:23;2860:32;2857:52;;;2905:1;2902;2895:12;2857:52;2945:9;2932:23;2978:18;2970:6;2967:30;2964:50;;;3010:1;3007;3000:12;2964:50;3033:22;;3089:2;3071:16;;;3067:25;3064:45;;;3105:1;3102;3095:12;3064:45;3128:2;2734:402;-1:-1:-1;;;2734:402:27:o;3141:615::-;3227:6;3235;3288:2;3276:9;3267:7;3263:23;3259:32;3256:52;;;3304:1;3301;3294:12;3256:52;3344:9;3331:23;3373:18;3414:2;3406:6;3403:14;3400:34;;;3430:1;3427;3420:12;3400:34;3468:6;3457:9;3453:22;3443:32;;3513:7;3506:4;3502:2;3498:13;3494:27;3484:55;;3535:1;3532;3525:12;3484:55;3575:2;3562:16;3601:2;3593:6;3590:14;3587:34;;;3617:1;3614;3607:12;3587:34;3670:7;3665:2;3655:6;3652:1;3648:14;3644:2;3640:23;3636:32;3633:45;3630:65;;;3691:1;3688;3681:12;3630:65;3722:2;3714:11;;;;;3744:6;;-1:-1:-1;3141:615:27;;-1:-1:-1;;;;3141:615:27:o;4014:1047::-;4235:6;4243;4251;4259;4267;4275;4328:3;4316:9;4307:7;4303:23;4299:33;4296:53;;;4345:1;4342;4335:12;4296:53;4384:9;4371:23;4403:45;4442:5;4403:45;:::i;:::-;4467:5;-1:-1:-1;4524:2:27;4509:18;;4496:32;4537:47;4496:32;4537:47;:::i;:::-;4603:7;-1:-1:-1;4629:61:27;4682:7;4677:2;4662:18;;4629:61;:::i;:::-;4619:71;;4709:62;4763:7;4757:3;4746:9;4742:19;4709:62;:::i;:::-;4699:72;;4818:3;4807:9;4803:19;4790:33;4780:43;;4874:3;4863:9;4859:19;4846:33;4902:18;4894:6;4891:30;4888:50;;;4934:1;4931;4924:12;4888:50;4957:22;;5013:3;4995:16;;;4991:26;4988:46;;;5030:1;5027;5020:12;4988:46;5053:2;5043:12;;;4014:1047;;;;;;;;:::o;5258:1183::-;5495:6;5503;5511;5519;5527;5535;5543;5551;5604:3;5592:9;5583:7;5579:23;5575:33;5572:53;;;5621:1;5618;5611:12;5572:53;5657:9;5644:23;5634:33;;5717:2;5706:9;5702:18;5689:32;5730:45;5769:5;5730:45;:::i;:::-;5794:5;-1:-1:-1;5818:61:27;5871:7;5866:2;5851:18;;5818:61;:::i;:::-;5808:71;;5898:62;5952:7;5946:3;5935:9;5931:19;5898:62;:::i;:::-;5888:72;;6007:3;5996:9;5992:19;5979:33;5969:43;;6059:3;6048:9;6044:19;6031:33;6021:43;;6116:3;6105:9;6101:19;6088:33;6130:47;6169:7;6130:47;:::i;:::-;6196:7;-1:-1:-1;6254:3:27;6239:19;;6226:33;6282:18;6271:30;;6268:50;;;6314:1;6311;6304:12;6268:50;6337:22;;6393:3;6375:16;;;6371:26;6368:46;;;6410:1;6407;6400:12;6368:46;6433:2;6423:12;;;5258:1183;;;;;;;;;;;:::o;6446:969::-;6617:6;6625;6633;6641;6649;6657;6710:3;6698:9;6689:7;6685:23;6681:33;6678:53;;;6727:1;6724;6717:12;6678:53;6750:52;6794:7;6783:9;6750:52;:::i;:::-;6740:62;;6852:3;6841:9;6837:19;6824:33;6866:45;6905:5;6866:45;:::i;:::-;6930:5;-1:-1:-1;6987:3:27;6972:19;;6959:33;7001:47;6959:33;7001:47;:::i;:::-;7067:7;-1:-1:-1;7121:3:27;7106:19;;7093:33;;-1:-1:-1;7173:3:27;7158:19;;7145:33;;-1:-1:-1;7229:3:27;7214:19;;7201:33;7257:18;7246:30;;7243:50;;;7289:1;7286;7279:12;7243:50;7312:22;;7368:2;7350:16;;;7346:25;7343:45;;;7384:1;7381;7374:12;7420:127;7481:10;7476:3;7472:20;7469:1;7462:31;7512:4;7509:1;7502:15;7536:4;7533:1;7526:15;7552:125;7617:9;;;7638:10;;;7635:36;;;7651:18;;:::i;:::-;7552:125;;;;:::o;7682:261::-;7741:6;7794:2;7782:9;7773:7;7769:23;7765:32;7762:52;;;7810:1;7807;7800:12;7762:52;7849:9;7836:23;7868:45;7907:5;7868:45;:::i;7948:579::-;8075:4;8081:6;8141:11;8128:25;8235:2;8231:7;8220:8;8204:14;8200:29;8196:43;8176:18;8172:68;8162:96;;8254:1;8251;8244:12;8162:96;8281:33;;8333:20;;;-1:-1:-1;8376:18:27;8365:30;;8362:50;;;8408:1;8405;8398:12;8362:50;8441:4;8429:17;;-1:-1:-1;8492:1:27;8488:14;;;8472;8468:35;8458:46;;8455:66;;;8517:1;8514;8507:12;8455:66;7948:579;;;;;:::o;8532:322::-;8623:4;8681:11;8668:25;8775:2;8771:7;8760:8;8744:14;8740:29;8736:43;8716:18;8712:68;8702:96;;8794:1;8791;8784:12;8702:96;8815:33;;;;;8532:322;-1:-1:-1;;8532:322:27:o;9066:128::-;9133:9;;;9154:11;;;9151:37;;;9168:18;;:::i;9478:250::-;9563:1;9573:113;9587:6;9584:1;9581:13;9573:113;;;9663:11;;;9657:18;9644:11;;;9637:39;9609:2;9602:10;9573:113;;;-1:-1:-1;;9720:1:27;9702:16;;9695:27;9478:250::o;9733:384::-;-1:-1:-1;;;;;;9918:33:27;;9906:46;;9975:13;;9888:3;;9997:74;9975:13;10060:1;10051:11;;10044:4;10032:17;;9997:74;:::i;:::-;10091:16;;;;10109:1;10087:24;;9733:384;-1:-1:-1;;;9733:384:27:o;10122:287::-;10251:3;10289:6;10283:13;10305:66;10364:6;10359:3;10352:4;10344:6;10340:17;10305:66;:::i;10414:277::-;10481:6;10534:2;10522:9;10513:7;10509:23;10505:32;10502:52;;;10550:1;10547;10540:12;10502:52;10582:9;10576:16;10635:5;10628:13;10621:21;10614:5;10611:32;10601:60;;10657:1;10654;10647:12;11040:127;11101:10;11096:3;11092:20;11089:1;11082:31;11132:4;11129:1;11122:15;11156:4;11153:1;11146:15;11172:897;11252:6;11305:2;11293:9;11284:7;11280:23;11276:32;11273:52;;;11321:1;11318;11311:12;11273:52;11354:9;11348:16;11383:18;11424:2;11416:6;11413:14;11410:34;;;11440:1;11437;11430:12;11410:34;11478:6;11467:9;11463:22;11453:32;;11523:7;11516:4;11512:2;11508:13;11504:27;11494:55;;11545:1;11542;11535:12;11494:55;11574:2;11568:9;11596:2;11592;11589:10;11586:36;;;11602:18;;:::i;:::-;11677:2;11671:9;11645:2;11731:13;;-1:-1:-1;;11727:22:27;;;11751:2;11723:31;11719:40;11707:53;;;11775:18;;;11795:22;;;11772:46;11769:72;;;11821:18;;:::i;:::-;11861:10;11857:2;11850:22;11896:2;11888:6;11881:18;11936:7;11931:2;11926;11922;11918:11;11914:20;11911:33;11908:53;;;11957:1;11954;11947:12;11908:53;11970:68;12035:2;12030;12022:6;12018:15;12013:2;12009;12005:11;11970:68;:::i;:::-;12057:6;11172:897;-1:-1:-1;;;;;;;11172:897:27:o;12074:471::-;12251:2;12240:9;12233:21;12214:4;12283:6;12277:13;12326:6;12321:2;12310:9;12306:18;12299:34;12342:81;12416:6;12411:2;12400:9;12396:18;12389:4;12381:6;12377:17;12342:81;:::i;:::-;12525:4;12510:20;;12503:36;;;;-1:-1:-1;12484:2:27;12463:15;;;;-1:-1:-1;;12459:29:27;12444:45;12491:2;12440:54;;12074:471;-1:-1:-1;12074:471:27:o;12550:184::-;12620:6;12673:2;12661:9;12652:7;12648:23;12644:32;12641:52;;;12689:1;12686;12679:12;12641:52;-1:-1:-1;12712:16:27;;12550:184;-1:-1:-1;12550:184:27:o;13135:521::-;13212:4;13218:6;13278:11;13265:25;13372:2;13368:7;13357:8;13341:14;13337:29;13333:43;13313:18;13309:68;13299:96;;13391:1;13388;13381:12;13299:96;13418:33;;13470:20;;;-1:-1:-1;13513:18:27;13502:30;;13499:50;;;13545:1;13542;13535:12;13499:50;13578:4;13566:17;;-1:-1:-1;13609:14:27;13605:27;;;13595:38;;13592:58;;;13646:1;13643;13636:12;13661:485;-1:-1:-1;;;;;13846:32:27;;13828:51;;13915:2;13910;13895:18;;13888:30;;;13934:18;;13927:34;;;13954:6;14003;13998:2;13983:18;;13970:48;14067:1;14038:22;;;14062:2;14034:31;;;14027:42;;;;14130:2;14109:15;;;-1:-1:-1;;14105:29:27;14090:45;14086:54;;13661:485;-1:-1:-1;;13661:485:27:o;14151:127::-;14212:10;14207:3;14203:20;14200:1;14193:31;14243:4;14240:1;14233:15;14267:4;14264:1;14257:15;14283:275;14361:6;14414:2;14402:9;14393:7;14389:23;14385:32;14382:52;;;14430:1;14427;14420:12;14382:52;14469:9;14456:23;14508:1;14501:5;14498:12;14488:40;;14524:1;14521;14514:12;14943:127;15004:10;14999:3;14995:20;14992:1;14985:31;15035:4;15032:1;15025:15;15059:4;15056:1;15049:15;15961:175;15998:3;16042:4;16035:5;16031:16;16071:4;16062:7;16059:17;16056:43;;16079:18;;:::i;:::-;16128:1;16115:15;;15961:175;-1:-1:-1;;15961:175:27:o;16773:435::-;16826:3;16864:5;16858:12;16891:6;16886:3;16879:19;16917:4;16946:2;16941:3;16937:12;16930:19;;16983:2;16976:5;16972:14;17004:1;17014:169;17028:6;17025:1;17022:13;17014:169;;;17089:13;;17077:26;;17123:12;;;;17158:15;;;;17050:1;17043:9;17014:169;;;-1:-1:-1;17199:3:27;;16773:435;-1:-1:-1;;;;;16773:435:27:o;17213:889::-;-1:-1:-1;;;;;17664:15:27;;;17646:34;;17716:15;;17711:2;17696:18;;17689:43;17626:3;17763:2;17748:18;;17741:31;;;17589:4;;17795:57;;17832:19;;17824:6;17795:57;:::i;:::-;17900:9;17892:6;17888:22;17883:2;17872:9;17868:18;17861:50;17934:44;17971:6;17963;17934:44;:::i;:::-;18015:22;;;18009:3;17994:19;;;17987:51;;;;-1:-1:-1;;18062:1:27;18047:17;;18093:2;18081:15;;17213:889;-1:-1:-1;;;;17213:889:27:o;18107:265::-;18177:6;18230:2;18218:9;18209:7;18205:23;18201:32;18198:52;;;18246:1;18243;18236:12;18198:52;18278:9;18272:16;18297:45;18336:5;18297:45;:::i;18377:135::-;18416:3;18437:17;;;18434:43;;18457:18;;:::i;:::-;-1:-1:-1;18504:1:27;18493:13;;18377:135::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "bindLimitSwapFills(bytes32[])": "61ebbca8",
    "createSeaportListing(bytes32)": "6fc4fde7",
    "defaultBlock()": "f9e3e2fc",
    "failed()": "ba414fa6",
    "invertLimitSwapFills(bytes32,bytes32)": "193a0f62",
    "limitSwap(bytes32,address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,uint256,address,(address,uint256,uint256,(uint256,bytes32[])[],(uint256,bytes32[])[],(address,bytes)))": "f0f6ee2a",
    "mainnetFork()": "40362fea",
    "marketSwapExactInput(address,address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,(address,uint256,(uint256,bytes32[])[],(uint256,bytes32[])[],(address,bytes)))": "89dee6ab",
    "marketSwapExactOutput(address,address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,(address,uint256,(uint256,bytes32[])[],(uint256,bytes32[])[],(address,bytes)))": "be330dbd",
    "maxRuns(bytes32,uint256)": "b4caf1cb",
    "requireBitNotUsed(uint256,uint256)": "181233ee",
    "requireBitUsed(uint256,uint256)": "47244b0d",
    "requireBlockMined(uint256)": "02908ed3",
    "requireBlockNotMined(uint256)": "502929ff",
    "requireBlocksElapsed(bytes32,uint256)": "65c8efda",
    "requireLimitSwapFilled(bytes32)": "4ef935ca",
    "requireLimitSwapOpen(bytes32)": "0f984250",
    "requirePriceDecrease(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,uint256,uint256)": "333aa2fc",
    "requirePriceIncrease(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,uint256,uint256)": "db5b273a",
    "requirePriceLowerBound(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256)": "8129ef95",
    "requirePriceUpperBound(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256)": "1ccf3c0c",
    "requireStake((bytes))": "48213e22",
    "setUp()": "0a9254e4",
    "setupFork()": "d46b8d2c",
    "setupFork(uint256)": "f0c27e3d",
    "testBlockIsMined()": "98bc97c7",
    "testBlockIsMining()": "f868f99c",
    "testBlockIsNotMined()": "00f4b4de",
    "transfer((uint8,address,bytes32,uint256),address,address,uint256,uint256,(address,(uint256,bytes32[])[]))": "f7440e16",
    "useBit(uint256,uint256)": "a9aa5f7e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BlockMined\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BlockNotMined\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1155IdNotProvided\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleProofAndAmountMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleProofsRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftIdAlreadyOwned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftIdNotReceived\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"NotEnoughTokenReceived\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerHasNft\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedTokenStandard\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"swapsIds\",\"type\":\"bytes32[]\"}],\"name\":\"bindLimitSwapFills\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"createSeaportListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"swap0\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"swap1\",\"type\":\"bytes32\"}],\"name\":\"invertLimitSwapFills\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"tokenIn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"tokenOut\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenInAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"basePrice\",\"type\":\"uint256\"},{\"internalType\":\"contract IPriceCurve\",\"name\":\"priceCurve\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenInAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenInId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct TokenHelper.IdMerkleProof[]\",\"name\":\"tokenInIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct TokenHelper.IdMerkleProof[]\",\"name\":\"tokenOutIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.Call\",\"name\":\"fillCall\",\"type\":\"tuple\"}],\"internalType\":\"struct Primatives01.UnsignedLimitSwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"limitSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainnetFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"tokenIn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"tokenOut\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenInAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenInId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct TokenHelper.IdMerkleProof[]\",\"name\":\"tokenInIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct TokenHelper.IdMerkleProof[]\",\"name\":\"tokenOutIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.Call\",\"name\":\"fillCall\",\"type\":\"tuple\"}],\"internalType\":\"struct Primatives01.UnsignedMarketSwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"marketSwapExactInput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"tokenIn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"tokenOut\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenOutAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenInId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct TokenHelper.IdMerkleProof[]\",\"name\":\"tokenInIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct TokenHelper.IdMerkleProof[]\",\"name\":\"tokenOutIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.Call\",\"name\":\"fillCall\",\"type\":\"tuple\"}],\"internalType\":\"struct Primatives01.UnsignedMarketSwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"marketSwapExactOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfRuns\",\"type\":\"uint256\"}],\"name\":\"maxRuns\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bit\",\"type\":\"uint256\"}],\"name\":\"requireBitNotUsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bit\",\"type\":\"uint256\"}],\"name\":\"requireBitUsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"requireBlockMined\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"requireBlockNotMined\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfBlocksElapsed\",\"type\":\"uint256\"}],\"name\":\"requireBlocksElapsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"requireLimitSwapFilled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"requireLimitSwapOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceDeltaOracle\",\"name\":\"priceDeltaOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceDecrease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceDeltaOracle\",\"name\":\"priceDeltaOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceIncrease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceLowerBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceUpperBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"stakerSignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.UnsignedStakeProofData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"requireStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setupFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"setupFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBlockIsMined\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBlockIsMining\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBlockIsNotMined\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum TokenHelper.TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenHelper.Token\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct TokenHelper.IdMerkleProof[]\",\"name\":\"idMerkleProofs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Primatives01.UnsignedTransferData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bit\",\"type\":\"uint256\"}],\"name\":\"useBit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Primatives01_requireBlockNotMined.sol\":\"Primatives01_requireBlockNotMined\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":brink-core/=lib/brink-core/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd\",\"dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec\",\"dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0\",\"dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc\",\"dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3\",\"dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc\",\"dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51\",\"dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/Interfaces/ICallExecutor.sol\":{\"keccak256\":\"0x8330730889b5974571981232458f574522298c8fc1a9490b9a9d3ea88b1b72ad\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7579e934b5e7fb43c0e5af573fc94fa0d91b82ee68d60619ad7bf3a6d46fbf85\",\"dweb:/ipfs/QmUhyDX2xUSfwa8vkj6nJLpNYpqtwcRYe9cGGkHj3Sup7c\"]},\"src/Interfaces/IPriceCurve.sol\":{\"keccak256\":\"0x9063ca09de1597f770c9ebb6893984f7d51c15e5280c9910787c20c62b9d79d5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fdcc118d4326244a4c53c983db860c3a28b6485b83787f879b76d358c99a47e5\",\"dweb:/ipfs/QmXeY2bY1FL8AdwXR8kr5TRqjrBHiefB5e2bomtYvk5PME\"]},\"src/Interfaces/IPriceDeltaOracle.sol\":{\"keccak256\":\"0x845b060718c518189ec326b5eedbf2d4376ac983b274ae7b9161526141fcb7ef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://60578d5a214e46666a50d49837a0a249d88daf7443ea637e75c7ffaacc6a02d5\",\"dweb:/ipfs/QmVTFR1Hv7fY416qzVKaFYPvXD8ibRddhELk4rUt5Bh47d\"]},\"src/Interfaces/IPriceOracle.sol\":{\"keccak256\":\"0xc7714e7401400be8c2a5be8ae7bd64cb2d1a1271f648d93c3ca8d1f1bbca8240\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f3e97e402f09afeb53c313c9fa26c158990d9a07593e01625346f7927dc955bc\",\"dweb:/ipfs/QmaQ5HpR9Txzid4M8mbJJU2WX8ce9nqCQ8km8DChPCt9y1\"]},\"src/Primatives/Primatives01.sol\":{\"keccak256\":\"0x4e75778e63055b8702e3319d4867a54f2eedce15ef07443bead6c97bdb0e8158\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2b043b9b16b1286a2dbd5881649d3bacff2493dbfb9446595a71c59a4dd3324b\",\"dweb:/ipfs/QmVoUse7RBVcQUdqWqwtMk4d73TXoDuH4g2tXWF4ZWG1fJ\"]},\"src/TokenHelper/TokenHelper.sol\":{\"keccak256\":\"0x34fcf78893190e9308b2c9e676743bd5415d0250c4bc40cfa1a031f188af8786\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b807812affea52ce18955cf36ca7a7579f9ee20ea47885228905a10de23d3490\",\"dweb:/ipfs/QmaEP2vimRHBABvBCgQTNYKG5cTZQuaEHfqYyCHbJMTLLS\"]},\"test/Helper.sol\":{\"keccak256\":\"0xcfbd13e52214e9d42121715e6151c79cb691a91d4f551280299cd7c339b3b84b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7a808bbbbd9d68c63aa7d990b277492a1bf016e23d5edc514c9a2b49f8a71aa9\",\"dweb:/ipfs/QmPf5dfKZNkfrw8X1v4aehFz4ojs9yYgGR545ptwimjXVx\"]},\"test/Primatives01_requireBlockNotMined.sol\":{\"keccak256\":\"0x8e11444d75f41f67cb3e48710b7c782a3b4adc3460835d5a9cfb270735b7bdab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2a2cc768ae8a001bc9b126db5b308c0d15de0dcdaf1a7cf95bfaac755d01257b\",\"dweb:/ipfs/Qmdz1A8Ki1z7sxYUDtkiSrPDF7NuN4FbLwehwRpftDvv6E\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "BlockMined"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BlockNotMined"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC1155IdNotProvided"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IdNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MerkleProofAndAmountMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MerkleProofsRequired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NftIdAlreadyOwned"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NftIdNotReceived"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountReceived",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotEnoughTokenReceived"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerHasNft"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedTokenStandard"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "swapsIds",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bindLimitSwapFills"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createSeaportListing"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "swap0",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "swap1",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "invertLimitSwapFills"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "struct TokenHelper.Token",
              "name": "tokenIn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct TokenHelper.Token",
              "name": "tokenOut",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "tokenInAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "basePrice",
              "type": "uint256"
            },
            {
              "internalType": "contract IPriceCurve",
              "name": "priceCurve",
              "type": "address"
            },
            {
              "internalType": "struct Primatives01.UnsignedLimitSwapData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct TokenHelper.IdMerkleProof[]",
                  "name": "tokenInIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct TokenHelper.IdMerkleProof[]",
                  "name": "tokenOutIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct Primatives01.Call",
                  "name": "fillCall",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "limitSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mainnetFork",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "struct TokenHelper.Token",
              "name": "tokenIn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct TokenHelper.Token",
              "name": "tokenOut",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "tokenInAmount",
              "type": "uint256"
            },
            {
              "internalType": "struct Primatives01.UnsignedMarketSwapData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct TokenHelper.IdMerkleProof[]",
                  "name": "tokenInIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct TokenHelper.IdMerkleProof[]",
                  "name": "tokenOutIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct Primatives01.Call",
                  "name": "fillCall",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "marketSwapExactInput"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "struct TokenHelper.Token",
              "name": "tokenIn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct TokenHelper.Token",
              "name": "tokenOut",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "tokenOutAmount",
              "type": "uint256"
            },
            {
              "internalType": "struct Primatives01.UnsignedMarketSwapData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct TokenHelper.IdMerkleProof[]",
                  "name": "tokenInIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct TokenHelper.IdMerkleProof[]",
                  "name": "tokenOutIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct Primatives01.Call",
                  "name": "fillCall",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "marketSwapExactOutput"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "numberOfRuns",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "maxRuns"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bitmapIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireBitNotUsed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bitmapIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireBitUsed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requireBlockMined"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requireBlockNotMined"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "numberOfBlocksElapsed",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireBlocksElapsed"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireLimitSwapFilled"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireLimitSwapOpen"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceDeltaOracle",
              "name": "priceDeltaOracle",
              "type": "address"
            },
            {
              "internalType": "struct TokenHelper.Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct TokenHelper.Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceDecrease"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceDeltaOracle",
              "name": "priceDeltaOracle",
              "type": "address"
            },
            {
              "internalType": "struct TokenHelper.Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct TokenHelper.Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceIncrease"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "struct TokenHelper.Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct TokenHelper.Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceLowerBound"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "struct TokenHelper.Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct TokenHelper.Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceUpperBound"
        },
        {
          "inputs": [
            {
              "internalType": "struct Primatives01.UnsignedStakeProofData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "stakerSignature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireStake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setupFork"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setupFork"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBlockIsMined"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBlockIsMining"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testBlockIsNotMined"
        },
        {
          "inputs": [
            {
              "internalType": "struct TokenHelper.Token",
              "name": "token",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenHelper.TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "struct Primatives01.UnsignedTransferData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "struct TokenHelper.IdMerkleProof[]",
                  "name": "idMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bitmapIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "useBit"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":brink-core/=lib/brink-core/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Primatives01_requireBlockNotMined.sol": "Primatives01_requireBlockNotMined"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213",
        "urls": [
          "bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd",
          "dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524",
        "urls": [
          "bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec",
          "dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606",
        "urls": [
          "bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0",
          "dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269",
        "urls": [
          "bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc",
          "dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d",
        "urls": [
          "bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3",
          "dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf",
        "urls": [
          "bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc",
          "dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521",
        "urls": [
          "bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51",
          "dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/Interfaces/ICallExecutor.sol": {
        "keccak256": "0x8330730889b5974571981232458f574522298c8fc1a9490b9a9d3ea88b1b72ad",
        "urls": [
          "bzz-raw://7579e934b5e7fb43c0e5af573fc94fa0d91b82ee68d60619ad7bf3a6d46fbf85",
          "dweb:/ipfs/QmUhyDX2xUSfwa8vkj6nJLpNYpqtwcRYe9cGGkHj3Sup7c"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Interfaces/IPriceCurve.sol": {
        "keccak256": "0x9063ca09de1597f770c9ebb6893984f7d51c15e5280c9910787c20c62b9d79d5",
        "urls": [
          "bzz-raw://fdcc118d4326244a4c53c983db860c3a28b6485b83787f879b76d358c99a47e5",
          "dweb:/ipfs/QmXeY2bY1FL8AdwXR8kr5TRqjrBHiefB5e2bomtYvk5PME"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Interfaces/IPriceDeltaOracle.sol": {
        "keccak256": "0x845b060718c518189ec326b5eedbf2d4376ac983b274ae7b9161526141fcb7ef",
        "urls": [
          "bzz-raw://60578d5a214e46666a50d49837a0a249d88daf7443ea637e75c7ffaacc6a02d5",
          "dweb:/ipfs/QmVTFR1Hv7fY416qzVKaFYPvXD8ibRddhELk4rUt5Bh47d"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Interfaces/IPriceOracle.sol": {
        "keccak256": "0xc7714e7401400be8c2a5be8ae7bd64cb2d1a1271f648d93c3ca8d1f1bbca8240",
        "urls": [
          "bzz-raw://f3e97e402f09afeb53c313c9fa26c158990d9a07593e01625346f7927dc955bc",
          "dweb:/ipfs/QmaQ5HpR9Txzid4M8mbJJU2WX8ce9nqCQ8km8DChPCt9y1"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Primatives/Primatives01.sol": {
        "keccak256": "0x4e75778e63055b8702e3319d4867a54f2eedce15ef07443bead6c97bdb0e8158",
        "urls": [
          "bzz-raw://2b043b9b16b1286a2dbd5881649d3bacff2493dbfb9446595a71c59a4dd3324b",
          "dweb:/ipfs/QmVoUse7RBVcQUdqWqwtMk4d73TXoDuH4g2tXWF4ZWG1fJ"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/TokenHelper/TokenHelper.sol": {
        "keccak256": "0x34fcf78893190e9308b2c9e676743bd5415d0250c4bc40cfa1a031f188af8786",
        "urls": [
          "bzz-raw://b807812affea52ce18955cf36ca7a7579f9ee20ea47885228905a10de23d3490",
          "dweb:/ipfs/QmaEP2vimRHBABvBCgQTNYKG5cTZQuaEHfqYyCHbJMTLLS"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/Helper.sol": {
        "keccak256": "0xcfbd13e52214e9d42121715e6151c79cb691a91d4f551280299cd7c339b3b84b",
        "urls": [
          "bzz-raw://7a808bbbbd9d68c63aa7d990b277492a1bf016e23d5edc514c9a2b49f8a71aa9",
          "dweb:/ipfs/QmPf5dfKZNkfrw8X1v4aehFz4ojs9yYgGR545ptwimjXVx"
        ],
        "license": "UNLICENSED"
      },
      "test/Primatives01_requireBlockNotMined.sol": {
        "keccak256": "0x8e11444d75f41f67cb3e48710b7c782a3b4adc3460835d5a9cfb270735b7bdab",
        "urls": [
          "bzz-raw://2a2cc768ae8a001bc9b126db5b308c0d15de0dcdaf1a7cf95bfaac755d01257b",
          "dweb:/ipfs/Qmdz1A8Ki1z7sxYUDtkiSrPDF7NuN4FbLwehwRpftDvv6E"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Primatives01_requireBlockNotMined.sol",
    "id": 27225,
    "exportedSymbols": {
      "BlockMined": [
        25864
      ],
      "BlockNotMined": [
        25866
      ],
      "DSTest": [
        1786
      ],
      "Helper": [
        27109
      ],
      "ICallExecutor": [
        25813
      ],
      "IERC1155": [
        25597
      ],
      "IERC165": [
        25803
      ],
      "IERC20": [
        25675
      ],
      "IERC721": [
        25791
      ],
      "IPriceCurve": [
        25829
      ],
      "IPriceDeltaOracle": [
        25837
      ],
      "IPriceOracle": [
        25845
      ],
      "MerkleProofAndAmountMismatch": [
        25862
      ],
      "NftIdAlreadyOwned": [
        25854
      ],
      "NftIdNotReceived": [
        25856
      ],
      "NotEnoughTokenReceived": [
        25860
      ],
      "Primatives01": [
        26585
      ],
      "Primatives01_requireBlockNotMined": [
        27224
      ],
      "StdAssertions": [
        2671
      ],
      "StdChains": [
        3207
      ],
      "StdCheats": [
        5144
      ],
      "StdStorage": [
        6051
      ],
      "StdUtils": [
        8116
      ],
      "Test": [
        8158
      ],
      "TestBase": [
        1843
      ],
      "TokenHelper": [
        27067
      ],
      "Vm": [
        9315
      ],
      "console": [
        17379
      ],
      "console2": [
        25475
      ],
      "stdError": [
        5210
      ],
      "stdJson": [
        5877
      ],
      "stdMath": [
        6019
      ],
      "stdStorage": [
        7485
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:810:26",
    "nodes": [
      {
        "id": 27165,
        "nodeType": "PragmaDirective",
        "src": "39:24:26",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 27166,
        "nodeType": "ImportDirective",
        "src": "65:28:26",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27225,
        "sourceUnit": 8159,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27167,
        "nodeType": "ImportDirective",
        "src": "94:44:26",
        "nodes": [],
        "absolutePath": "src/Primatives/Primatives01.sol",
        "file": "../src/Primatives/Primatives01.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27225,
        "sourceUnit": 26586,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27168,
        "nodeType": "ImportDirective",
        "src": "139:22:26",
        "nodes": [],
        "absolutePath": "test/Helper.sol",
        "file": "./Helper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27225,
        "sourceUnit": 27110,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27224,
        "nodeType": "ContractDefinition",
        "src": "163:685:26",
        "nodes": [
          {
            "id": 27181,
            "nodeType": "FunctionDefinition",
            "src": "242:47:26",
            "nodes": [],
            "body": {
              "id": 27180,
              "nodeType": "Block",
              "src": "267:22:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27177,
                      "name": "setupFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        27085,
                        27108
                      ],
                      "referencedDeclaration": 27085,
                      "src": "273:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 27178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "273:11:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27179,
                  "nodeType": "ExpressionStatement",
                  "src": "273:11:26"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "251:5:26",
            "parameters": {
              "id": 27175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "257:2:26"
            },
            "returnParameters": {
              "id": 27176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "267:0:26"
            },
            "scope": 27224,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27191,
            "nodeType": "FunctionDefinition",
            "src": "293:151:26",
            "nodes": [],
            "body": {
              "id": 27190,
              "nodeType": "Block",
              "src": "337:107:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 27185,
                          "name": "defaultBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27075,
                          "src": "422:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 27186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "437:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "422:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27184,
                      "name": "requireBlockNotMined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25977,
                      "src": "401:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 27188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "401:38:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27189,
                  "nodeType": "ExpressionStatement",
                  "src": "401:38:26"
                }
              ]
            },
            "functionSelector": "00f4b4de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBlockIsNotMined",
            "nameLocation": "302:19:26",
            "parameters": {
              "id": 27182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "322:2:26"
            },
            "returnParameters": {
              "id": 27183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "337:0:26"
            },
            "scope": 27224,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27206,
            "nodeType": "FunctionDefinition",
            "src": "448:196:26",
            "nodes": [],
            "body": {
              "id": 27205,
              "nodeType": "Block",
              "src": "485:159:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 27197,
                          "name": "BlockMined",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25864,
                          "src": "579:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 27198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "590:8:26",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "579:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 27194,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "563:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9315",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "566:12:26",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9084,
                      "src": "563:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 27199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "563:36:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27200,
                  "nodeType": "ExpressionStatement",
                  "src": "563:36:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27202,
                        "name": "defaultBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27075,
                        "src": "626:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27201,
                      "name": "requireBlockNotMined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25977,
                      "src": "605:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 27203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:34:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27204,
                  "nodeType": "ExpressionStatement",
                  "src": "605:34:26"
                }
              ]
            },
            "functionSelector": "f868f99c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBlockIsMining",
            "nameLocation": "457:17:26",
            "parameters": {
              "id": 27192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:2:26"
            },
            "returnParameters": {
              "id": 27193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "485:0:26"
            },
            "scope": 27224,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27223,
            "nodeType": "FunctionDefinition",
            "src": "648:197:26",
            "nodes": [],
            "body": {
              "id": 27222,
              "nodeType": "Block",
              "src": "684:161:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 27212,
                          "name": "BlockMined",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25864,
                          "src": "776:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 27213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "787:8:26",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "776:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 27209,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "760:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9315",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "763:12:26",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9084,
                      "src": "760:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 27214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "760:36:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27215,
                  "nodeType": "ExpressionStatement",
                  "src": "760:36:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 27217,
                          "name": "defaultBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27075,
                          "src": "823:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 27218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "838:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "823:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27216,
                      "name": "requireBlockNotMined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25977,
                      "src": "802:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 27220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "802:38:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27221,
                  "nodeType": "ExpressionStatement",
                  "src": "802:38:26"
                }
              ]
            },
            "functionSelector": "98bc97c7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBlockIsMined",
            "nameLocation": "657:16:26",
            "parameters": {
              "id": 27207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "674:2:26"
            },
            "returnParameters": {
              "id": 27208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "684:0:26"
            },
            "scope": 27224,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 27169,
              "name": "Primatives01",
              "nameLocations": [
                "209:12:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26585,
              "src": "209:12:26"
            },
            "id": 27170,
            "nodeType": "InheritanceSpecifier",
            "src": "209:12:26"
          },
          {
            "baseName": {
              "id": 27171,
              "name": "Test",
              "nameLocations": [
                "223:4:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8158,
              "src": "223:4:26"
            },
            "id": 27172,
            "nodeType": "InheritanceSpecifier",
            "src": "223:4:26"
          },
          {
            "baseName": {
              "id": 27173,
              "name": "Helper",
              "nameLocations": [
                "229:6:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27109,
              "src": "229:6:26"
            },
            "id": 27174,
            "nodeType": "InheritanceSpecifier",
            "src": "229:6:26"
          }
        ],
        "canonicalName": "Primatives01_requireBlockNotMined",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          27224,
          27109,
          8158,
          1843,
          1840,
          8116,
          5144,
          4755,
          3207,
          2671,
          1786,
          26585,
          27067
        ],
        "name": "Primatives01_requireBlockNotMined",
        "nameLocation": "172:33:26",
        "scope": 27225,
        "usedErrors": [
          25854,
          25856,
          25860,
          25862,
          25864,
          25866,
          26613,
          26615,
          26617,
          26619,
          26621
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 26
}