{
  "abi": [
    {
      "inputs": [],
      "name": "BlockMined",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BlockNotMined",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IdNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MerkleProofAndAmountMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MerkleProofsRequired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NftIdAlreadyOwned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NftIdNotReceived",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "NotEnoughTokenReceived",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedTokenStandard",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC_Token",
      "outputs": [
        {
          "internalType": "enum TokenStandard",
          "name": "standard",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "idsMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH_Token",
      "outputs": [
        {
          "internalType": "enum TokenStandard",
          "name": "standard",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "idsMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "swapsIds",
          "type": "bytes32[]"
        }
      ],
      "name": "bindLimitSwapFills",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "createSeaportListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "swap0",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "swap1",
          "type": "bytes32"
        }
      ],
      "name": "invertLimitSwapFills",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenIn",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenOut",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenInAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "basePrice",
          "type": "uint256"
        },
        {
          "internalType": "contract IPriceCurve",
          "name": "priceCurve",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenInAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenInId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenInIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenOutIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Primatives01.Call",
              "name": "fillCall",
              "type": "tuple"
            }
          ],
          "internalType": "struct Primatives01.UnsignedLimitSwapData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "limitSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mainnetFork",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oracleContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "oracleCall",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenIn",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenOut",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenInAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenInId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenInIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenOutIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Primatives01.Call",
              "name": "fillCall",
              "type": "tuple"
            }
          ],
          "internalType": "struct Primatives01.UnsignedMarketSwapData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "marketSwapExactInput",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenIn",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenOut",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenOutAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenInId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenInIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenOutIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Primatives01.Call",
              "name": "fillCall",
              "type": "tuple"
            }
          ],
          "internalType": "struct Primatives01.UnsignedMarketSwapData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "marketSwapExactOutput",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "numberOfRuns",
          "type": "uint256"
        }
      ],
      "name": "maxRuns",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bitmapIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bit",
          "type": "uint256"
        }
      ],
      "name": "requireBitNotUsed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bitmapIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bit",
          "type": "uint256"
        }
      ],
      "name": "requireBitUsed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "requireBlockMined",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "requireBlockNotMined",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "numberOfBlocksElapsed",
          "type": "uint256"
        }
      ],
      "name": "requireBlocksElapsed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "requireLimitSwapFilled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "requireLimitSwapOpen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceDeltaOracle",
          "name": "priceDeltaOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceDecrease",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceDeltaOracle",
          "name": "priceDeltaOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceIncrease",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceLowerBound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceUpperBound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "stakerSignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Primatives01.UnsignedStakeProofData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "requireStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupFork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "setupFork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBlockIsMined",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBlockIsMining",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBlockIsNotMined",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "token",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "idMerkleProofs",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Primatives01.UnsignedTransferData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bitmapIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bit",
          "type": "uint256"
        }
      ],
      "name": "useBit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6000805460ff1916600117815562fb8aed601355601580546001600160a01b031990811673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc29081179092556016805490911673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48908117909155608083905260a09190915260c082905260e0829052601780546001600160a81b031990811674c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200179091556018839055601983905561018060405261010083905261012091909152610140829052610160829052601a805490911674a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800179055601b819055601c553480156100fc57600080fd5b506120fa8061010c6000396000f3fe608060405234801561001057600080fd5b50600436106102105760003560e01c80636fc4fde711610125578063cc83c9ec116100ad578063f0f6ee2a1161007c578063f0f6ee2a146103cb578063f7440e16146103de578063f868f99c146103f1578063f9e3e2fc146103f9578063fa7626d41461040257600080fd5b8063cc83c9ec1461038b578063d46b8d2c146103b0578063db5b273a14610271578063f0c27e3d146103b857600080fd5b8063a9aa5f7e116100f4578063a9aa5f7e1461024b578063ad5c46481461034d578063b4caf1cb1461024b578063ba414fa614610360578063be330dbd1461037857600080fd5b80636fc4fde71461023a5780638129ef951461025d57806389a302711461031a57806398bc97c71461034557600080fd5b806340362fea116101a8578063502929ff11610177578063502929ff146102b157806356aa0ea6146102c457806361ebbca8146102f957806365c8efda1461024b57806367fde9df1461030757600080fd5b806340362fea1461028757806347244b0d1461024b57806348213e22146102a35780634ef935ca1461023a57600080fd5b8063181233ee116101e4578063181233ee1461024b578063193a0f621461024b5780631ccf3c0c1461025d578063333aa2fc1461027157600080fd5b8062f4b4de1461021557806302908ed31461021f5780630a9254e4146102325780630f9842501461023a575b600080fd5b61021d61040f565b005b61021d61022d366004611467565b610423565b61021d610444565b61021d610248366004611467565b50565b61021d610259366004611480565b5050565b61021d61026b3660046115ef565b50505050565b61021d61027f366004611640565b505050505050565b61029060145481565b6040519081526020015b60405180910390f35b61021d610248366004611724565b61021d6102bf366004611467565b61044c565b6017546018546019546102e99260ff8116926101009091046001600160a01b03169184565b60405161029a94939291906117bc565b61021d61024836600461188c565b61021d610315366004611a91565b61046c565b60165461032d906001600160a01b031681565b6040516001600160a01b03909116815260200161029a565b61021d6104b2565b60155461032d906001600160a01b031681565b61036861052f565b604051901515815260200161029a565b61021d610386366004611b4c565b61065a565b601a54601b54601c546102e99260ff8116926101009091046001600160a01b03169184565b61021d61068b565b61021d6103c6366004611467565b610692565b61021d6103d9366004611bdc565b610800565b61021d6103ec366004611d21565b6108d1565b61021d610909565b61029060135481565b6000546103689060ff1681565b61042160135460016102bf9190611e03565b565b438111156102485760405163281f6f0d60e01b815260040160405180910390fd5b61042161068b565b4381116102485760405163c64743d560e01b815260040160405180910390fd5b600061047988888561097f565b90506104a86040518060400160405280600b81526020016a52455155495245443a257360a81b8152508261098c565b5050505050505050565b604051630618f58760e51b815263c64743d560e01b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801561050557600080fd5b505af1158015610519573d6000803e3d6000fd5b5050505061042160016013546102bf9190611e1c565b60008054610100900460ff161561054f5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156106555760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916105dd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611e53565b60408051601f19818403018152908290526105f791611e84565b6000604051808303816000865af19150503d8060008114610634576040519150601f19603f3d011682016040523d82523d6000602084013e610639565b606091505b50915050808060200190518101906106519190611ea0565b9150505b919050565b600061068285858885600001518588886020015189604001518a606001518b608001516109d1565b50505050505050565b6104216013545b60405163f877cb1960e01b815260206004820152600f60248201526e1350525393915517d49410d7d55493608a1b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636ba3ba2b90829063f877cb1990606401600060405180830381865afa158015610709573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107319190810190611ec2565b836040518363ffffffff1660e01b815260040161074f929190611f64565b6020604051808303816000875af115801561076e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107929190611f86565b6014819055604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b1580156107e557600080fd5b505af11580156107f9573d6000803e3d6000fd5b5050505050565b61080a8682610b29565b60008060208301516040516306e5639760e21b815260048101889052602481018790526044810183905260648101919091529091506000906001600160a01b03851690631b958e5c906084016020604051808303816000875af1158015610875573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108999190611f86565b90506108c588888b866000015187602001518689604001518a606001518b608001518c60a001516109d1565b50505050505050505050565b6108dc868483610bc9565b60006001600160a01b0385166108f35781516108f5565b845b905061068287878387878760200151610c04565b604051630618f58760e51b815263c64743d560e01b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801561095c57600080fd5b505af1158015610970573d6000803e3d6000fd5b5050505061042160135461044c565b6303516c4c5b9392505050565b61025982826040516024016109a2929190611f64565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052611005565b6109df8a8989898888610c04565b60008060006109ef8b8d87611026565b90935083925090508015610a165760405163170fb50d60e01b815260040160405180910390fd5b505081516020830151604051630a8c7dad60e21b8152736fe756b9c61cf7e9f11d96740b096e51b64ebf1392632a31f6b492610a5492600401611f9f565b600060405180830381600087803b158015610a6e57600080fd5b505af1158015610a82573d6000803e3d6000fd5b50505050600080610a948b8d87611026565b9150915060008c60600151118015610aac5750600181105b80610ac5575060408c015115801590610ac55750845181105b15610ae35760405163e904550160e01b815260040160405180910390fd5b6000610aef8484611e1c565b905088811015610b1957604051634c19cdaf60e11b81526004810182905260240160405180910390fd5b5050505050505050505050505050565b6040820151158015610b3e5750606082015115155b8015610b5257508060400151826060015114155b15610b70576040516369443e5560e11b815260040160405180910390fd5b60408201511561025957806060015151600003610ba0576040516308bf63cd60e01b815260040160405180910390fd5b8060200151816060015151146102595760405163024c78fd60e51b815260040160405180910390fd5b604083015115801590610be157508181602001515114155b15610bff5760405163024c78fd60e51b815260040160405180910390fd5b505050565b600086516003811115610c1957610c196117a6565b03610ca55760208601516040516323b872dd60e01b81526001600160a01b038781166004830152868116602483015260448201869052909116906323b872dd906064016020604051808303816000875af1158015610c7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9f9190611ea0565b5061027f565b600186516003811115610cba57610cba6117a6565b03610e3b576040860151610d3e5760208601516040516323b872dd60e01b81526001600160a01b038781166004830152868116602483015260448201859052909116906323b872dd906064015b600060405180830381600087803b158015610d2157600080fd5b505af1158015610d35573d6000803e3d6000fd5b5050505061027f565b60005b81518160ff161015610c9f57610d8b8760400151838360ff1681518110610d6a57610d6a611fc3565b602002602001015160200151848460ff168151811061026b5761026b611fc3565b86602001516001600160a01b03166323b872dd8787858560ff1681518110610db557610db5611fc3565b6020908102919091010151516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015610e1057600080fd5b505af1158015610e24573d6000803e3d6000fd5b505050508080610e3390611fd9565b915050610d41565b600286516003811115610e5057610e506117a6565b03610fec576040860151610eb6576020860151604051637921219560e11b81526001600160a01b0387811660048301528681166024830152604482018590526064820186905260a06084830152600060a48301529091169063f242432a9060c401610d07565b60608060005b83518160ff161015610f7c57610f068960400151858360ff1681518110610ee557610ee5611fc3565b602002602001015160200151868460ff168151811061026b5761026b611fc3565b838160ff1681518110610f1b57610f1b611fc3565b602002602001015160000151838260ff1681518110610f3c57610f3c611fc3565b6020026020010181815250506001828260ff1681518110610f5f57610f5f611fc3565b602090810291909101015280610f7481611fd9565b915050610ebc565b5087602001516001600160a01b0316632eb2c2d6888885856040518563ffffffff1660e01b8152600401610fb39493929190612033565b600060405180830381600087803b158015610fcd57600080fd5b505af1158015610fe1573d6000803e3d6000fd5b50505050505061027f565b604051639a9d6f4f60e01b815260040160405180910390fd5b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008060018451600381111561103e5761103e6117a6565b036111cb57600084606001511180156110d45750602084015160608501516040516331a9108f60e11b815260048101919091526001600160a01b03878116921690636352211e90602401602060405180830381865afa1580156110a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c9919061208e565b6001600160a01b0316145b156110e1575060016111cb565b6040840151156111cb5760005b83518160ff1610156111c957856001600160a01b031685602001516001600160a01b0316636352211e868460ff168151811061112c5761112c611fc3565b6020026020010151600001516040518263ffffffff1660e01b815260040161115691815260200190565b602060405180830381865afa158015611173573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611197919061208e565b6001600160a01b0316036111b757816111af816120ab565b9250506111c9565b806111c181611fd9565b9150506110ee565b505b6111d684868561120d565b91506002845160038111156111ed576111ed6117a6565b1480156111fd5750604084015115155b156112055750805b935093915050565b6000600384516003811115611224576112246117a6565b0361123a57506001600160a01b03821631610985565b60008451600381111561124f5761124f6117a6565b036112cc5760208401516040516370a0823160e01b81526001600160a01b038581166004830152909116906370a08231906024015b602060405180830381865afa1580156112a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c59190611f86565b9050610985565b6001845160038111156112e1576112e16117a6565b0361131a5760208401516040516370a0823160e01b81526001600160a01b038581166004830152909116906370a0823190602401611284565b60028451600381111561132f5761132f6117a6565b03610fec5760608401511561137c5760208401516060850151604051627eeac760e11b81526001600160a01b038681166004830152602482019290925291169062fdd58e90604401611284565b6000805b83518160ff16101561145f57600086602001516001600160a01b031662fdd58e87878560ff16815181106113b6576113b6611fc3565b6020908102919091010151516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa15801561140b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142f9190611f86565b1161143b57600061143e565b60015b61144b9060ff1683611e03565b91508061145781611fd9565b915050611380565b509050610985565b60006020828403121561147957600080fd5b5035919050565b6000806040838503121561149357600080fd5b50508035926020909101359150565b6001600160a01b038116811461024857600080fd5b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156114ef576114ef6114b7565b60405290565b60405160a081016001600160401b03811182821017156114ef576114ef6114b7565b60405160c081016001600160401b03811182821017156114ef576114ef6114b7565b604051601f8201601f191681016001600160401b0381118282101715611561576115616114b7565b604052919050565b8035610655816114a2565b60006080828403121561158657600080fd5b604051608081018181106001600160401b03821117156115a8576115a86114b7565b6040529050808235600481106115bd57600080fd5b815260208301356115cd816114a2565b8060208301525060408301356040820152606083013560608201525092915050565b600080600080610140858703121561160657600080fd5b8435611611816114a2565b93506116208660208701611574565b925061162f8660a08701611574565b939692955092936101200135925050565b600080600080600080610180878903121561165a57600080fd5b8635611665816114a2565b95506116748860208901611574565b94506116838860a08901611574565b93506101208701359250610140870135915061016087013590509295509295509295565b60006001600160401b038211156116c0576116c06114b7565b50601f01601f191660200190565b600082601f8301126116df57600080fd5b81356116f26116ed826116a7565b611539565b81815284602083860101111561170757600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561173657600080fd5b81356001600160401b038082111561174d57600080fd5b908301906020828603121561176157600080fd5b60405160208101818110838211171561177c5761177c6114b7565b60405282358281111561178e57600080fd5b61179a878286016116ce565b82525095945050505050565b634e487b7160e01b600052602160045260246000fd5b60808101600486106117de57634e487b7160e01b600052602160045260246000fd5b9481526001600160a01b03939093166020840152604083019190915260609091015290565b60006001600160401b0382111561181c5761181c6114b7565b5060051b60200190565b600082601f83011261183757600080fd5b813560206118476116ed83611803565b82815260059290921b8401810191818101908684111561186657600080fd5b8286015b84811015611881578035835291830191830161186a565b509695505050505050565b60006020828403121561189e57600080fd5b81356001600160401b038111156118b457600080fd5b6118c084828501611826565b949350505050565b600082601f8301126118d957600080fd5b813560206118e96116ed83611803565b82815260059290921b8401810191818101908684111561190857600080fd5b8286015b848110156118815780356001600160401b038082111561192c5760008081fd5b908801906040828b03601f19018113156119465760008081fd5b61194e6114cd565b8388013581529083013590828211156119675760008081fd5b6119758c8984870101611826565b81890152865250505091830191830161190c565b60006040828403121561199b57600080fd5b6119a36114cd565b905081356119b0816114a2565b815260208201356001600160401b038111156119cb57600080fd5b6119d7848285016116ce565b60208301525092915050565b600060a082840312156119f557600080fd5b6119fd6114f5565b9050611a0882611569565b81526020820135602082015260408201356001600160401b0380821115611a2e57600080fd5b611a3a858386016118c8565b60408401526060840135915080821115611a5357600080fd5b611a5f858386016118c8565b60608401526080840135915080821115611a7857600080fd5b50611a8584828501611989565b60808301525092915050565b60008060008060008060006101a0888a031215611aad57600080fd5b8735611ab8816114a2565b965060208801356001600160401b0380821115611ad457600080fd5b611ae08b838c016116ce565b975060408a01359150611af2826114a2565b819650611b028b60608c01611574565b9550611b118b60e08c01611574565b94506101608a013593506101808a0135915080821115611b3057600080fd5b50611b3d8a828b016119e3565b91505092959891949750929550565b6000806000806000806101808789031215611b6657600080fd5b8635611b71816114a2565b95506020870135611b81816114a2565b9450611b908860408901611574565b9350611b9f8860c08901611574565b925061014087013591506101608701356001600160401b03811115611bc357600080fd5b611bcf89828a016119e3565b9150509295509295509295565b6000806000806000806000806101c0898b031215611bf957600080fd5b883597506020890135611c0b816114a2565b9650611c1a8a60408b01611574565b9550611c298a60c08b01611574565b945061014089013593506101608901359250610180890135611c4a816114a2565b91506101a08901356001600160401b0380821115611c6757600080fd5b908a019060c0828d031215611c7b57600080fd5b611c83611517565b611c8c83611569565b81526020830135602082015260408301356040820152606083013582811115611cb457600080fd5b611cc08e8286016118c8565b606083015250608083013582811115611cd857600080fd5b611ce48e8286016118c8565b60808301525060a083013582811115611cfc57600080fd5b611d088e828601611989565b60a0830152508093505050509295985092959890939650565b6000806000806000806101208789031215611d3b57600080fd5b611d458888611574565b95506080870135611d55816114a2565b945060a0870135611d65816114a2565b935060c0870135925060e087013591506101008701356001600160401b0380821115611d9057600080fd5b908801906040828b031215611da457600080fd5b611dac6114cd565b8235611db7816114a2565b8152602083013582811115611dcb57600080fd5b611dd78c8286016118c8565b6020830152508093505050509295509295509295565b634e487b7160e01b600052601160045260246000fd5b80820180821115611e1657611e16611ded565b92915050565b81810381811115611e1657611e16611ded565b60005b83811015611e4a578181015183820152602001611e32565b50506000910152565b6001600160e01b0319831681528151600090611e76816004850160208701611e2f565b919091016004019392505050565b60008251611e96818460208701611e2f565b9190910192915050565b600060208284031215611eb257600080fd5b8151801515811461098557600080fd5b600060208284031215611ed457600080fd5b81516001600160401b03811115611eea57600080fd5b8201601f81018413611efb57600080fd5b8051611f096116ed826116a7565b818152856020838501011115611f1e57600080fd5b611f2f826020830160208601611e2f565b95945050505050565b60008151808452611f50816020860160208601611e2f565b601f01601f19169290920160200192915050565b604081526000611f776040830185611f38565b90508260208301529392505050565b600060208284031215611f9857600080fd5b5051919050565b6001600160a01b03831681526040602082018190526000906118c090830184611f38565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103611fef57611fef611ded565b60010192915050565b600081518084526020808501945080840160005b838110156120285781518752958201959082019060010161200c565b509495945050505050565b6001600160a01b0385811682528416602082015260a06040820181905260009061205f90830185611ff8565b82810360608401526120718185611ff8565b838103608090940193909352505060008152602001949350505050565b6000602082840312156120a057600080fd5b8151610985816114a2565b6000600182016120bd576120bd611ded565b506001019056fea2646970667358221220e577dffd5cf88aacf575ca2fe9b9c33afd0bddc844607e8d357cea4f6db91d2c64736f6c63430008110033",
    "sourceMap": "1572:26:0:-:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;199:10:24;169:40;;244:64;;;-1:-1:-1;;;;;;244:64:24;;;266:42;244:64;;;;;;312;;;;;;334:42;312:64;;;;;;163:685:27;407:40:24;;;;;;;;;;;;;;;;381:66;;;-1:-1:-1;;;;;;381:66:24;;;;;;;;;;;;;;;;477:40;163:685:27;477:40:24;1572:26:0;477:40:24;;;;;;;;;;;;;;;;451:66;;;;;;;;;;;;;;;;163:685:27;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102105760003560e01c80636fc4fde711610125578063cc83c9ec116100ad578063f0f6ee2a1161007c578063f0f6ee2a146103cb578063f7440e16146103de578063f868f99c146103f1578063f9e3e2fc146103f9578063fa7626d41461040257600080fd5b8063cc83c9ec1461038b578063d46b8d2c146103b0578063db5b273a14610271578063f0c27e3d146103b857600080fd5b8063a9aa5f7e116100f4578063a9aa5f7e1461024b578063ad5c46481461034d578063b4caf1cb1461024b578063ba414fa614610360578063be330dbd1461037857600080fd5b80636fc4fde71461023a5780638129ef951461025d57806389a302711461031a57806398bc97c71461034557600080fd5b806340362fea116101a8578063502929ff11610177578063502929ff146102b157806356aa0ea6146102c457806361ebbca8146102f957806365c8efda1461024b57806367fde9df1461030757600080fd5b806340362fea1461028757806347244b0d1461024b57806348213e22146102a35780634ef935ca1461023a57600080fd5b8063181233ee116101e4578063181233ee1461024b578063193a0f621461024b5780631ccf3c0c1461025d578063333aa2fc1461027157600080fd5b8062f4b4de1461021557806302908ed31461021f5780630a9254e4146102325780630f9842501461023a575b600080fd5b61021d61040f565b005b61021d61022d366004611467565b610423565b61021d610444565b61021d610248366004611467565b50565b61021d610259366004611480565b5050565b61021d61026b3660046115ef565b50505050565b61021d61027f366004611640565b505050505050565b61029060145481565b6040519081526020015b60405180910390f35b61021d610248366004611724565b61021d6102bf366004611467565b61044c565b6017546018546019546102e99260ff8116926101009091046001600160a01b03169184565b60405161029a94939291906117bc565b61021d61024836600461188c565b61021d610315366004611a91565b61046c565b60165461032d906001600160a01b031681565b6040516001600160a01b03909116815260200161029a565b61021d6104b2565b60155461032d906001600160a01b031681565b61036861052f565b604051901515815260200161029a565b61021d610386366004611b4c565b61065a565b601a54601b54601c546102e99260ff8116926101009091046001600160a01b03169184565b61021d61068b565b61021d6103c6366004611467565b610692565b61021d6103d9366004611bdc565b610800565b61021d6103ec366004611d21565b6108d1565b61021d610909565b61029060135481565b6000546103689060ff1681565b61042160135460016102bf9190611e03565b565b438111156102485760405163281f6f0d60e01b815260040160405180910390fd5b61042161068b565b4381116102485760405163c64743d560e01b815260040160405180910390fd5b600061047988888561097f565b90506104a86040518060400160405280600b81526020016a52455155495245443a257360a81b8152508261098c565b5050505050505050565b604051630618f58760e51b815263c64743d560e01b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801561050557600080fd5b505af1158015610519573d6000803e3d6000fd5b5050505061042160016013546102bf9190611e1c565b60008054610100900460ff161561054f5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156106555760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916105dd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611e53565b60408051601f19818403018152908290526105f791611e84565b6000604051808303816000865af19150503d8060008114610634576040519150601f19603f3d011682016040523d82523d6000602084013e610639565b606091505b50915050808060200190518101906106519190611ea0565b9150505b919050565b600061068285858885600001518588886020015189604001518a606001518b608001516109d1565b50505050505050565b6104216013545b60405163f877cb1960e01b815260206004820152600f60248201526e1350525393915517d49410d7d55493608a1b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636ba3ba2b90829063f877cb1990606401600060405180830381865afa158015610709573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107319190810190611ec2565b836040518363ffffffff1660e01b815260040161074f929190611f64565b6020604051808303816000875af115801561076e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107929190611f86565b6014819055604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b1580156107e557600080fd5b505af11580156107f9573d6000803e3d6000fd5b5050505050565b61080a8682610b29565b60008060208301516040516306e5639760e21b815260048101889052602481018790526044810183905260648101919091529091506000906001600160a01b03851690631b958e5c906084016020604051808303816000875af1158015610875573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108999190611f86565b90506108c588888b866000015187602001518689604001518a606001518b608001518c60a001516109d1565b50505050505050505050565b6108dc868483610bc9565b60006001600160a01b0385166108f35781516108f5565b845b905061068287878387878760200151610c04565b604051630618f58760e51b815263c64743d560e01b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801561095c57600080fd5b505af1158015610970573d6000803e3d6000fd5b5050505061042160135461044c565b6303516c4c5b9392505050565b61025982826040516024016109a2929190611f64565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052611005565b6109df8a8989898888610c04565b60008060006109ef8b8d87611026565b90935083925090508015610a165760405163170fb50d60e01b815260040160405180910390fd5b505081516020830151604051630a8c7dad60e21b8152736fe756b9c61cf7e9f11d96740b096e51b64ebf1392632a31f6b492610a5492600401611f9f565b600060405180830381600087803b158015610a6e57600080fd5b505af1158015610a82573d6000803e3d6000fd5b50505050600080610a948b8d87611026565b9150915060008c60600151118015610aac5750600181105b80610ac5575060408c015115801590610ac55750845181105b15610ae35760405163e904550160e01b815260040160405180910390fd5b6000610aef8484611e1c565b905088811015610b1957604051634c19cdaf60e11b81526004810182905260240160405180910390fd5b5050505050505050505050505050565b6040820151158015610b3e5750606082015115155b8015610b5257508060400151826060015114155b15610b70576040516369443e5560e11b815260040160405180910390fd5b60408201511561025957806060015151600003610ba0576040516308bf63cd60e01b815260040160405180910390fd5b8060200151816060015151146102595760405163024c78fd60e51b815260040160405180910390fd5b604083015115801590610be157508181602001515114155b15610bff5760405163024c78fd60e51b815260040160405180910390fd5b505050565b600086516003811115610c1957610c196117a6565b03610ca55760208601516040516323b872dd60e01b81526001600160a01b038781166004830152868116602483015260448201869052909116906323b872dd906064016020604051808303816000875af1158015610c7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9f9190611ea0565b5061027f565b600186516003811115610cba57610cba6117a6565b03610e3b576040860151610d3e5760208601516040516323b872dd60e01b81526001600160a01b038781166004830152868116602483015260448201859052909116906323b872dd906064015b600060405180830381600087803b158015610d2157600080fd5b505af1158015610d35573d6000803e3d6000fd5b5050505061027f565b60005b81518160ff161015610c9f57610d8b8760400151838360ff1681518110610d6a57610d6a611fc3565b602002602001015160200151848460ff168151811061026b5761026b611fc3565b86602001516001600160a01b03166323b872dd8787858560ff1681518110610db557610db5611fc3565b6020908102919091010151516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015610e1057600080fd5b505af1158015610e24573d6000803e3d6000fd5b505050508080610e3390611fd9565b915050610d41565b600286516003811115610e5057610e506117a6565b03610fec576040860151610eb6576020860151604051637921219560e11b81526001600160a01b0387811660048301528681166024830152604482018590526064820186905260a06084830152600060a48301529091169063f242432a9060c401610d07565b60608060005b83518160ff161015610f7c57610f068960400151858360ff1681518110610ee557610ee5611fc3565b602002602001015160200151868460ff168151811061026b5761026b611fc3565b838160ff1681518110610f1b57610f1b611fc3565b602002602001015160000151838260ff1681518110610f3c57610f3c611fc3565b6020026020010181815250506001828260ff1681518110610f5f57610f5f611fc3565b602090810291909101015280610f7481611fd9565b915050610ebc565b5087602001516001600160a01b0316632eb2c2d6888885856040518563ffffffff1660e01b8152600401610fb39493929190612033565b600060405180830381600087803b158015610fcd57600080fd5b505af1158015610fe1573d6000803e3d6000fd5b50505050505061027f565b604051639a9d6f4f60e01b815260040160405180910390fd5b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008060018451600381111561103e5761103e6117a6565b036111cb57600084606001511180156110d45750602084015160608501516040516331a9108f60e11b815260048101919091526001600160a01b03878116921690636352211e90602401602060405180830381865afa1580156110a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c9919061208e565b6001600160a01b0316145b156110e1575060016111cb565b6040840151156111cb5760005b83518160ff1610156111c957856001600160a01b031685602001516001600160a01b0316636352211e868460ff168151811061112c5761112c611fc3565b6020026020010151600001516040518263ffffffff1660e01b815260040161115691815260200190565b602060405180830381865afa158015611173573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611197919061208e565b6001600160a01b0316036111b757816111af816120ab565b9250506111c9565b806111c181611fd9565b9150506110ee565b505b6111d684868561120d565b91506002845160038111156111ed576111ed6117a6565b1480156111fd5750604084015115155b156112055750805b935093915050565b6000600384516003811115611224576112246117a6565b0361123a57506001600160a01b03821631610985565b60008451600381111561124f5761124f6117a6565b036112cc5760208401516040516370a0823160e01b81526001600160a01b038581166004830152909116906370a08231906024015b602060405180830381865afa1580156112a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c59190611f86565b9050610985565b6001845160038111156112e1576112e16117a6565b0361131a5760208401516040516370a0823160e01b81526001600160a01b038581166004830152909116906370a0823190602401611284565b60028451600381111561132f5761132f6117a6565b03610fec5760608401511561137c5760208401516060850151604051627eeac760e11b81526001600160a01b038681166004830152602482019290925291169062fdd58e90604401611284565b6000805b83518160ff16101561145f57600086602001516001600160a01b031662fdd58e87878560ff16815181106113b6576113b6611fc3565b6020908102919091010151516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa15801561140b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142f9190611f86565b1161143b57600061143e565b60015b61144b9060ff1683611e03565b91508061145781611fd9565b915050611380565b509050610985565b60006020828403121561147957600080fd5b5035919050565b6000806040838503121561149357600080fd5b50508035926020909101359150565b6001600160a01b038116811461024857600080fd5b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156114ef576114ef6114b7565b60405290565b60405160a081016001600160401b03811182821017156114ef576114ef6114b7565b60405160c081016001600160401b03811182821017156114ef576114ef6114b7565b604051601f8201601f191681016001600160401b0381118282101715611561576115616114b7565b604052919050565b8035610655816114a2565b60006080828403121561158657600080fd5b604051608081018181106001600160401b03821117156115a8576115a86114b7565b6040529050808235600481106115bd57600080fd5b815260208301356115cd816114a2565b8060208301525060408301356040820152606083013560608201525092915050565b600080600080610140858703121561160657600080fd5b8435611611816114a2565b93506116208660208701611574565b925061162f8660a08701611574565b939692955092936101200135925050565b600080600080600080610180878903121561165a57600080fd5b8635611665816114a2565b95506116748860208901611574565b94506116838860a08901611574565b93506101208701359250610140870135915061016087013590509295509295509295565b60006001600160401b038211156116c0576116c06114b7565b50601f01601f191660200190565b600082601f8301126116df57600080fd5b81356116f26116ed826116a7565b611539565b81815284602083860101111561170757600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561173657600080fd5b81356001600160401b038082111561174d57600080fd5b908301906020828603121561176157600080fd5b60405160208101818110838211171561177c5761177c6114b7565b60405282358281111561178e57600080fd5b61179a878286016116ce565b82525095945050505050565b634e487b7160e01b600052602160045260246000fd5b60808101600486106117de57634e487b7160e01b600052602160045260246000fd5b9481526001600160a01b03939093166020840152604083019190915260609091015290565b60006001600160401b0382111561181c5761181c6114b7565b5060051b60200190565b600082601f83011261183757600080fd5b813560206118476116ed83611803565b82815260059290921b8401810191818101908684111561186657600080fd5b8286015b84811015611881578035835291830191830161186a565b509695505050505050565b60006020828403121561189e57600080fd5b81356001600160401b038111156118b457600080fd5b6118c084828501611826565b949350505050565b600082601f8301126118d957600080fd5b813560206118e96116ed83611803565b82815260059290921b8401810191818101908684111561190857600080fd5b8286015b848110156118815780356001600160401b038082111561192c5760008081fd5b908801906040828b03601f19018113156119465760008081fd5b61194e6114cd565b8388013581529083013590828211156119675760008081fd5b6119758c8984870101611826565b81890152865250505091830191830161190c565b60006040828403121561199b57600080fd5b6119a36114cd565b905081356119b0816114a2565b815260208201356001600160401b038111156119cb57600080fd5b6119d7848285016116ce565b60208301525092915050565b600060a082840312156119f557600080fd5b6119fd6114f5565b9050611a0882611569565b81526020820135602082015260408201356001600160401b0380821115611a2e57600080fd5b611a3a858386016118c8565b60408401526060840135915080821115611a5357600080fd5b611a5f858386016118c8565b60608401526080840135915080821115611a7857600080fd5b50611a8584828501611989565b60808301525092915050565b60008060008060008060006101a0888a031215611aad57600080fd5b8735611ab8816114a2565b965060208801356001600160401b0380821115611ad457600080fd5b611ae08b838c016116ce565b975060408a01359150611af2826114a2565b819650611b028b60608c01611574565b9550611b118b60e08c01611574565b94506101608a013593506101808a0135915080821115611b3057600080fd5b50611b3d8a828b016119e3565b91505092959891949750929550565b6000806000806000806101808789031215611b6657600080fd5b8635611b71816114a2565b95506020870135611b81816114a2565b9450611b908860408901611574565b9350611b9f8860c08901611574565b925061014087013591506101608701356001600160401b03811115611bc357600080fd5b611bcf89828a016119e3565b9150509295509295509295565b6000806000806000806000806101c0898b031215611bf957600080fd5b883597506020890135611c0b816114a2565b9650611c1a8a60408b01611574565b9550611c298a60c08b01611574565b945061014089013593506101608901359250610180890135611c4a816114a2565b91506101a08901356001600160401b0380821115611c6757600080fd5b908a019060c0828d031215611c7b57600080fd5b611c83611517565b611c8c83611569565b81526020830135602082015260408301356040820152606083013582811115611cb457600080fd5b611cc08e8286016118c8565b606083015250608083013582811115611cd857600080fd5b611ce48e8286016118c8565b60808301525060a083013582811115611cfc57600080fd5b611d088e828601611989565b60a0830152508093505050509295985092959890939650565b6000806000806000806101208789031215611d3b57600080fd5b611d458888611574565b95506080870135611d55816114a2565b945060a0870135611d65816114a2565b935060c0870135925060e087013591506101008701356001600160401b0380821115611d9057600080fd5b908801906040828b031215611da457600080fd5b611dac6114cd565b8235611db7816114a2565b8152602083013582811115611dcb57600080fd5b611dd78c8286016118c8565b6020830152508093505050509295509295509295565b634e487b7160e01b600052601160045260246000fd5b80820180821115611e1657611e16611ded565b92915050565b81810381811115611e1657611e16611ded565b60005b83811015611e4a578181015183820152602001611e32565b50506000910152565b6001600160e01b0319831681528151600090611e76816004850160208701611e2f565b919091016004019392505050565b60008251611e96818460208701611e2f565b9190910192915050565b600060208284031215611eb257600080fd5b8151801515811461098557600080fd5b600060208284031215611ed457600080fd5b81516001600160401b03811115611eea57600080fd5b8201601f81018413611efb57600080fd5b8051611f096116ed826116a7565b818152856020838501011115611f1e57600080fd5b611f2f826020830160208601611e2f565b95945050505050565b60008151808452611f50816020860160208601611e2f565b601f01601f19169290920160200192915050565b604081526000611f776040830185611f38565b90508260208301529392505050565b600060208284031215611f9857600080fd5b5051919050565b6001600160a01b03831681526040602082018190526000906118c090830184611f38565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103611fef57611fef611ded565b60010192915050565b600081518084526020808501945080840160005b838110156120285781518752958201959082019060010161200c565b509495945050505050565b6001600160a01b0385811682528416602082015260a06040820181905260009061205f90830185611ff8565b82810360608401526120718185611ff8565b838103608090940193909352505060008152602001949350505050565b6000602082840312156120a057600080fd5b8151610985816114a2565b6000600182016120bd576120bd611ded565b506001019056fea2646970667358221220e577dffd5cf88aacf575ca2fe9b9c33afd0bddc844607e8d357cea4f6db91d2c64736f6c63430008110033",
    "sourceMap": "163:685:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;293:151;;;:::i;:::-;;1664:137:22;;;;;;:::i;:::-;;:::i;242:47:27:-;;;:::i;6352:55:22:-;;;;;;:::i;:::-;1664:137;;1317:69;;;;;;:::i;:::-;;;;2471:126;;;;;;:::i;:::-;;;;;;2720:165;;;;;;:::i;:::-;;;;;;;;213:26:24;;;;;;;;;4613:25:28;;;4601:2;4586:18;213:26:24;;;;;;;;3267:72:22;;;;;;:::i;1805:138::-;;;;;;:::i;:::-;;:::i;381:66:24:-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;381:66:24;;;;;;;;;;;;;;:::i;7032:73:22:-;;;;;;:::i;3839:677::-;;;;;;:::i;:::-;;:::i;312:64:24:-;;;;;-1:-1:-1;;;;;312:64:24;;;;;;-1:-1:-1;;;;;12532:32:28;;;12514:51;;12502:2;12487:18;312:64:24;12368:203:28;648:197:27;;;:::i;244:64:24:-;;;;;-1:-1:-1;;;;;244:64:24;;;1819:584:0;;;:::i;:::-;;;12741:14:28;;12734:22;12716:41;;12704:2;12689:18;1819:584:0;12576:187:28;4635:563:22;;;;;;:::i;:::-;;:::i;451:66:24:-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;451:66:24;;;;522:63;;;:::i;589:161::-;;;;;;:::i;:::-;;:::i;5304:1006:22:-;;;;;;:::i;:::-;;:::i;3343:378::-;;;;;;:::i;:::-;;:::i;448:196:27:-;;;:::i;169:40:24:-;;;;;;1572:26:0;;;;;;;;;293:151:27;401:38;422:12;;437:1;422:16;;;;:::i;401:38::-;293:151::o;1664:137:22:-;1746:12;1732:11;:26;1728:69;;;1775:15;;-1:-1:-1;;;1775:15:22;;;;;;;;;;;242:47:27;273:11;:9;:11::i;1805:138:22:-;1891:12;1876:11;:27;1872:67;;1920:12;;-1:-1:-1;;;1920:12:22;;;;;;;;;;;3839:677;4080:27;4110:59;4127:14;4143:10;4155:13;4110:16;:59::i;:::-;4080:89;;4175:50;;;;;;;;;;;;;;-1:-1:-1;;;4175:50:22;;;4202:22;4175:11;:50::i;:::-;4074:442;3839:677;;;;;;;:::o;648:197:27:-;760:36;;-1:-1:-1;;;760:36:27;;-1:-1:-1;;;760:36:27;;;17526:52:28;760:15:27;;;;17499:18:28;;760:36:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:38;838:1;823:12;;:16;;;;:::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;17896:51:28;;;-1:-1:-1;;;17963:18:28;;;17956:34;2196:43:0;;;;;;;;;17869:18:28;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;4635:563:22:-;4851:26;4949:244;4966:7;4981:8;4997:5;5010:4;:14;;;5032:21;5061:14;5083:4;:14;;;5105:4;:26;;;5139:4;:27;;;5174:4;:13;;;4949:9;:244::i;:::-;4845:353;4635:563;;;;;;:::o;522:63:24:-;557:23;567:12;;589:161;668:31;;-1:-1:-1;;;668:31:24;;19421:2:28;668:31:24;;;19403:21:28;19460:2;19440:18;;;19433:30;-1:-1:-1;;;19479:18:28;;;19472:45;654:13:24;;;;;;668:12;;19534:18:28;;668:31:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;668:31:24;;;;;;;;;;;;:::i;:::-;701:11;654:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;640:11;:73;;;719:26;;-1:-1:-1;;;719:26:24;;;;;4613:25:28;;;;719:13:24;;;;4586:18:28;;719:26:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;589:161;:::o;5304:1006:22:-;5540:42;5568:7;5577:4;5540:27;:42::i;:::-;5744:17;;5967:18;;;;5906:80;;-1:-1:-1;;;5906:80:22;;;;;21208:25:28;;;21249:18;;;21242:34;;;21292:18;;;21285:34;;;21335:18;;;21328:34;;;;5744:49:22;;-1:-1:-1;5876:27:22;;-1:-1:-1;;;;;5906:20:22;;;;;21180:19:28;;5906:80:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5876:110;;5993:249;6010:7;6025:8;6041:5;6054:4;:14;;;6076:4;:18;;;6102:22;6132:4;:14;;;6154:4;:26;;;6188:4;:27;;;6223:4;:13;;;5993:9;:249::i;:::-;5534:776;;5304:1006;;;;;;;;:::o;3343:378::-;3513:47;3540:5;3547:6;3555:4;3513:26;:47::i;:::-;3566:18;-1:-1:-1;;;;;3587:23:22;;:52;;3625:14;;3587:52;;;3613:9;3587:52;3566:73;;3645:71;3658:5;3665;3672:10;3684:6;3692:2;3696:4;:19;;;3645:12;:71::i;448:196:27:-;563:36;;-1:-1:-1;;;563:36:27;;-1:-1:-1;;;563:36:27;;;17526:52:28;563:15:27;;;;17499:18:28;;563:36:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;605:34;626:12;;605:20;:34::i;10427:179:22:-;10570:8;10427:179;;;;;;:::o;6548:139:12:-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:12;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:12;-1:-1:-1;;;6628:51:12;;;6612:15;:68::i;8955:1356:22:-;9284:88;9297:7;9306:5;9313:9;9324:13;9339:9;9350:21;9284:12;:88::i;:::-;9379:27;9421:28;9451:24;9479:60;9499:5;9506:8;9516:22;9479:19;:60::i;:::-;9420:119;;-1:-1:-1;9420:119:22;;-1:-1:-1;9420:119:22;-1:-1:-1;9607:23:22;;9603:74;;9649:19;;-1:-1:-1;;;9649:19:22;;;;;;;;;;;9603:74;-1:-1:-1;;9716:23:22;;9741:13;;;;9689:66;;-1:-1:-1;;;9689:66:22;;599:42;;9689:26;;:66;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9763:25;9790:22;9816:60;9836:5;9843:8;9853:22;9816:19;:60::i;:::-;9762:114;;;;9909:1;9895:8;:11;;;:15;:40;;;;;9934:1;9914:17;:21;9895:40;9894:143;;;-1:-1:-1;9947:22:22;;;;:36;;;;:89;;;10007:22;:29;9987:17;:49;9947:89;9883:424;;;10059:18;;-1:-1:-1;;;10059:18:22;;;;;;;;;;;9883:424;10098:30;10131:45;10154:22;10131:20;:45;:::i;:::-;10098:78;;10213:14;10188:22;:39;10184:117;;;10246:46;;-1:-1:-1;;;10246:46:22;;;;;4613:25:28;;;4586:18;;10246:46:22;;;;;;;10184:117;10090:217;9278:1033;;;8955:1356;;;;;;;;;;:::o;8039:634::-;8170:19;;;;:33;:56;;;;-1:-1:-1;8213:8:22;;;;:13;;8170:56;:100;;;;;8248:12;:22;;;8236:5;:8;;;:34;;8170:100;8159:154;;;8292:14;;-1:-1:-1;;;8292:14:22;;;;;;;;;;;8159:154;8323:19;;;;:33;8319:350;;8370:12;:34;;;:41;8415:1;8370:46;8366:100;;8435:22;;-1:-1:-1;;;8435:22:22;;;;;;;;;;;8366:100;8522:12;:26;;;8477:12;:34;;;:41;:71;8473:133;;8567:30;;-1:-1:-1;;;8567:30:22;;;;;;;;;;;8677:274;8812:19;;;;:33;;;;:81;;;8887:6;8849:12;:27;;;:34;:44;;8812:81;8808:139;;;8910:30;;-1:-1:-1;;;8910:30:22;;;;;;;;;;;8808:139;8677:274;;;:::o;616:1333:23:-;783:19;765:14;;:37;;;;;;;;:::i;:::-;;761:121;;819:10;;;;812:49;;-1:-1:-1;;;812:49:23;;-1:-1:-1;;;;;21951:15:28;;;812:49:23;;;21933:34:28;22003:15;;;21983:18;;;21976:43;22035:18;;;22028:34;;;812:31:23;;;;;;21868:18:28;;812:49:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;869:7;;761:121;914:20;896:14;;:38;;;;;;;;:::i;:::-;;892:1013;;948:19;;;;944:358;;1001:10;;;;993:46;;-1:-1:-1;;;993:46:23;;-1:-1:-1;;;;;21951:15:28;;;993:46:23;;;21933:34:28;22003:15;;;21983:18;;;21976:43;22035:18;;;22028:34;;;993:32:23;;;;;;21868:18:28;;993:46:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1309:7;;944:358;1069:7;1064:230;1082:14;:21;1080:1;:23;;;1064:230;;;1122:85;1140:5;:19;;;1161:14;1176:1;1161:17;;;;;;;;;;:::i;:::-;;;;;;;:23;;;1186:14;1201:1;1186:17;;;;;;;;;;:::i;1122:85::-;1227:5;:10;;;-1:-1:-1;;;;;1219:32:23;;1252:4;1258:2;1262:14;1277:1;1262:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;:20;1219:64;;-1:-1:-1;;;;;;1219:64:23;;;;;;;-1:-1:-1;;;;;21951:15:28;;;1219:64:23;;;21933:34:28;22003:15;;;;21983:18;;;21976:43;22035:18;;;22028:34;21868:18;;1219:64:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1105:3;;;;;:::i;:::-;;;;1064:230;;892:1013;1350:21;1332:14;;:39;;;;;;;;:::i;:::-;;1328:577;;1385:19;;;;1381:504;;1439:10;;;;1430:63;;-1:-1:-1;;;1430:63:23;;-1:-1:-1;;;;;22736:15:28;;;1430:63:23;;;22718:34:28;22788:15;;;22768:18;;;22761:43;22820:18;;;22813:34;;;22863:18;;;22856:34;;;22698:3;22906:19;;;22899:32;-1:-1:-1;22947:19:28;;;22940:30;1430:37:23;;;;;;22987:19:28;;1430:63:23;22385:627:28;1381:504:23;1518:17;1545:21;1581:7;1576:221;1594:14;:21;1592:1;:23;;;1576:221;;;1634:85;1652:5;:19;;;1673:14;1688:1;1673:17;;;;;;;;;;:::i;:::-;;;;;;;:23;;;1698:14;1713:1;1698:17;;;;;;;;;;:::i;1634:85::-;1740:14;1755:1;1740:17;;;;;;;;;;:::i;:::-;;;;;;;:20;;;1731:3;1735:1;1731:6;;;;;;;;;;:::i;:::-;;;;;;:29;;;;;1785:1;1772:7;1780:1;1772:10;;;;;;;;;;:::i;:::-;;;;;;;;;;:14;1617:3;;;;:::i;:::-;;;;1576:221;;;;1815:5;:10;;;-1:-1:-1;;;;;1806:42:23;;1849:4;1855:2;1859:3;1864:7;1806:70;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:377;;1892:7;;1328:577;1918:26;;-1:-1:-1;;;1918:26:23;;;;;;;;;;;181:376:12;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;2865:783:23:-;3008:12;;3069:20;3051:14;;:38;;;;;;;;:::i;:::-;;3047:416;;3114:1;3103:5;:8;;;:12;:62;;;;-1:-1:-1;3127:10:23;;;;3147:8;;;;3119:37;;-1:-1:-1;;;3119:37:23;;;;;4613:25:28;;;;-1:-1:-1;;;;;3119:46:23;;;;:27;;;;4586:18:28;;3119:37:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3119:46:23;;3103:62;3099:358;;;-1:-1:-1;3192:1:23;3099:358;;;3212:19;;;;:33;3208:249;;3262:7;3257:192;3275:14;:21;3273:1;:23;;;3257:192;;;3372:5;-1:-1:-1;;;;;3319:58:23;3327:5;:10;;;-1:-1:-1;;;;;3319:27:23;;3347:14;3362:1;3347:17;;;;;;;;;;:::i;:::-;;;;;;;:20;;;3319:49;;;;;;;;;;;;;4613:25:28;;4601:2;4586:18;;4467:177;3319:49:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3319:58:23;;3315:124;;3393:14;;;;:::i;:::-;;;;3421:5;;3315:124;3298:3;;;;:::i;:::-;;;;3257:192;;;;3208:249;3479:39;3489:5;3496;3503:14;3479:9;:39::i;:::-;3469:49;-1:-1:-1;3547:21:23;3529:14;;:39;;;;;;;;:::i;:::-;;:76;;;;-1:-1:-1;3572:19:23;;;;:33;;3529:76;3525:119;;;-1:-1:-1;3630:7:23;3525:119;2865:783;;;;;;:::o;1953:853::-;2069:4;2103:17;2085:14;;:35;;;;;;;;:::i;:::-;;2081:76;;-1:-1:-1;;;;;;2137:13:23;;;2130:20;;2081:76;2189:19;2171:14;;:37;;;;;;;;:::i;:::-;;2167:100;;2232:10;;;;2225:35;;-1:-1:-1;;;2225:35:23;;-1:-1:-1;;;;;12532:32:28;;;2225:35:23;;;12514:51:28;2225:28:23;;;;;;12487:18:28;;2225:35:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2218:42;;;;2167:100;2299:20;2281:14;;:38;;;;;;;;:::i;:::-;;2277:102;;2344:10;;;;2336:36;;-1:-1:-1;;;2336:36:23;;-1:-1:-1;;;;;12532:32:28;;;2336:36:23;;;12514:51:28;2336:29:23;;;;;;12487:18:28;;2336:36:23;12368:203:28;2277:102:23;2411:21;2393:14;;:39;;;;;;;;:::i;:::-;;2389:373;;2446:8;;;;:12;2442:314;;2486:10;;;;2515:8;;;;2477:47;;-1:-1:-1;;;2477:47:23;;-1:-1:-1;;;;;17914:32:28;;;2477:47:23;;;17896:51:28;17963:18;;;17956:34;;;;2477:30:23;;;;;17869:18:28;;2477:47:23;17722:274:28;2442:314:23;2549:12;;2571:153;2589:14;:21;2587:1;:23;;;2571:153;;;2703:1;2650:5;:10;;;-1:-1:-1;;;;;2641:30:23;;2672:5;2679:14;2694:1;2679:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;:20;2641:59;;-1:-1:-1;;;;;;2641:59:23;;;;;;;-1:-1:-1;;;;;17914:32:28;;;2641:59:23;;;17896:51:28;17963:18;;;17956:34;17869:18;;2641:59:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;:71;;2711:1;2641:71;;;2707:1;2641:71;2629:84;;;;;;:::i;:::-;;-1:-1:-1;2612:3:23;;;;:::i;:::-;;;;2571:153;;;-1:-1:-1;2740:7:23;-1:-1:-1;2733:14:23;;14:180:28;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:28;;14:180;-1:-1:-1;14:180:28:o;384:248::-;452:6;460;513:2;501:9;492:7;488:23;484:32;481:52;;;529:1;526;519:12;481:52;-1:-1:-1;;552:23:28;;;622:2;607:18;;;594:32;;-1:-1:-1;384:248:28:o;890:145::-;-1:-1:-1;;;;;979:31:28;;969:42;;959:70;;1025:1;1022;1015:12;1040:127;1101:10;1096:3;1092:20;1089:1;1082:31;1132:4;1129:1;1122:15;1156:4;1153:1;1146:15;1172:257;1244:4;1238:11;;;1276:17;;-1:-1:-1;;;;;1308:34:28;;1344:22;;;1305:62;1302:88;;;1370:18;;:::i;:::-;1406:4;1399:24;1172:257;:::o;1434:253::-;1506:2;1500:9;1548:4;1536:17;;-1:-1:-1;;;;;1568:34:28;;1604:22;;;1565:62;1562:88;;;1630:18;;:::i;1692:252::-;1764:2;1758:9;1806:3;1794:16;;-1:-1:-1;;;;;1825:34:28;;1861:22;;;1822:62;1819:88;;;1887:18;;:::i;1949:275::-;2020:2;2014:9;2085:2;2066:13;;-1:-1:-1;;2062:27:28;2050:40;;-1:-1:-1;;;;;2105:34:28;;2141:22;;;2102:62;2099:88;;;2167:18;;:::i;:::-;2203:2;2196:22;1949:275;;-1:-1:-1;1949:275:28:o;2229:148::-;2297:20;;2326:45;2297:20;2326:45;:::i;2382:771::-;2434:5;2482:4;2470:9;2465:3;2461:19;2457:30;2454:50;;;2500:1;2497;2490:12;2454:50;2533:2;2527:9;2575:4;2567:6;2563:17;2646:6;2634:10;2631:22;-1:-1:-1;;;;;2598:10:28;2595:34;2592:62;2589:88;;;2657:18;;:::i;:::-;2693:2;2686:22;2726:6;-1:-1:-1;2726:6:28;2756:23;;2810:1;2798:14;;2788:42;;2826:1;2823;2816:12;2788:42;2839:23;;2914:2;2899:18;;2886:32;2927:47;2886:32;2927:47;:::i;:::-;3007:7;3002:2;2994:6;2990:15;2983:32;;3076:2;3065:9;3061:18;3048:32;3043:2;3035:6;3031:15;3024:57;3142:2;3131:9;3127:18;3114:32;3109:2;3101:6;3097:15;3090:57;;2382:771;;;;:::o;3158:578::-;3314:6;3322;3330;3338;3391:3;3379:9;3370:7;3366:23;3362:33;3359:53;;;3408:1;3405;3398:12;3359:53;3447:9;3434:23;3466:45;3505:5;3466:45;:::i;:::-;3530:5;-1:-1:-1;3554:52:28;3598:7;3593:2;3578:18;;3554:52;:::i;:::-;3544:62;;3625:53;3670:7;3664:3;3653:9;3649:19;3625:53;:::i;:::-;3158:578;;;;-1:-1:-1;3615:63:28;;3725:3;3710:19;3697:33;;-1:-1:-1;;3158:578:28:o;3741:721::-;3920:6;3928;3936;3944;3952;3960;4013:3;4001:9;3992:7;3988:23;3984:33;3981:53;;;4030:1;4027;4020:12;3981:53;4069:9;4056:23;4088:45;4127:5;4088:45;:::i;:::-;4152:5;-1:-1:-1;4176:52:28;4220:7;4215:2;4200:18;;4176:52;:::i;:::-;4166:62;;4247:53;4292:7;4286:3;4275:9;4271:19;4247:53;:::i;:::-;4237:63;;4347:3;4336:9;4332:19;4319:33;4309:43;;4399:3;4388:9;4384:19;4371:33;4361:43;;4451:3;4440:9;4436:19;4423:33;4413:43;;3741:721;;;;;;;;:::o;4649:186::-;4697:4;-1:-1:-1;;;;;4722:6:28;4719:30;4716:56;;;4752:18;;:::i;:::-;-1:-1:-1;4818:2:28;4797:15;-1:-1:-1;;4793:29:28;4824:4;4789:40;;4649:186::o;4840:462::-;4882:5;4935:3;4928:4;4920:6;4916:17;4912:27;4902:55;;4953:1;4950;4943:12;4902:55;4989:6;4976:20;5020:48;5036:31;5064:2;5036:31;:::i;:::-;5020:48;:::i;:::-;5093:2;5084:7;5077:19;5139:3;5132:4;5127:2;5119:6;5115:15;5111:26;5108:35;5105:55;;;5156:1;5153;5146:12;5105:55;5221:2;5214:4;5206:6;5202:17;5195:4;5186:7;5182:18;5169:55;5269:1;5244:16;;;5262:4;5240:27;5233:38;;;;5248:7;4840:462;-1:-1:-1;;;4840:462:28:o;5307:766::-;5407:6;5460:2;5448:9;5439:7;5435:23;5431:32;5428:52;;;5476:1;5473;5466:12;5428:52;5516:9;5503:23;-1:-1:-1;;;;;5586:2:28;5578:6;5575:14;5572:34;;;5602:1;5599;5592:12;5572:34;5625:22;;;;5681:2;5663:16;;;5659:25;5656:45;;;5697:1;5694;5687:12;5656:45;5730:2;5724:9;5772:2;5764:6;5760:15;5825:6;5813:10;5810:22;5805:2;5793:10;5790:18;5787:46;5784:72;;;5836:18;;:::i;:::-;5872:2;5865:22;5912:16;;5940;;;5937:36;;;5969:1;5966;5959:12;5937:36;5997:44;6033:7;6022:8;6018:2;6014:17;5997:44;:::i;:::-;5982:60;;-1:-1:-1;5989:6:28;5307:766;-1:-1:-1;;;;;5307:766:28:o;6078:127::-;6139:10;6134:3;6130:20;6127:1;6120:31;6170:4;6167:1;6160:15;6194:4;6191:1;6184:15;6210:587;6445:3;6430:19;;6479:1;6468:13;;6458:144;;6524:10;6519:3;6515:20;6512:1;6505:31;6559:4;6556:1;6549:15;6587:4;6584:1;6577:15;6458:144;6611:25;;;-1:-1:-1;;;;;6672:32:28;;;;6667:2;6652:18;;6645:60;6736:2;6721:18;;6714:34;;;;6779:2;6764:18;;;6757:34;6210:587;:::o;6802:183::-;6862:4;-1:-1:-1;;;;;6887:6:28;6884:30;6881:56;;;6917:18;;:::i;:::-;-1:-1:-1;6962:1:28;6958:14;6974:4;6954:25;;6802:183::o;6990:662::-;7044:5;7097:3;7090:4;7082:6;7078:17;7074:27;7064:55;;7115:1;7112;7105:12;7064:55;7151:6;7138:20;7177:4;7201:60;7217:43;7257:2;7217:43;:::i;7201:60::-;7295:15;;;7381:1;7377:10;;;;7365:23;;7361:32;;;7326:12;;;;7405:15;;;7402:35;;;7433:1;7430;7423:12;7402:35;7469:2;7461:6;7457:15;7481:142;7497:6;7492:3;7489:15;7481:142;;;7563:17;;7551:30;;7601:12;;;;7514;;7481:142;;;-1:-1:-1;7641:5:28;6990:662;-1:-1:-1;;;;;;6990:662:28:o;7657:348::-;7741:6;7794:2;7782:9;7773:7;7769:23;7765:32;7762:52;;;7810:1;7807;7800:12;7762:52;7850:9;7837:23;-1:-1:-1;;;;;7875:6:28;7872:30;7869:50;;;7915:1;7912;7905:12;7869:50;7938:61;7991:7;7982:6;7971:9;7967:22;7938:61;:::i;:::-;7928:71;7657:348;-1:-1:-1;;;;7657:348:28:o;8263:1459::-;8330:5;8383:3;8376:4;8368:6;8364:17;8360:27;8350:55;;8401:1;8398;8391:12;8350:55;8437:6;8424:20;8463:4;8487:60;8503:43;8543:2;8503:43;:::i;8487:60::-;8581:15;;;8667:1;8663:10;;;;8651:23;;8647:32;;;8612:12;;;;8691:15;;;8688:35;;;8719:1;8716;8709:12;8688:35;8755:2;8747:6;8743:15;8767:926;8783:6;8778:3;8775:15;8767:926;;;8869:3;8856:17;-1:-1:-1;;;;;8946:2:28;8933:11;8930:19;8927:109;;;8990:1;9019:2;9015;9008:14;8927:109;9059:24;;;;9106:4;9134:12;;;-1:-1:-1;;9130:26:28;9126:35;-1:-1:-1;9123:125:28;;;9202:1;9231:2;9227;9220:14;9123:125;9274:22;;:::i;:::-;9336:11;;;9323:25;9309:40;;9391:11;;;9378:25;;9419:16;;;9416:106;;;9476:1;9505:2;9501;9494:14;9416:106;9558:61;9615:3;9610:2;9599:8;9595:2;9591:17;9587:26;9558:61;:::i;:::-;9542:14;;;9535:85;9633:18;;-1:-1:-1;;;9671:12:28;;;;8800;;8767:926;;9727:493;9778:5;9826:4;9814:9;9809:3;9805:19;9801:30;9798:50;;;9844:1;9841;9834:12;9798:50;9866:22;;:::i;:::-;9857:31;;9925:9;9912:23;9944:47;9983:7;9944:47;:::i;:::-;10000:22;;10073:2;10058:18;;10045:32;-1:-1:-1;;;;;10089:30:28;;10086:50;;;10132:1;10129;10122:12;10086:50;10168:45;10209:3;10200:6;10189:9;10185:22;10168:45;:::i;:::-;10163:2;10156:5;10152:14;10145:69;;9727:493;;;;:::o;10225:938::-;10294:5;10342:4;10330:9;10325:3;10321:19;10317:30;10314:50;;;10360:1;10357;10350:12;10314:50;10382:22;;:::i;:::-;10373:31;;10427:29;10446:9;10427:29;:::i;:::-;10420:5;10413:44;10517:2;10506:9;10502:18;10489:32;10484:2;10477:5;10473:14;10466:56;10573:2;10562:9;10558:18;10545:32;-1:-1:-1;;;;;10637:2:28;10629:6;10626:14;10623:34;;;10653:1;10650;10643:12;10623:34;10689:70;10755:3;10746:6;10735:9;10731:22;10689:70;:::i;:::-;10684:2;10677:5;10673:14;10666:94;10813:2;10802:9;10798:18;10785:32;10769:48;;10842:2;10832:8;10829:16;10826:36;;;10858:1;10855;10848:12;10826:36;10894:72;10962:3;10951:8;10940:9;10936:24;10894:72;:::i;:::-;10889:2;10882:5;10878:14;10871:96;11020:3;11009:9;11005:19;10992:33;10976:49;;11050:2;11040:8;11037:16;11034:36;;;11066:1;11063;11056:12;11034:36;;11103:53;11152:3;11141:8;11130:9;11126:24;11103:53;:::i;:::-;11097:3;11090:5;11086:15;11079:78;;10225:938;;;;:::o;11168:1195::-;11379:6;11387;11395;11403;11411;11419;11427;11480:3;11468:9;11459:7;11455:23;11451:33;11448:53;;;11497:1;11494;11487:12;11448:53;11536:9;11523:23;11555:45;11594:5;11555:45;:::i;:::-;11619:5;-1:-1:-1;11675:2:28;11660:18;;11647:32;-1:-1:-1;;;;;11728:14:28;;;11725:34;;;11755:1;11752;11745:12;11725:34;11778:49;11819:7;11810:6;11799:9;11795:22;11778:49;:::i;:::-;11768:59;;11879:2;11868:9;11864:18;11851:32;11836:47;;11892;11931:7;11892:47;:::i;:::-;11958:7;11948:17;;11984:52;12028:7;12023:2;12012:9;12008:18;11984:52;:::i;:::-;11974:62;;12055:53;12100:7;12094:3;12083:9;12079:19;12055:53;:::i;:::-;12045:63;;12155:3;12144:9;12140:19;12127:33;12117:43;;12213:3;12202:9;12198:19;12185:33;12169:49;;12243:2;12233:8;12230:16;12227:36;;;12259:1;12256;12249:12;12227:36;;12282:75;12349:7;12338:8;12327:9;12323:24;12282:75;:::i;:::-;12272:85;;;11168:1195;;;;;;;;;;:::o;12768:998::-;12983:6;12991;12999;13007;13015;13023;13076:3;13064:9;13055:7;13051:23;13047:33;13044:53;;;13093:1;13090;13083:12;13044:53;13132:9;13119:23;13151:45;13190:5;13151:45;:::i;:::-;13215:5;-1:-1:-1;13272:2:28;13257:18;;13244:32;13285:47;13244:32;13285:47;:::i;:::-;13351:7;-1:-1:-1;13377:52:28;13421:7;13416:2;13401:18;;13377:52;:::i;:::-;13367:62;;13448:53;13493:7;13487:3;13476:9;13472:19;13448:53;:::i;:::-;13438:63;;13548:3;13537:9;13533:19;13520:33;13510:43;;13604:3;13593:9;13589:19;13576:33;-1:-1:-1;;;;;13624:6:28;13621:30;13618:50;;;13664:1;13661;13654:12;13618:50;13687:73;13752:7;13743:6;13732:9;13728:22;13687:73;:::i;:::-;13677:83;;;12768:998;;;;;;;;:::o;13771:1981::-;14002:6;14010;14018;14026;14034;14042;14050;14058;14111:3;14099:9;14090:7;14086:23;14082:33;14079:53;;;14128:1;14125;14118:12;14079:53;14164:9;14151:23;14141:33;;14224:2;14213:9;14209:18;14196:32;14237:45;14276:5;14237:45;:::i;:::-;14301:5;-1:-1:-1;14325:52:28;14369:7;14364:2;14349:18;;14325:52;:::i;:::-;14315:62;;14396:53;14441:7;14435:3;14424:9;14420:19;14396:53;:::i;:::-;14386:63;;14496:3;14485:9;14481:19;14468:33;14458:43;;14548:3;14537:9;14533:19;14520:33;14510:43;;14605:3;14594:9;14590:19;14577:33;14619:47;14658:7;14619:47;:::i;:::-;14685:7;-1:-1:-1;14743:3:28;14728:19;;14715:33;-1:-1:-1;;;;;14797:14:28;;;14794:34;;;14824:1;14821;14814:12;14794:34;14847:22;;;;14903:3;14885:16;;;14881:26;14878:46;;;14920:1;14917;14910:12;14878:46;14948:22;;:::i;:::-;14995;15014:2;14995:22;:::i;:::-;14986:7;14979:39;15073:2;15069;15065:11;15052:25;15047:2;15038:7;15034:16;15027:51;15133:2;15129;15125:11;15112:25;15107:2;15098:7;15094:16;15087:51;15184:2;15180;15176:11;15163:25;15213:2;15203:8;15200:16;15197:36;;;15229:1;15226;15219:12;15197:36;15267:69;15328:7;15317:8;15313:2;15309:17;15267:69;:::i;:::-;15262:2;15253:7;15249:16;15242:95;;15383:3;15379:2;15375:12;15362:26;15413:2;15403:8;15400:16;15397:36;;;15429:1;15426;15419:12;15397:36;15468:69;15529:7;15518:8;15514:2;15510:17;15468:69;:::i;:::-;15462:3;15453:7;15449:17;15442:96;;15584:3;15580:2;15576:12;15563:26;15614:2;15604:8;15601:16;15598:36;;;15630:1;15627;15620:12;15598:36;15669:50;15711:7;15700:8;15696:2;15692:17;15669:50;:::i;:::-;15663:3;15654:7;15650:17;15643:77;;15739:7;15729:17;;;;;13771:1981;;;;;;;;;;;:::o;15757:1358::-;15924:6;15932;15940;15948;15956;15964;16017:3;16005:9;15996:7;15992:23;15988:33;15985:53;;;16034:1;16031;16024:12;15985:53;16057:43;16092:7;16081:9;16057:43;:::i;:::-;16047:53;;16150:3;16139:9;16135:19;16122:33;16164:45;16203:5;16164:45;:::i;:::-;16228:5;-1:-1:-1;16285:3:28;16270:19;;16257:33;16299:47;16257:33;16299:47;:::i;:::-;16365:7;-1:-1:-1;16419:3:28;16404:19;;16391:33;;-1:-1:-1;16471:3:28;16456:19;;16443:33;;-1:-1:-1;16527:3:28;16512:19;;16499:33;-1:-1:-1;;;;;16581:14:28;;;16578:34;;;16608:1;16605;16598:12;16578:34;16631:22;;;;16687:4;16669:16;;;16665:27;16662:47;;;16705:1;16702;16695:12;16662:47;16733:22;;:::i;:::-;16792:2;16779:16;16804:47;16843:7;16804:47;:::i;:::-;16860:24;;16930:2;16922:11;;16909:25;16946:16;;;16943:36;;;16975:1;16972;16965:12;16943:36;17013:69;17074:7;17063:8;17059:2;17055:17;17013:69;:::i;:::-;17008:2;16999:7;16995:16;16988:95;;17102:7;17092:17;;;;;15757:1358;;;;;;;;:::o;17120:127::-;17181:10;17176:3;17172:20;17169:1;17162:31;17212:4;17209:1;17202:15;17236:4;17233:1;17226:15;17252:125;17317:9;;;17338:10;;;17335:36;;;17351:18;;:::i;:::-;17252:125;;;;:::o;17589:128::-;17656:9;;;17677:11;;;17674:37;;;17691:18;;:::i;18001:250::-;18086:1;18096:113;18110:6;18107:1;18104:13;18096:113;;;18186:11;;;18180:18;18167:11;;;18160:39;18132:2;18125:10;18096:113;;;-1:-1:-1;;18243:1:28;18225:16;;18218:27;18001:250::o;18256:384::-;-1:-1:-1;;;;;;18441:33:28;;18429:46;;18498:13;;18411:3;;18520:74;18498:13;18583:1;18574:11;;18567:4;18555:17;;18520:74;:::i;:::-;18614:16;;;;18632:1;18610:24;;18256:384;-1:-1:-1;;;18256:384:28:o;18645:287::-;18774:3;18812:6;18806:13;18828:66;18887:6;18882:3;18875:4;18867:6;18863:17;18828:66;:::i;:::-;18910:16;;;;;18645:287;-1:-1:-1;;18645:287:28:o;18937:277::-;19004:6;19057:2;19045:9;19036:7;19032:23;19028:32;19025:52;;;19073:1;19070;19063:12;19025:52;19105:9;19099:16;19158:5;19151:13;19144:21;19137:5;19134:32;19124:60;;19180:1;19177;19170:12;19563:648;19643:6;19696:2;19684:9;19675:7;19671:23;19667:32;19664:52;;;19712:1;19709;19702:12;19664:52;19745:9;19739:16;-1:-1:-1;;;;;19770:6:28;19767:30;19764:50;;;19810:1;19807;19800:12;19764:50;19833:22;;19886:4;19878:13;;19874:27;-1:-1:-1;19864:55:28;;19915:1;19912;19905:12;19864:55;19944:2;19938:9;19969:48;19985:31;20013:2;19985:31;:::i;19969:48::-;20040:2;20033:5;20026:17;20080:7;20075:2;20070;20066;20062:11;20058:20;20055:33;20052:53;;;20101:1;20098;20091:12;20052:53;20114:67;20178:2;20173;20166:5;20162:14;20157:2;20153;20149:11;20114:67;:::i;:::-;20200:5;19563:648;-1:-1:-1;;;;;19563:648:28:o;20216:271::-;20258:3;20296:5;20290:12;20323:6;20318:3;20311:19;20339:76;20408:6;20401:4;20396:3;20392:14;20385:4;20378:5;20374:16;20339:76;:::i;:::-;20469:2;20448:15;-1:-1:-1;;20444:29:28;20435:39;;;;20476:4;20431:50;;20216:271;-1:-1:-1;;20216:271:28:o;20492:291::-;20669:2;20658:9;20651:21;20632:4;20689:45;20730:2;20719:9;20715:18;20707:6;20689:45;:::i;:::-;20681:53;;20770:6;20765:2;20754:9;20750:18;20743:34;20492:291;;;;;:::o;20788:184::-;20858:6;20911:2;20899:9;20890:7;20886:23;20882:32;20879:52;;;20927:1;20924;20917:12;20879:52;-1:-1:-1;20950:16:28;;20788:184;-1:-1:-1;20788:184:28:o;21373:315::-;-1:-1:-1;;;;;21548:32:28;;21530:51;;21617:2;21612;21597:18;;21590:30;;;-1:-1:-1;;21637:45:28;;21663:18;;21655:6;21637:45;:::i;22073:127::-;22134:10;22129:3;22125:20;22122:1;22115:31;22165:4;22162:1;22155:15;22189:4;22186:1;22179:15;22205:175;22242:3;22286:4;22279:5;22275:16;22315:4;22306:7;22303:17;22300:43;;22323:18;;:::i;:::-;22372:1;22359:15;;22205:175;-1:-1:-1;;22205:175:28:o;23017:435::-;23070:3;23108:5;23102:12;23135:6;23130:3;23123:19;23161:4;23190:2;23185:3;23181:12;23174:19;;23227:2;23220:5;23216:14;23248:1;23258:169;23272:6;23269:1;23266:13;23258:169;;;23333:13;;23321:26;;23367:12;;;;23402:15;;;;23294:1;23287:9;23258:169;;;-1:-1:-1;23443:3:28;;23017:435;-1:-1:-1;;;;;23017:435:28:o;23457:889::-;-1:-1:-1;;;;;23908:15:28;;;23890:34;;23960:15;;23955:2;23940:18;;23933:43;23870:3;24007:2;23992:18;;23985:31;;;23833:4;;24039:57;;24076:19;;24068:6;24039:57;:::i;:::-;24144:9;24136:6;24132:22;24127:2;24116:9;24112:18;24105:50;24178:44;24215:6;24207;24178:44;:::i;:::-;24259:22;;;24253:3;24238:19;;;24231:51;;;;-1:-1:-1;;24306:1:28;24291:17;;24337:2;24325:15;;23457:889;-1:-1:-1;;;;23457:889:28:o;24351:265::-;24421:6;24474:2;24462:9;24453:7;24449:23;24445:32;24442:52;;;24490:1;24487;24480:12;24442:52;24522:9;24516:16;24541:45;24580:5;24541:45;:::i;24621:135::-;24660:3;24681:17;;;24678:43;;24701:18;;:::i;:::-;-1:-1:-1;24748:1:28;24737:13;;24621:135::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "USDC()": "89a30271",
    "USDC_Token()": "cc83c9ec",
    "WETH()": "ad5c4648",
    "WETH_Token()": "56aa0ea6",
    "bindLimitSwapFills(bytes32[])": "61ebbca8",
    "createSeaportListing(bytes32)": "6fc4fde7",
    "defaultBlock()": "f9e3e2fc",
    "failed()": "ba414fa6",
    "invertLimitSwapFills(bytes32,bytes32)": "193a0f62",
    "limitSwap(bytes32,address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,uint256,address,(address,uint256,uint256,(uint256,bytes32[])[],(uint256,bytes32[])[],(address,bytes)))": "f0f6ee2a",
    "mainnetFork()": "40362fea",
    "marketSwapExactInput(address,bytes,address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,(address,uint256,(uint256,bytes32[])[],(uint256,bytes32[])[],(address,bytes)))": "67fde9df",
    "marketSwapExactOutput(address,address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,(address,uint256,(uint256,bytes32[])[],(uint256,bytes32[])[],(address,bytes)))": "be330dbd",
    "maxRuns(bytes32,uint256)": "b4caf1cb",
    "requireBitNotUsed(uint256,uint256)": "181233ee",
    "requireBitUsed(uint256,uint256)": "47244b0d",
    "requireBlockMined(uint256)": "02908ed3",
    "requireBlockNotMined(uint256)": "502929ff",
    "requireBlocksElapsed(bytes32,uint256)": "65c8efda",
    "requireLimitSwapFilled(bytes32)": "4ef935ca",
    "requireLimitSwapOpen(bytes32)": "0f984250",
    "requirePriceDecrease(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,uint256,uint256)": "333aa2fc",
    "requirePriceIncrease(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,uint256,uint256)": "db5b273a",
    "requirePriceLowerBound(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256)": "8129ef95",
    "requirePriceUpperBound(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256)": "1ccf3c0c",
    "requireStake((bytes))": "48213e22",
    "setUp()": "0a9254e4",
    "setupFork()": "d46b8d2c",
    "setupFork(uint256)": "f0c27e3d",
    "testBlockIsMined()": "98bc97c7",
    "testBlockIsMining()": "f868f99c",
    "testBlockIsNotMined()": "00f4b4de",
    "transfer((uint8,address,bytes32,uint256),address,address,uint256,uint256,(address,(uint256,bytes32[])[]))": "f7440e16",
    "useBit(uint256,uint256)": "a9aa5f7e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BlockMined\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BlockNotMined\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleProofAndAmountMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleProofsRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftIdAlreadyOwned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftIdNotReceived\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"NotEnoughTokenReceived\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedTokenStandard\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_Token\",\"outputs\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH_Token\",\"outputs\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"swapsIds\",\"type\":\"bytes32[]\"}],\"name\":\"bindLimitSwapFills\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"createSeaportListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"swap0\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"swap1\",\"type\":\"bytes32\"}],\"name\":\"invertLimitSwapFills\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenIn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenOut\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenInAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"basePrice\",\"type\":\"uint256\"},{\"internalType\":\"contract IPriceCurve\",\"name\":\"priceCurve\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenInAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenInId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenInIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenOutIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.Call\",\"name\":\"fillCall\",\"type\":\"tuple\"}],\"internalType\":\"struct Primatives01.UnsignedLimitSwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"limitSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainnetFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracleContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"oracleCall\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenIn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenOut\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenInAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenInId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenInIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenOutIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.Call\",\"name\":\"fillCall\",\"type\":\"tuple\"}],\"internalType\":\"struct Primatives01.UnsignedMarketSwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"marketSwapExactInput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenIn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenOut\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenOutAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenInId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenInIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenOutIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.Call\",\"name\":\"fillCall\",\"type\":\"tuple\"}],\"internalType\":\"struct Primatives01.UnsignedMarketSwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"marketSwapExactOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfRuns\",\"type\":\"uint256\"}],\"name\":\"maxRuns\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bit\",\"type\":\"uint256\"}],\"name\":\"requireBitNotUsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bit\",\"type\":\"uint256\"}],\"name\":\"requireBitUsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"requireBlockMined\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"requireBlockNotMined\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfBlocksElapsed\",\"type\":\"uint256\"}],\"name\":\"requireBlocksElapsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"requireLimitSwapFilled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"requireLimitSwapOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceDeltaOracle\",\"name\":\"priceDeltaOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceDecrease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceDeltaOracle\",\"name\":\"priceDeltaOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceIncrease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceLowerBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceUpperBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"stakerSignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.UnsignedStakeProofData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"requireStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setupFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"setupFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBlockIsMined\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBlockIsMining\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBlockIsNotMined\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"idMerkleProofs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Primatives01.UnsignedTransferData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bit\",\"type\":\"uint256\"}],\"name\":\"useBit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Primatives01_requireBlockNotMined.sol\":\"Primatives01_requireBlockNotMined\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":brink-core/=lib/brink-core/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd\",\"dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec\",\"dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0\",\"dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc\",\"dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3\",\"dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc\",\"dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51\",\"dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/Interfaces/ICallExecutor.sol\":{\"keccak256\":\"0x8330730889b5974571981232458f574522298c8fc1a9490b9a9d3ea88b1b72ad\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7579e934b5e7fb43c0e5af573fc94fa0d91b82ee68d60619ad7bf3a6d46fbf85\",\"dweb:/ipfs/QmUhyDX2xUSfwa8vkj6nJLpNYpqtwcRYe9cGGkHj3Sup7c\"]},\"src/Interfaces/IPriceCurve.sol\":{\"keccak256\":\"0x9063ca09de1597f770c9ebb6893984f7d51c15e5280c9910787c20c62b9d79d5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fdcc118d4326244a4c53c983db860c3a28b6485b83787f879b76d358c99a47e5\",\"dweb:/ipfs/QmXeY2bY1FL8AdwXR8kr5TRqjrBHiefB5e2bomtYvk5PME\"]},\"src/Interfaces/IPriceDeltaOracle.sol\":{\"keccak256\":\"0x845b060718c518189ec326b5eedbf2d4376ac983b274ae7b9161526141fcb7ef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://60578d5a214e46666a50d49837a0a249d88daf7443ea637e75c7ffaacc6a02d5\",\"dweb:/ipfs/QmVTFR1Hv7fY416qzVKaFYPvXD8ibRddhELk4rUt5Bh47d\"]},\"src/Interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x7d20e9d9824ab1622170b3839d3080c19119ed80884f74b78fc8ee27df54879f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://995379b96ffc1e22521918f7b3319f6ef02be468000d50075b80ced7ea5ee197\",\"dweb:/ipfs/QmYX1VFfXe6Tdv6d4svE5X7b5f4BShmwXBYHXtM9aWhrGo\"]},\"src/Primatives/Primatives01.sol\":{\"keccak256\":\"0x049d8d7d0f651a2b28f7621436638937208cc398dbf486b5bb419e399ca77b74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5981994c57c71f046a8eca2ac3f7cf0f4cb7dd0ffd9ac7d393d891c96389b1f8\",\"dweb:/ipfs/QmXQX3cetNdUNKyw8NpXN5wBKDebRY4Go6rb6AxtzjdcH3\"]},\"src/TokenHelper/TokenHelper.sol\":{\"keccak256\":\"0x71de5b580ade414ab63258413f82c541a2560ad37398f281853a8e73c60a7ff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://220df8edaec7f9a1c17e5f7f862bc7a813d3cf9facf4d51905a2cb7fcf9894e4\",\"dweb:/ipfs/QmXUcmw75mNB2GnYpRmZZgX3s77eTaK3ivCrmfkw4M95ze\"]},\"test/Helper.sol\":{\"keccak256\":\"0xd7b6b97473a2e1847e8949af2f3473f318ac14523ad9cc355aa734a1cc29f173\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8a5102a0ed405d83dc03989a8178b9c944e2ac4f42a7fa8027ea342b68818df8\",\"dweb:/ipfs/QmQoLEqh1gH7YrtP7294tDxW71cR9TDhoDPRv4R7h4Fs1E\"]},\"test/Primatives01_requireBlockNotMined.sol\":{\"keccak256\":\"0x8e11444d75f41f67cb3e48710b7c782a3b4adc3460835d5a9cfb270735b7bdab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2a2cc768ae8a001bc9b126db5b308c0d15de0dcdaf1a7cf95bfaac755d01257b\",\"dweb:/ipfs/Qmdz1A8Ki1z7sxYUDtkiSrPDF7NuN4FbLwehwRpftDvv6E\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "BlockMined"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BlockNotMined"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IdNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MerkleProofAndAmountMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MerkleProofsRequired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NftIdAlreadyOwned"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NftIdNotReceived"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountReceived",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotEnoughTokenReceived"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedTokenStandard"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USDC",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USDC_Token",
          "outputs": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH_Token",
          "outputs": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "swapsIds",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bindLimitSwapFills"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createSeaportListing"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "swap0",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "swap1",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "invertLimitSwapFills"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenIn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenOut",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "tokenInAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "basePrice",
              "type": "uint256"
            },
            {
              "internalType": "contract IPriceCurve",
              "name": "priceCurve",
              "type": "address"
            },
            {
              "internalType": "struct Primatives01.UnsignedLimitSwapData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenInIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenOutIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct Primatives01.Call",
                  "name": "fillCall",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "limitSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mainnetFork",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oracleContract",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "oracleCall",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenIn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenOut",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "tokenInAmount",
              "type": "uint256"
            },
            {
              "internalType": "struct Primatives01.UnsignedMarketSwapData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenInIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenOutIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct Primatives01.Call",
                  "name": "fillCall",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "marketSwapExactInput"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenIn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenOut",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "tokenOutAmount",
              "type": "uint256"
            },
            {
              "internalType": "struct Primatives01.UnsignedMarketSwapData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenInIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenOutIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct Primatives01.Call",
                  "name": "fillCall",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "marketSwapExactOutput"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "numberOfRuns",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "maxRuns"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bitmapIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireBitNotUsed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bitmapIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireBitUsed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requireBlockMined"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requireBlockNotMined"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "numberOfBlocksElapsed",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireBlocksElapsed"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireLimitSwapFilled"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireLimitSwapOpen"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceDeltaOracle",
              "name": "priceDeltaOracle",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceDecrease"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceDeltaOracle",
              "name": "priceDeltaOracle",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceIncrease"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceLowerBound"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceUpperBound"
        },
        {
          "inputs": [
            {
              "internalType": "struct Primatives01.UnsignedStakeProofData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "stakerSignature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireStake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setupFork"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setupFork"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBlockIsMined"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBlockIsMining"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testBlockIsNotMined"
        },
        {
          "inputs": [
            {
              "internalType": "struct Token",
              "name": "token",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "struct Primatives01.UnsignedTransferData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "idMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bitmapIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "useBit"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":brink-core/=lib/brink-core/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Primatives01_requireBlockNotMined.sol": "Primatives01_requireBlockNotMined"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213",
        "urls": [
          "bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd",
          "dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524",
        "urls": [
          "bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec",
          "dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606",
        "urls": [
          "bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0",
          "dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269",
        "urls": [
          "bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc",
          "dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d",
        "urls": [
          "bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3",
          "dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf",
        "urls": [
          "bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc",
          "dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521",
        "urls": [
          "bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51",
          "dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/Interfaces/ICallExecutor.sol": {
        "keccak256": "0x8330730889b5974571981232458f574522298c8fc1a9490b9a9d3ea88b1b72ad",
        "urls": [
          "bzz-raw://7579e934b5e7fb43c0e5af573fc94fa0d91b82ee68d60619ad7bf3a6d46fbf85",
          "dweb:/ipfs/QmUhyDX2xUSfwa8vkj6nJLpNYpqtwcRYe9cGGkHj3Sup7c"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Interfaces/IPriceCurve.sol": {
        "keccak256": "0x9063ca09de1597f770c9ebb6893984f7d51c15e5280c9910787c20c62b9d79d5",
        "urls": [
          "bzz-raw://fdcc118d4326244a4c53c983db860c3a28b6485b83787f879b76d358c99a47e5",
          "dweb:/ipfs/QmXeY2bY1FL8AdwXR8kr5TRqjrBHiefB5e2bomtYvk5PME"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Interfaces/IPriceDeltaOracle.sol": {
        "keccak256": "0x845b060718c518189ec326b5eedbf2d4376ac983b274ae7b9161526141fcb7ef",
        "urls": [
          "bzz-raw://60578d5a214e46666a50d49837a0a249d88daf7443ea637e75c7ffaacc6a02d5",
          "dweb:/ipfs/QmVTFR1Hv7fY416qzVKaFYPvXD8ibRddhELk4rUt5Bh47d"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Interfaces/IPriceOracle.sol": {
        "keccak256": "0x7d20e9d9824ab1622170b3839d3080c19119ed80884f74b78fc8ee27df54879f",
        "urls": [
          "bzz-raw://995379b96ffc1e22521918f7b3319f6ef02be468000d50075b80ced7ea5ee197",
          "dweb:/ipfs/QmYX1VFfXe6Tdv6d4svE5X7b5f4BShmwXBYHXtM9aWhrGo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Primatives/Primatives01.sol": {
        "keccak256": "0x049d8d7d0f651a2b28f7621436638937208cc398dbf486b5bb419e399ca77b74",
        "urls": [
          "bzz-raw://5981994c57c71f046a8eca2ac3f7cf0f4cb7dd0ffd9ac7d393d891c96389b1f8",
          "dweb:/ipfs/QmXQX3cetNdUNKyw8NpXN5wBKDebRY4Go6rb6AxtzjdcH3"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/TokenHelper/TokenHelper.sol": {
        "keccak256": "0x71de5b580ade414ab63258413f82c541a2560ad37398f281853a8e73c60a7ff6",
        "urls": [
          "bzz-raw://220df8edaec7f9a1c17e5f7f862bc7a813d3cf9facf4d51905a2cb7fcf9894e4",
          "dweb:/ipfs/QmXUcmw75mNB2GnYpRmZZgX3s77eTaK3ivCrmfkw4M95ze"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/Helper.sol": {
        "keccak256": "0xd7b6b97473a2e1847e8949af2f3473f318ac14523ad9cc355aa734a1cc29f173",
        "urls": [
          "bzz-raw://8a5102a0ed405d83dc03989a8178b9c944e2ac4f42a7fa8027ea342b68818df8",
          "dweb:/ipfs/QmQoLEqh1gH7YrtP7294tDxW71cR9TDhoDPRv4R7h4Fs1E"
        ],
        "license": "UNLICENSED"
      },
      "test/Primatives01_requireBlockNotMined.sol": {
        "keccak256": "0x8e11444d75f41f67cb3e48710b7c782a3b4adc3460835d5a9cfb270735b7bdab",
        "urls": [
          "bzz-raw://2a2cc768ae8a001bc9b126db5b308c0d15de0dcdaf1a7cf95bfaac755d01257b",
          "dweb:/ipfs/Qmdz1A8Ki1z7sxYUDtkiSrPDF7NuN4FbLwehwRpftDvv6E"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Primatives01_requireBlockNotMined.sol",
    "id": 27313,
    "exportedSymbols": {
      "BlockMined": [
        25869
      ],
      "BlockNotMined": [
        25871
      ],
      "DSTest": [
        1786
      ],
      "ERC1155IdNotProvided": [
        26610
      ],
      "Helper": [
        27127
      ],
      "ICallExecutor": [
        25813
      ],
      "IERC1155": [
        25597
      ],
      "IERC165": [
        25803
      ],
      "IERC20": [
        25675
      ],
      "IERC721": [
        25791
      ],
      "IPriceCurve": [
        25829
      ],
      "IPriceDeltaOracle": [
        25837
      ],
      "IPriceOracle": [
        25849
      ],
      "IdMerkleProof": [
        26602
      ],
      "IdNotAllowed": [
        26606
      ],
      "MerkleProofAndAmountMismatch": [
        25867
      ],
      "MerkleProofsRequired": [
        26608
      ],
      "NftIdAlreadyOwned": [
        25859
      ],
      "NftIdNotReceived": [
        25861
      ],
      "NotEnoughTokenReceived": [
        25865
      ],
      "OwnerHasNft": [
        26612
      ],
      "Primatives01": [
        26576
      ],
      "Primatives01_requireBlockNotMined": [
        27312
      ],
      "StdAssertions": [
        2671
      ],
      "StdChains": [
        3207
      ],
      "StdCheats": [
        5144
      ],
      "StdStorage": [
        6051
      ],
      "StdUtils": [
        8116
      ],
      "Test": [
        8158
      ],
      "TestBase": [
        1843
      ],
      "Token": [
        26596
      ],
      "TokenHelper": [
        27058
      ],
      "TokenStandard": [
        26586
      ],
      "UnsupportedTokenStandard": [
        26604
      ],
      "Vm": [
        9315
      ],
      "console": [
        17379
      ],
      "console2": [
        25475
      ],
      "stdError": [
        5210
      ],
      "stdJson": [
        5877
      ],
      "stdMath": [
        6019
      ],
      "stdStorage": [
        7485
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:810:27",
    "nodes": [
      {
        "id": 27253,
        "nodeType": "PragmaDirective",
        "src": "39:24:27",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 27254,
        "nodeType": "ImportDirective",
        "src": "65:28:27",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27313,
        "sourceUnit": 8159,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27255,
        "nodeType": "ImportDirective",
        "src": "94:44:27",
        "nodes": [],
        "absolutePath": "src/Primatives/Primatives01.sol",
        "file": "../src/Primatives/Primatives01.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27313,
        "sourceUnit": 26577,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27256,
        "nodeType": "ImportDirective",
        "src": "139:22:27",
        "nodes": [],
        "absolutePath": "test/Helper.sol",
        "file": "./Helper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27313,
        "sourceUnit": 27128,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27312,
        "nodeType": "ContractDefinition",
        "src": "163:685:27",
        "nodes": [
          {
            "id": 27269,
            "nodeType": "FunctionDefinition",
            "src": "242:47:27",
            "nodes": [],
            "body": {
              "id": 27268,
              "nodeType": "Block",
              "src": "267:22:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27265,
                      "name": "setupFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        27103,
                        27126
                      ],
                      "referencedDeclaration": 27103,
                      "src": "273:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 27266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "273:11:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27267,
                  "nodeType": "ExpressionStatement",
                  "src": "273:11:27"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "251:5:27",
            "parameters": {
              "id": 27263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "257:2:27"
            },
            "returnParameters": {
              "id": 27264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "267:0:27"
            },
            "scope": 27312,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27279,
            "nodeType": "FunctionDefinition",
            "src": "293:151:27",
            "nodes": [],
            "body": {
              "id": 27278,
              "nodeType": "Block",
              "src": "337:107:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 27273,
                          "name": "defaultBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27067,
                          "src": "422:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 27274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "437:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "422:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27272,
                      "name": "requireBlockNotMined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25982,
                      "src": "401:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 27276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "401:38:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27277,
                  "nodeType": "ExpressionStatement",
                  "src": "401:38:27"
                }
              ]
            },
            "functionSelector": "00f4b4de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBlockIsNotMined",
            "nameLocation": "302:19:27",
            "parameters": {
              "id": 27270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "322:2:27"
            },
            "returnParameters": {
              "id": 27271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "337:0:27"
            },
            "scope": 27312,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27294,
            "nodeType": "FunctionDefinition",
            "src": "448:196:27",
            "nodes": [],
            "body": {
              "id": 27293,
              "nodeType": "Block",
              "src": "485:159:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 27285,
                          "name": "BlockMined",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25869,
                          "src": "579:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 27286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "590:8:27",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "579:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 27282,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "563:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9315",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "566:12:27",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9084,
                      "src": "563:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 27287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "563:36:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27288,
                  "nodeType": "ExpressionStatement",
                  "src": "563:36:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27290,
                        "name": "defaultBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27067,
                        "src": "626:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27289,
                      "name": "requireBlockNotMined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25982,
                      "src": "605:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 27291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:34:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27292,
                  "nodeType": "ExpressionStatement",
                  "src": "605:34:27"
                }
              ]
            },
            "functionSelector": "f868f99c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBlockIsMining",
            "nameLocation": "457:17:27",
            "parameters": {
              "id": 27280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:2:27"
            },
            "returnParameters": {
              "id": 27281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "485:0:27"
            },
            "scope": 27312,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27311,
            "nodeType": "FunctionDefinition",
            "src": "648:197:27",
            "nodes": [],
            "body": {
              "id": 27310,
              "nodeType": "Block",
              "src": "684:161:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 27300,
                          "name": "BlockMined",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25869,
                          "src": "776:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 27301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "787:8:27",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "776:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 27297,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "760:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9315",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "763:12:27",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9084,
                      "src": "760:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 27302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "760:36:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27303,
                  "nodeType": "ExpressionStatement",
                  "src": "760:36:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 27305,
                          "name": "defaultBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27067,
                          "src": "823:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 27306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "838:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "823:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27304,
                      "name": "requireBlockNotMined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25982,
                      "src": "802:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 27308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "802:38:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27309,
                  "nodeType": "ExpressionStatement",
                  "src": "802:38:27"
                }
              ]
            },
            "functionSelector": "98bc97c7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBlockIsMined",
            "nameLocation": "657:16:27",
            "parameters": {
              "id": 27295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "674:2:27"
            },
            "returnParameters": {
              "id": 27296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "684:0:27"
            },
            "scope": 27312,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 27257,
              "name": "Primatives01",
              "nameLocations": [
                "209:12:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26576,
              "src": "209:12:27"
            },
            "id": 27258,
            "nodeType": "InheritanceSpecifier",
            "src": "209:12:27"
          },
          {
            "baseName": {
              "id": 27259,
              "name": "Test",
              "nameLocations": [
                "223:4:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8158,
              "src": "223:4:27"
            },
            "id": 27260,
            "nodeType": "InheritanceSpecifier",
            "src": "223:4:27"
          },
          {
            "baseName": {
              "id": 27261,
              "name": "Helper",
              "nameLocations": [
                "229:6:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27127,
              "src": "229:6:27"
            },
            "id": 27262,
            "nodeType": "InheritanceSpecifier",
            "src": "229:6:27"
          }
        ],
        "canonicalName": "Primatives01_requireBlockNotMined",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          27312,
          27127,
          8158,
          1843,
          1840,
          8116,
          5144,
          4755,
          3207,
          2671,
          1786,
          26576,
          27058
        ],
        "name": "Primatives01_requireBlockNotMined",
        "nameLocation": "172:33:27",
        "scope": 27313,
        "usedErrors": [
          25859,
          25861,
          25865,
          25867,
          25869,
          25871,
          26604,
          26606,
          26608
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 27
}