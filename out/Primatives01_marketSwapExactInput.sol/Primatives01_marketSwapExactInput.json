{
  "abi": [
    {
      "inputs": [],
      "name": "BlockMined",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BlockNotMined",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IdNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MerkleProofAndAmountMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MerkleProofsRequired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NftIdAlreadyOwned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NftIdNotReceived",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "NotEnoughTokenReceived",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedTokenStandard",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC_Token",
      "outputs": [
        {
          "internalType": "enum TokenStandard",
          "name": "standard",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "idsMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH_Token",
      "outputs": [
        {
          "internalType": "enum TokenStandard",
          "name": "standard",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "idsMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "swapsIds",
          "type": "bytes32[]"
        }
      ],
      "name": "bindLimitSwapFills",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "createSeaportListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "swap0",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "swap1",
          "type": "bytes32"
        }
      ],
      "name": "invertLimitSwapFills",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenIn",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenOut",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenInAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "basePrice",
          "type": "uint256"
        },
        {
          "internalType": "contract IPriceCurve",
          "name": "priceCurve",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenInAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenInId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenInIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenOutIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Primatives01.Call",
              "name": "fillCall",
              "type": "tuple"
            }
          ],
          "internalType": "struct Primatives01.UnsignedLimitSwapData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "limitSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mainnetFork",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetContract",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Primatives01.Call",
          "name": "oraclePriceCall",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenIn",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenOut",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenInAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenInId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenInIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenOutIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Primatives01.Call",
              "name": "fillCall",
              "type": "tuple"
            }
          ],
          "internalType": "struct Primatives01.UnsignedMarketSwapData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "marketSwapExactInput",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenIn",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenOut",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenOutAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenInId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenInIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenOutIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Primatives01.Call",
              "name": "fillCall",
              "type": "tuple"
            }
          ],
          "internalType": "struct Primatives01.UnsignedMarketSwapData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "marketSwapExactOutput",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "numberOfRuns",
          "type": "uint256"
        }
      ],
      "name": "maxRuns",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bitmapIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bit",
          "type": "uint256"
        }
      ],
      "name": "requireBitNotUsed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bitmapIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bit",
          "type": "uint256"
        }
      ],
      "name": "requireBitUsed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "requireBlockMined",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "requireBlockNotMined",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "numberOfBlocksElapsed",
          "type": "uint256"
        }
      ],
      "name": "requireBlocksElapsed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "requireLimitSwapFilled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "requireLimitSwapOpen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceDeltaOracle",
          "name": "priceDeltaOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceDecrease",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceDeltaOracle",
          "name": "priceDeltaOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceIncrease",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceLowerBound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceUpperBound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "stakerSignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Primatives01.UnsignedStakeProofData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "requireStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupFork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "setupFork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMarketSwapExactInput",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "token",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "idMerkleProofs",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Primatives01.UnsignedTransferData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bitmapIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bit",
          "type": "uint256"
        }
      ],
      "name": "useBit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6000805460ff1916600117815562fb8aed601355601580546001600160a01b031990811673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290811790925560168054821673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48908117909155608084905260a09290925260c083905260e0839052601780546001600160a81b031990811674c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200179091556018849055601984905561018060405261010084905261012092909252610140839052610160839052601a805490921674a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480017909155601b829055601c91909155601d80547388e6a0c2ddd26feeb64f039a2c41296fcb3f5640921691909117905534801561012057600080fd5b506121a1806101306000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80636fc4fde71161011a578063be330dbd116100ad578063f0c27e3d1161007c578063f0c27e3d1461039b578063f0f6ee2a146103ae578063f7440e16146103c1578063f9e3e2fc146103d4578063fa7626d4146103dd57600080fd5b8063be330dbd1461035b578063cc83c9ec1461036e578063d46b8d2c14610393578063db5b273a1461025457600080fd5b8063a9aa5f7e116100e9578063a9aa5f7e1461022e578063ad5c464814610330578063b4caf1cb1461022e578063ba414fa61461034357600080fd5b80636fc4fde71461021d5780638129ef951461024057806389a30271146102f2578063a06669bc1461031d57600080fd5b806347244b0d1161019257806356aa0ea61161016157806356aa0ea6146102a757806361ebbca8146102dc57806365c8efda1461022e5780636c73d637146102ea57600080fd5b806347244b0d1461022e57806348213e22146102865780634ef935ca1461021d578063502929ff1461029457600080fd5b8063193a0f62116101ce578063193a0f621461022e5780631ccf3c0c14610240578063333aa2fc1461025457806340362fea1461026a57600080fd5b806302908ed3146102005780630a9254e4146102155780630f9842501461021d578063181233ee1461022e575b600080fd5b61021361020e366004611535565b6103ea565b005b61021361040b565b61021361022b366004611535565b50565b61021361023c36600461154e565b5050565b61021361024e3660046116bd565b50505050565b61021361026236600461170e565b505050505050565b61027360145481565b6040519081526020015b60405180910390f35b61021361022b3660046117f2565b6102136102a2366004611535565b610415565b6017546018546019546102cc9260ff8116926101009091046001600160a01b03169184565b60405161027d949392919061188a565b61021361022b36600461195a565b610213610435565b601654610305906001600160a01b031681565b6040516001600160a01b03909116815260200161027d565b61021361032b366004611b5f565b610636565b601554610305906001600160a01b031681565b61034b61067a565b604051901515815260200161027d565b610213610369366004611c06565b6107a5565b601a54601b54601c546102cc9260ff8116926101009091046001600160a01b03169184565b6102136107cd565b6102136103a9366004611535565b6107d4565b6102136103bc366004611c89565b610942565b6102136103cf366004611dce565b610a13565b61027360135481565b60005461034b9060ff1681565b4381111561022b5760405163281f6f0d60e01b815260040160405180910390fd5b6104136107cd565b565b43811161022b5760405163c64743d560e01b815260040160405180910390fd5b604080518082018252600080825282518181526020808201855283015282516080810190935260178054610413949190829060ff16600381111561047b5761047b611874565b600381111561048c5761048c611874565b8152815461010090046001600160a01b031660208201526001820154604080830191909152600290920154606090910152805160808101909152601a8054829060ff1660038111156104e0576104e0611874565b60038111156104f1576104f1611874565b81526020016000820160019054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820154815260200160028201548152505067120a871cc00200006040518060a0016040528060006001600160a01b031681526020016000815260200160006001600160401b0381111561057c5761057c611585565b6040519080825280602002602001820160405280156105c257816020015b60408051808201909152600081526060602082015281526020019060019003908161059a5790505b508152602001600060405190808252806020026020018201604052801561061057816020015b6040805180820190915260008152606060208201528152602001906001900390816105e85790505b508152604080518082018252600080825282519081526020808201909352828201529101525b60006106428784610a4b565b90506106716040518060400160405280600b81526020016a52455155495245443a257360a81b81525082610a57565b50505050505050565b60008054610100900460ff161561069a5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107a05760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610728917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611ebe565b60408051601f198184030181529082905261074291611eef565b6000604051808303816000865af19150503d806000811461077f576040519150601f19603f3d011682016040523d82523d6000602084013e610784565b606091505b509150508080602001905181019061079c9190611f0b565b9150505b919050565b600061067185858885600001518588886020015189604001518a606001518b60800151610a9c565b6104136013545b60405163f877cb1960e01b815260206004820152600f60248201526e1350525393915517d49410d7d55493608a1b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636ba3ba2b90829063f877cb1990606401600060405180830381865afa15801561084b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108739190810190611f2d565b836040518363ffffffff1660e01b8152600401610891929190611fcf565b6020604051808303816000875af11580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d49190611ff1565b6014819055604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b15801561092757600080fd5b505af115801561093b573d6000803e3d6000fd5b5050505050565b61094c8682610bf4565b60008060208301516040516306e5639760e21b815260048101889052602481018790526044810183905260648101919091529091506000906001600160a01b03851690631b958e5c906084016020604051808303816000875af11580156109b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109db9190611ff1565b9050610a0788888b866000015187602001518689604001518a606001518b608001518c60a00151610a9c565b50505050505050505050565b610a1e868483610c94565b60006001600160a01b038516610a35578151610a37565b845b905061067187878387878760200151610ccf565b6303516c4c5b92915050565b61023c8282604051602401610a6d929190611fcf565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526110d0565b610aaa8a8989898888610ccf565b6000806000610aba8b8d876110f1565b90935083925090508015610ae15760405163170fb50d60e01b815260040160405180910390fd5b505081516020830151604051630a8c7dad60e21b8152736fe756b9c61cf7e9f11d96740b096e51b64ebf1392632a31f6b492610b1f9260040161200a565b600060405180830381600087803b158015610b3957600080fd5b505af1158015610b4d573d6000803e3d6000fd5b50505050600080610b5f8b8d876110f1565b9150915060008c60600151118015610b775750600181105b80610b90575060408c015115801590610b905750845181105b15610bae5760405163e904550160e01b815260040160405180910390fd5b6000610bba8484612044565b905088811015610be457604051634c19cdaf60e11b81526004810182905260240160405180910390fd5b5050505050505050505050505050565b6040820151158015610c095750606082015115155b8015610c1d57508060400151826060015114155b15610c3b576040516369443e5560e11b815260040160405180910390fd5b60408201511561023c57806060015151600003610c6b576040516308bf63cd60e01b815260040160405180910390fd5b80602001518160600151511461023c5760405163024c78fd60e51b815260040160405180910390fd5b604083015115801590610cac57508181602001515114155b15610cca5760405163024c78fd60e51b815260040160405180910390fd5b505050565b600086516003811115610ce457610ce4611874565b03610d705760208601516040516323b872dd60e01b81526001600160a01b038781166004830152868116602483015260448201869052909116906323b872dd906064016020604051808303816000875af1158015610d46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6a9190611f0b565b50610262565b600186516003811115610d8557610d85611874565b03610f06576040860151610e095760208601516040516323b872dd60e01b81526001600160a01b038781166004830152868116602483015260448201859052909116906323b872dd906064015b600060405180830381600087803b158015610dec57600080fd5b505af1158015610e00573d6000803e3d6000fd5b50505050610262565b60005b81518160ff161015610d6a57610e568760400151838360ff1681518110610e3557610e35612057565b602002602001015160200151848460ff168151811061024e5761024e612057565b86602001516001600160a01b03166323b872dd8787858560ff1681518110610e8057610e80612057565b6020908102919091010151516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015610edb57600080fd5b505af1158015610eef573d6000803e3d6000fd5b505050508080610efe9061206d565b915050610e0c565b600286516003811115610f1b57610f1b611874565b036110b7576040860151610f81576020860151604051637921219560e11b81526001600160a01b0387811660048301528681166024830152604482018590526064820186905260a06084830152600060a48301529091169063f242432a9060c401610dd2565b60608060005b83518160ff16101561104757610fd18960400151858360ff1681518110610fb057610fb0612057565b602002602001015160200151868460ff168151811061024e5761024e612057565b838160ff1681518110610fe657610fe6612057565b602002602001015160000151838260ff168151811061100757611007612057565b6020026020010181815250506001828260ff168151811061102a5761102a612057565b60209081029190910101528061103f8161206d565b915050610f87565b5087602001516001600160a01b0316632eb2c2d6888885856040518563ffffffff1660e01b815260040161107e94939291906120c7565b600060405180830381600087803b15801561109857600080fd5b505af11580156110ac573d6000803e3d6000fd5b505050505050610262565b604051639a9d6f4f60e01b815260040160405180910390fd5b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008060018451600381111561110957611109611874565b03611296576000846060015111801561119f5750602084015160608501516040516331a9108f60e11b815260048101919091526001600160a01b03878116921690636352211e90602401602060405180830381865afa158015611170573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111949190612122565b6001600160a01b0316145b156111ac57506001611296565b6040840151156112965760005b83518160ff16101561129457856001600160a01b031685602001516001600160a01b0316636352211e868460ff16815181106111f7576111f7612057565b6020026020010151600001516040518263ffffffff1660e01b815260040161122191815260200190565b602060405180830381865afa15801561123e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112629190612122565b6001600160a01b031603611282578161127a8161213f565b925050611294565b8061128c8161206d565b9150506111b9565b505b6112a18486856112d8565b91506002845160038111156112b8576112b8611874565b1480156112c85750604084015115155b156112d05750805b935093915050565b60006003845160038111156112ef576112ef611874565b0361130557506001600160a01b0382163161152e565b60008451600381111561131a5761131a611874565b036113975760208401516040516370a0823160e01b81526001600160a01b038581166004830152909116906370a08231906024015b602060405180830381865afa15801561136c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113909190611ff1565b905061152e565b6001845160038111156113ac576113ac611874565b036113e55760208401516040516370a0823160e01b81526001600160a01b038581166004830152909116906370a082319060240161134f565b6002845160038111156113fa576113fa611874565b036110b7576060840151156114475760208401516060850151604051627eeac760e11b81526001600160a01b038681166004830152602482019290925291169062fdd58e9060440161134f565b6000805b83518160ff16101561152a57600086602001516001600160a01b031662fdd58e87878560ff168151811061148157611481612057565b6020908102919091010151516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa1580156114d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fa9190611ff1565b11611506576000611509565b60015b6115169060ff1683612158565b9150806115228161206d565b91505061144b565b5090505b9392505050565b60006020828403121561154757600080fd5b5035919050565b6000806040838503121561156157600080fd5b50508035926020909101359150565b6001600160a01b038116811461022b57600080fd5b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156115bd576115bd611585565b60405290565b60405160a081016001600160401b03811182821017156115bd576115bd611585565b60405160c081016001600160401b03811182821017156115bd576115bd611585565b604051601f8201601f191681016001600160401b038111828210171561162f5761162f611585565b604052919050565b80356107a081611570565b60006080828403121561165457600080fd5b604051608081018181106001600160401b038211171561167657611676611585565b60405290508082356004811061168b57600080fd5b8152602083013561169b81611570565b8060208301525060408301356040820152606083013560608201525092915050565b60008060008061014085870312156116d457600080fd5b84356116df81611570565b93506116ee8660208701611642565b92506116fd8660a08701611642565b939692955092936101200135925050565b600080600080600080610180878903121561172857600080fd5b863561173381611570565b95506117428860208901611642565b94506117518860a08901611642565b93506101208701359250610140870135915061016087013590509295509295509295565b60006001600160401b0382111561178e5761178e611585565b50601f01601f191660200190565b600082601f8301126117ad57600080fd5b81356117c06117bb82611775565b611607565b8181528460208386010111156117d557600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561180457600080fd5b81356001600160401b038082111561181b57600080fd5b908301906020828603121561182f57600080fd5b60405160208101818110838211171561184a5761184a611585565b60405282358281111561185c57600080fd5b6118688782860161179c565b82525095945050505050565b634e487b7160e01b600052602160045260246000fd5b60808101600486106118ac57634e487b7160e01b600052602160045260246000fd5b9481526001600160a01b03939093166020840152604083019190915260609091015290565b60006001600160401b038211156118ea576118ea611585565b5060051b60200190565b600082601f83011261190557600080fd5b813560206119156117bb836118d1565b82815260059290921b8401810191818101908684111561193457600080fd5b8286015b8481101561194f5780358352918301918301611938565b509695505050505050565b60006020828403121561196c57600080fd5b81356001600160401b0381111561198257600080fd5b61198e848285016118f4565b949350505050565b6000604082840312156119a857600080fd5b6119b061159b565b905081356119bd81611570565b815260208201356001600160401b038111156119d857600080fd5b6119e48482850161179c565b60208301525092915050565b600082601f830112611a0157600080fd5b81356020611a116117bb836118d1565b82815260059290921b84018101918181019086841115611a3057600080fd5b8286015b8481101561194f5780356001600160401b0380821115611a545760008081fd5b908801906040828b03601f1901811315611a6e5760008081fd5b611a7661159b565b838801358152908301359082821115611a8f5760008081fd5b611a9d8c89848701016118f4565b818901528652505050918301918301611a34565b600060a08284031215611ac357600080fd5b611acb6115c3565b9050611ad682611637565b81526020820135602082015260408201356001600160401b0380821115611afc57600080fd5b611b08858386016119f0565b60408401526060840135915080821115611b2157600080fd5b611b2d858386016119f0565b60608401526080840135915080821115611b4657600080fd5b50611b5384828501611996565b60808301525092915050565b6000806000806000806101808789031215611b7957600080fd5b86356001600160401b0380821115611b9057600080fd5b611b9c8a838b01611996565b975060208901359150611bae82611570565b819650611bbe8a60408b01611642565b9550611bcd8a60c08b01611642565b94506101408901359350610160890135915080821115611bec57600080fd5b50611bf989828a01611ab1565b9150509295509295509295565b6000806000806000806101808789031215611c2057600080fd5b8635611c2b81611570565b95506020870135611c3b81611570565b9450611c4a8860408901611642565b9350611c598860c08901611642565b925061014087013591506101608701356001600160401b03811115611c7d57600080fd5b611bf989828a01611ab1565b6000806000806000806000806101c0898b031215611ca657600080fd5b883597506020890135611cb881611570565b9650611cc78a60408b01611642565b9550611cd68a60c08b01611642565b945061014089013593506101608901359250610180890135611cf781611570565b91506101a08901356001600160401b0380821115611d1457600080fd5b908a019060c0828d031215611d2857600080fd5b611d306115e5565b611d3983611637565b81526020830135602082015260408301356040820152606083013582811115611d6157600080fd5b611d6d8e8286016119f0565b606083015250608083013582811115611d8557600080fd5b611d918e8286016119f0565b60808301525060a083013582811115611da957600080fd5b611db58e828601611996565b60a0830152508093505050509295985092959890939650565b6000806000806000806101208789031215611de857600080fd5b611df28888611642565b95506080870135611e0281611570565b945060a0870135611e1281611570565b935060c0870135925060e087013591506101008701356001600160401b0380821115611e3d57600080fd5b908801906040828b031215611e5157600080fd5b611e5961159b565b8235611e6481611570565b8152602083013582811115611e7857600080fd5b611e848c8286016119f0565b6020830152508093505050509295509295509295565b60005b83811015611eb5578181015183820152602001611e9d565b50506000910152565b6001600160e01b0319831681528151600090611ee1816004850160208701611e9a565b919091016004019392505050565b60008251611f01818460208701611e9a565b9190910192915050565b600060208284031215611f1d57600080fd5b8151801515811461152e57600080fd5b600060208284031215611f3f57600080fd5b81516001600160401b03811115611f5557600080fd5b8201601f81018413611f6657600080fd5b8051611f746117bb82611775565b818152856020838501011115611f8957600080fd5b611f9a826020830160208601611e9a565b95945050505050565b60008151808452611fbb816020860160208601611e9a565b601f01601f19169290920160200192915050565b604081526000611fe26040830185611fa3565b90508260208301529392505050565b60006020828403121561200357600080fd5b5051919050565b6001600160a01b038316815260406020820181905260009061198e90830184611fa3565b634e487b7160e01b600052601160045260246000fd5b81810381811115610a5157610a5161202e565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81036120835761208361202e565b60010192915050565b600081518084526020808501945080840160005b838110156120bc578151875295820195908201906001016120a0565b509495945050505050565b6001600160a01b0385811682528416602082015260a0604082018190526000906120f39083018561208c565b8281036060840152612105818561208c565b838103608090940193909352505060008152602001949350505050565b60006020828403121561213457600080fd5b815161152e81611570565b6000600182016121515761215161202e565b5060010190565b80820180821115610a5157610a5161202e56fea2646970667358221220ad840c828c8654df28b3df6267fc47c11f83d81987046e4029f168963b907f9664736f6c63430008110033",
    "sourceMap": "1572:26:0:-:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;255:10:38;225:40;;300:64;;;-1:-1:-1;;;;;;300:64:38;;;322:42;300:64;;;;;;368;;;;;390:42;368:64;;;;;;163:507:39;463:40:38;;;;;;;;;;;;;;;;437:66;;;-1:-1:-1;;;;;;437:66:38;;;;;;;;;;;;;;;;533:40;163:507:39;533:40:38;1572:26:0;533:40:38;;;;;;;;;;;;;;;;507:66;;;;;;;;;;;;;;;;;;;;578:107;;;642:42;578:107;;;;;;;;163:507:39;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "163:507:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1664:137:36;;;;;;:::i;:::-;;:::i;:::-;;242:47:39;;;:::i;6317:55:36:-;;;;;;:::i;:::-;1664:137;;1317:69;;;;;;:::i;:::-;;;;2471:126;;;;;;:::i;:::-;;;;;;2720:165;;;;;;:::i;:::-;;;;;;;;269:26:38;;;;;;;;;4613:25:43;;;4601:2;4586:18;269:26:38;;;;;;;;3267:72:36;;;;;;:::i;1805:138::-;;;;;;:::i;:::-;;:::i;437:66:38:-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;437:66:38;;;;;;;;;;;;;;:::i;6997:73:36:-;;;;;;:::i;293:374:39:-;;;:::i;368:64:38:-;;;;;-1:-1:-1;;;;;368:64:38;;;;;;-1:-1:-1;;;;;8427:32:43;;;8409:51;;8397:2;8382:18;368:64:38;8263:203:43;3839:642:36;;;;;;:::i;:::-;;:::i;300:64:38:-;;;;;-1:-1:-1;;;;;300:64:38;;;1819:584:0;;;:::i;:::-;;;12606:14:43;;12599:22;12581:41;;12569:2;12554:18;1819:584:0;12441:187:43;4600:563:36;;;;;;:::i;:::-;;:::i;507:66:38:-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:66:38;;;;693:63;;;:::i;760:161::-;;;;;;:::i;:::-;;:::i;5269:1006:36:-;;;;;;:::i;:::-;;:::i;3343:378::-;;;;;;:::i;:::-;;:::i;225:40:38:-;;;;;;1572:26:0;;;;;;;;;1664:137:36;1746:12;1732:11;:26;1728:69;;;1775:15;;-1:-1:-1;;;1775:15:36;;;;;;;;;;;242:47:39;273:11;:9;:11::i;:::-;242:47::o;1805:138:36:-;1891:12;1876:11;:27;1872:67;;1920:12;;-1:-1:-1;;;1920:12:36;;;;;;;;;;;293:374:39;371:30;;;;;;;;-1:-1:-1;371:30:39;;;388:12;;;;;371:30;388:12;;;;;371:30;;;343:319;;;;;;;;427:10;343:319;;;;;427:10;343:319;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;343:319:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:10;343:319;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;343:319:39;-1:-1:-1;;;;;343:319:39;-1:-1:-1;;;;;343:319:39;;;;;;;;;;;;;;;;;;;;;463:20;491:165;;;;;;;;531:1;-1:-1:-1;;;;;491:165:39;;;;;543:1;491:165;;;;574:1;-1:-1:-1;;;;;554:22:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;554:22:39;;;;;;;;;;;;;;;-1:-1:-1;491:165:39;;;;606:1;586:22;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;586:22:39;;;;;;;;;;;;;;;-1:-1:-1;491:165:39;;618:30;;;;;;;;-1:-1:-1;618:30:39;;;635:12;;;;;491:165;635:12;;;;;;618:30;;;;491:165;;;3839:642:36;4056:27;4086:48;4103:15;4120:13;4086:16;:48::i;:::-;4056:78;;4140:50;;;;;;;;;;;;;;-1:-1:-1;;;4140:50:36;;;4167:22;4140:11;:50::i;:::-;4050:431;3839:642;;;;;;:::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;17159:51:43;;;-1:-1:-1;;;17226:18:43;;;17219:34;2196:43:0;;;;;;;;;17132:18:43;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;4600:563:36:-;4816:26;4914:244;4931:7;4946:8;4962:5;4975:4;:14;;;4997:21;5026:14;5048:4;:14;;;5070:4;:26;;;5104:4;:27;;;5139:4;:13;;;4914:9;:244::i;693:63:38:-;728:23;738:12;;760:161;839:31;;-1:-1:-1;;;839:31:38;;18684:2:43;839:31:38;;;18666:21:43;18723:2;18703:18;;;18696:30;-1:-1:-1;;;18742:18:43;;;18735:45;825:13:38;;;;;;839:12;;18797:18:43;;839:31:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;839:31:38;;;;;;;;;;;;:::i;:::-;872:11;825:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;811:11;:73;;;890:26;;-1:-1:-1;;;890:26:38;;;;;4613:25:43;;;;890:13:38;;;;4586:18:43;;890:26:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:161;:::o;5269:1006:36:-;5505:42;5533:7;5542:4;5505:27;:42::i;:::-;5709:17;;5932:18;;;;5871:80;;-1:-1:-1;;;5871:80:36;;;;;20471:25:43;;;20512:18;;;20505:34;;;20555:18;;;20548:34;;;20598:18;;;20591:34;;;;5709:49:36;;-1:-1:-1;5841:27:36;;-1:-1:-1;;;;;5871:20:36;;;;;20443:19:43;;5871:80:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5841:110;;5958:249;5975:7;5990:8;6006:5;6019:4;:14;;;6041:4;:18;;;6067:22;6097:4;:14;;;6119:4;:26;;;6153:4;:27;;;6188:4;:13;;;5958:9;:249::i;:::-;5499:776;;5269:1006;;;;;;;;:::o;3343:378::-;3513:47;3540:5;3547:6;3555:4;3513:26;:47::i;:::-;3566:18;-1:-1:-1;;;;;3587:23:36;;:52;;3625:14;;3587:52;;;3613:9;3587:52;3566:73;;3645:71;3658:5;3665;3672:10;3684:6;3692:2;3696:4;:19;;;3645:12;:71::i;10392:161::-;10517:8;10392:161;;;;;:::o;6548:139:12:-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:12;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:12;-1:-1:-1;;;6628:51:12;;;6612:15;:68::i;8920:1356:36:-;9249:88;9262:7;9271:5;9278:9;9289:13;9304:9;9315:21;9249:12;:88::i;:::-;9344:27;9386:28;9416:24;9444:60;9464:5;9471:8;9481:22;9444:19;:60::i;:::-;9385:119;;-1:-1:-1;9385:119:36;;-1:-1:-1;9385:119:36;-1:-1:-1;9572:23:36;;9568:74;;9614:19;;-1:-1:-1;;;9614:19:36;;;;;;;;;;;9568:74;-1:-1:-1;;9681:23:36;;9706:13;;;;9654:66;;-1:-1:-1;;;9654:66:36;;599:42;;9654:26;;:66;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9728:25;9755:22;9781:60;9801:5;9808:8;9818:22;9781:19;:60::i;:::-;9727:114;;;;9874:1;9860:8;:11;;;:15;:40;;;;;9899:1;9879:17;:21;9860:40;9859:143;;;-1:-1:-1;9912:22:36;;;;:36;;;;:89;;;9972:22;:29;9952:17;:49;9912:89;9848:424;;;10024:18;;-1:-1:-1;;;10024:18:36;;;;;;;;;;;9848:424;10063:30;10096:45;10119:22;10096:20;:45;:::i;:::-;10063:78;;10178:14;10153:22;:39;10149:117;;;10211:46;;-1:-1:-1;;;10211:46:36;;;;;4613:25:43;;;4586:18;;10211:46:36;;;;;;;10149:117;10055:217;9243:1033;;;8920:1356;;;;;;;;;;:::o;8004:634::-;8135:19;;;;:33;:56;;;;-1:-1:-1;8178:8:36;;;;:13;;8135:56;:100;;;;;8213:12;:22;;;8201:5;:8;;;:34;;8135:100;8124:154;;;8257:14;;-1:-1:-1;;;8257:14:36;;;;;;;;;;;8124:154;8288:19;;;;:33;8284:350;;8335:12;:34;;;:41;8380:1;8335:46;8331:100;;8400:22;;-1:-1:-1;;;8400:22:36;;;;;;;;;;;8331:100;8487:12;:26;;;8442:12;:34;;;:41;:71;8438:133;;8532:30;;-1:-1:-1;;;8532:30:36;;;;;;;;;;;8642:274;8777:19;;;;:33;;;;:81;;;8852:6;8814:12;:27;;;:34;:44;;8777:81;8773:139;;;8875:30;;-1:-1:-1;;;8875:30:36;;;;;;;;;;;8773:139;8642:274;;;:::o;616:1333:37:-;783:19;765:14;;:37;;;;;;;;:::i;:::-;;761:121;;819:10;;;;812:49;;-1:-1:-1;;;812:49:37;;-1:-1:-1;;;;;21479:15:43;;;812:49:37;;;21461:34:43;21531:15;;;21511:18;;;21504:43;21563:18;;;21556:34;;;812:31:37;;;;;;21396:18:43;;812:49:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;869:7;;761:121;914:20;896:14;;:38;;;;;;;;:::i;:::-;;892:1013;;948:19;;;;944:358;;1001:10;;;;993:46;;-1:-1:-1;;;993:46:37;;-1:-1:-1;;;;;21479:15:43;;;993:46:37;;;21461:34:43;21531:15;;;21511:18;;;21504:43;21563:18;;;21556:34;;;993:32:37;;;;;;21396:18:43;;993:46:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1309:7;;944:358;1069:7;1064:230;1082:14;:21;1080:1;:23;;;1064:230;;;1122:85;1140:5;:19;;;1161:14;1176:1;1161:17;;;;;;;;;;:::i;:::-;;;;;;;:23;;;1186:14;1201:1;1186:17;;;;;;;;;;:::i;1122:85::-;1227:5;:10;;;-1:-1:-1;;;;;1219:32:37;;1252:4;1258:2;1262:14;1277:1;1262:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;:20;1219:64;;-1:-1:-1;;;;;;1219:64:37;;;;;;;-1:-1:-1;;;;;21479:15:43;;;1219:64:37;;;21461:34:43;21531:15;;;;21511:18;;;21504:43;21563:18;;;21556:34;21396:18;;1219:64:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1105:3;;;;;:::i;:::-;;;;1064:230;;892:1013;1350:21;1332:14;;:39;;;;;;;;:::i;:::-;;1328:577;;1385:19;;;;1381:504;;1439:10;;;;1430:63;;-1:-1:-1;;;1430:63:37;;-1:-1:-1;;;;;22264:15:43;;;1430:63:37;;;22246:34:43;22316:15;;;22296:18;;;22289:43;22348:18;;;22341:34;;;22391:18;;;22384:34;;;22226:3;22434:19;;;22427:32;-1:-1:-1;22475:19:43;;;22468:30;1430:37:37;;;;;;22515:19:43;;1430:63:37;21913:627:43;1381:504:37;1518:17;1545:21;1581:7;1576:221;1594:14;:21;1592:1;:23;;;1576:221;;;1634:85;1652:5;:19;;;1673:14;1688:1;1673:17;;;;;;;;;;:::i;:::-;;;;;;;:23;;;1698:14;1713:1;1698:17;;;;;;;;;;:::i;1634:85::-;1740:14;1755:1;1740:17;;;;;;;;;;:::i;:::-;;;;;;;:20;;;1731:3;1735:1;1731:6;;;;;;;;;;:::i;:::-;;;;;;:29;;;;;1785:1;1772:7;1780:1;1772:10;;;;;;;;;;:::i;:::-;;;;;;;;;;:14;1617:3;;;;:::i;:::-;;;;1576:221;;;;1815:5;:10;;;-1:-1:-1;;;;;1806:42:37;;1849:4;1855:2;1859:3;1864:7;1806:70;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:377;;1892:7;;1328:577;1918:26;;-1:-1:-1;;;1918:26:37;;;;;;;;;;;181:376:12;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;2865:783:37:-;3008:12;;3069:20;3051:14;;:38;;;;;;;;:::i;:::-;;3047:416;;3114:1;3103:5;:8;;;:12;:62;;;;-1:-1:-1;3127:10:37;;;;3147:8;;;;3119:37;;-1:-1:-1;;;3119:37:37;;;;;4613:25:43;;;;-1:-1:-1;;;;;3119:46:37;;;;:27;;;;4586:18:43;;3119:37:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3119:46:37;;3103:62;3099:358;;;-1:-1:-1;3192:1:37;3099:358;;;3212:19;;;;:33;3208:249;;3262:7;3257:192;3275:14;:21;3273:1;:23;;;3257:192;;;3372:5;-1:-1:-1;;;;;3319:58:37;3327:5;:10;;;-1:-1:-1;;;;;3319:27:37;;3347:14;3362:1;3347:17;;;;;;;;;;:::i;:::-;;;;;;;:20;;;3319:49;;;;;;;;;;;;;4613:25:43;;4601:2;4586:18;;4467:177;3319:49:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3319:58:37;;3315:124;;3393:14;;;;:::i;:::-;;;;3421:5;;3315:124;3298:3;;;;:::i;:::-;;;;3257:192;;;;3208:249;3479:39;3489:5;3496;3503:14;3479:9;:39::i;:::-;3469:49;-1:-1:-1;3547:21:37;3529:14;;:39;;;;;;;;:::i;:::-;;:76;;;;-1:-1:-1;3572:19:37;;;;:33;;3529:76;3525:119;;;-1:-1:-1;3630:7:37;3525:119;2865:783;;;;;;:::o;1953:853::-;2069:4;2103:17;2085:14;;:35;;;;;;;;:::i;:::-;;2081:76;;-1:-1:-1;;;;;;2137:13:37;;;2130:20;;2081:76;2189:19;2171:14;;:37;;;;;;;;:::i;:::-;;2167:100;;2232:10;;;;2225:35;;-1:-1:-1;;;2225:35:37;;-1:-1:-1;;;;;8427:32:43;;;2225:35:37;;;8409:51:43;2225:28:37;;;;;;8382:18:43;;2225:35:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2218:42;;;;2167:100;2299:20;2281:14;;:38;;;;;;;;:::i;:::-;;2277:102;;2344:10;;;;2336:36;;-1:-1:-1;;;2336:36:37;;-1:-1:-1;;;;;8427:32:43;;;2336:36:37;;;8409:51:43;2336:29:37;;;;;;8382:18:43;;2336:36:37;8263:203:43;2277:102:37;2411:21;2393:14;;:39;;;;;;;;:::i;:::-;;2389:373;;2446:8;;;;:12;2442:314;;2486:10;;;;2515:8;;;;2477:47;;-1:-1:-1;;;2477:47:37;;-1:-1:-1;;;;;17177:32:43;;;2477:47:37;;;17159:51:43;17226:18;;;17219:34;;;;2477:30:37;;;;;17132:18:43;;2477:47:37;16985:274:43;2442:314:37;2549:12;;2571:153;2589:14;:21;2587:1;:23;;;2571:153;;;2703:1;2650:5;:10;;;-1:-1:-1;;;;;2641:30:37;;2672:5;2679:14;2694:1;2679:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;:20;2641:59;;-1:-1:-1;;;;;;2641:59:37;;;;;;;-1:-1:-1;;;;;17177:32:43;;;2641:59:37;;;17159:51:43;17226:18;;;17219:34;17132:18;;2641:59:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;:71;;2711:1;2641:71;;;2707:1;2641:71;2629:84;;;;;;:::i;:::-;;-1:-1:-1;2612:3:37;;;;:::i;:::-;;;;2571:153;;;-1:-1:-1;2740:7:37;-1:-1:-1;1953:853:37;;;;;;:::o;14:180:43:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:43;;14:180;-1:-1:-1;14:180:43:o;384:248::-;452:6;460;513:2;501:9;492:7;488:23;484:32;481:52;;;529:1;526;519:12;481:52;-1:-1:-1;;552:23:43;;;622:2;607:18;;;594:32;;-1:-1:-1;384:248:43:o;890:145::-;-1:-1:-1;;;;;979:31:43;;969:42;;959:70;;1025:1;1022;1015:12;1040:127;1101:10;1096:3;1092:20;1089:1;1082:31;1132:4;1129:1;1122:15;1156:4;1153:1;1146:15;1172:257;1244:4;1238:11;;;1276:17;;-1:-1:-1;;;;;1308:34:43;;1344:22;;;1305:62;1302:88;;;1370:18;;:::i;:::-;1406:4;1399:24;1172:257;:::o;1434:253::-;1506:2;1500:9;1548:4;1536:17;;-1:-1:-1;;;;;1568:34:43;;1604:22;;;1565:62;1562:88;;;1630:18;;:::i;1692:252::-;1764:2;1758:9;1806:3;1794:16;;-1:-1:-1;;;;;1825:34:43;;1861:22;;;1822:62;1819:88;;;1887:18;;:::i;1949:275::-;2020:2;2014:9;2085:2;2066:13;;-1:-1:-1;;2062:27:43;2050:40;;-1:-1:-1;;;;;2105:34:43;;2141:22;;;2102:62;2099:88;;;2167:18;;:::i;:::-;2203:2;2196:22;1949:275;;-1:-1:-1;1949:275:43:o;2229:148::-;2297:20;;2326:45;2297:20;2326:45;:::i;2382:771::-;2434:5;2482:4;2470:9;2465:3;2461:19;2457:30;2454:50;;;2500:1;2497;2490:12;2454:50;2533:2;2527:9;2575:4;2567:6;2563:17;2646:6;2634:10;2631:22;-1:-1:-1;;;;;2598:10:43;2595:34;2592:62;2589:88;;;2657:18;;:::i;:::-;2693:2;2686:22;2726:6;-1:-1:-1;2726:6:43;2756:23;;2810:1;2798:14;;2788:42;;2826:1;2823;2816:12;2788:42;2839:23;;2914:2;2899:18;;2886:32;2927:47;2886:32;2927:47;:::i;:::-;3007:7;3002:2;2994:6;2990:15;2983:32;;3076:2;3065:9;3061:18;3048:32;3043:2;3035:6;3031:15;3024:57;3142:2;3131:9;3127:18;3114:32;3109:2;3101:6;3097:15;3090:57;;2382:771;;;;:::o;3158:578::-;3314:6;3322;3330;3338;3391:3;3379:9;3370:7;3366:23;3362:33;3359:53;;;3408:1;3405;3398:12;3359:53;3447:9;3434:23;3466:45;3505:5;3466:45;:::i;:::-;3530:5;-1:-1:-1;3554:52:43;3598:7;3593:2;3578:18;;3554:52;:::i;:::-;3544:62;;3625:53;3670:7;3664:3;3653:9;3649:19;3625:53;:::i;:::-;3158:578;;;;-1:-1:-1;3615:63:43;;3725:3;3710:19;3697:33;;-1:-1:-1;;3158:578:43:o;3741:721::-;3920:6;3928;3936;3944;3952;3960;4013:3;4001:9;3992:7;3988:23;3984:33;3981:53;;;4030:1;4027;4020:12;3981:53;4069:9;4056:23;4088:45;4127:5;4088:45;:::i;:::-;4152:5;-1:-1:-1;4176:52:43;4220:7;4215:2;4200:18;;4176:52;:::i;:::-;4166:62;;4247:53;4292:7;4286:3;4275:9;4271:19;4247:53;:::i;:::-;4237:63;;4347:3;4336:9;4332:19;4319:33;4309:43;;4399:3;4388:9;4384:19;4371:33;4361:43;;4451:3;4440:9;4436:19;4423:33;4413:43;;3741:721;;;;;;;;:::o;4649:186::-;4697:4;-1:-1:-1;;;;;4722:6:43;4719:30;4716:56;;;4752:18;;:::i;:::-;-1:-1:-1;4818:2:43;4797:15;-1:-1:-1;;4793:29:43;4824:4;4789:40;;4649:186::o;4840:462::-;4882:5;4935:3;4928:4;4920:6;4916:17;4912:27;4902:55;;4953:1;4950;4943:12;4902:55;4989:6;4976:20;5020:48;5036:31;5064:2;5036:31;:::i;:::-;5020:48;:::i;:::-;5093:2;5084:7;5077:19;5139:3;5132:4;5127:2;5119:6;5115:15;5111:26;5108:35;5105:55;;;5156:1;5153;5146:12;5105:55;5221:2;5214:4;5206:6;5202:17;5195:4;5186:7;5182:18;5169:55;5269:1;5244:16;;;5262:4;5240:27;5233:38;;;;5248:7;4840:462;-1:-1:-1;;;4840:462:43:o;5307:766::-;5407:6;5460:2;5448:9;5439:7;5435:23;5431:32;5428:52;;;5476:1;5473;5466:12;5428:52;5516:9;5503:23;-1:-1:-1;;;;;5586:2:43;5578:6;5575:14;5572:34;;;5602:1;5599;5592:12;5572:34;5625:22;;;;5681:2;5663:16;;;5659:25;5656:45;;;5697:1;5694;5687:12;5656:45;5730:2;5724:9;5772:2;5764:6;5760:15;5825:6;5813:10;5810:22;5805:2;5793:10;5790:18;5787:46;5784:72;;;5836:18;;:::i;:::-;5872:2;5865:22;5912:16;;5940;;;5937:36;;;5969:1;5966;5959:12;5937:36;5997:44;6033:7;6022:8;6018:2;6014:17;5997:44;:::i;:::-;5982:60;;-1:-1:-1;5989:6:43;5307:766;-1:-1:-1;;;;;5307:766:43:o;6078:127::-;6139:10;6134:3;6130:20;6127:1;6120:31;6170:4;6167:1;6160:15;6194:4;6191:1;6184:15;6210:587;6445:3;6430:19;;6479:1;6468:13;;6458:144;;6524:10;6519:3;6515:20;6512:1;6505:31;6559:4;6556:1;6549:15;6587:4;6584:1;6577:15;6458:144;6611:25;;;-1:-1:-1;;;;;6672:32:43;;;;6667:2;6652:18;;6645:60;6736:2;6721:18;;6714:34;;;;6779:2;6764:18;;;6757:34;6210:587;:::o;6802:183::-;6862:4;-1:-1:-1;;;;;6887:6:43;6884:30;6881:56;;;6917:18;;:::i;:::-;-1:-1:-1;6962:1:43;6958:14;6974:4;6954:25;;6802:183::o;6990:662::-;7044:5;7097:3;7090:4;7082:6;7078:17;7074:27;7064:55;;7115:1;7112;7105:12;7064:55;7151:6;7138:20;7177:4;7201:60;7217:43;7257:2;7217:43;:::i;7201:60::-;7295:15;;;7381:1;7377:10;;;;7365:23;;7361:32;;;7326:12;;;;7405:15;;;7402:35;;;7433:1;7430;7423:12;7402:35;7469:2;7461:6;7457:15;7481:142;7497:6;7492:3;7489:15;7481:142;;;7563:17;;7551:30;;7601:12;;;;7514;;7481:142;;;-1:-1:-1;7641:5:43;6990:662;-1:-1:-1;;;;;;6990:662:43:o;7657:348::-;7741:6;7794:2;7782:9;7773:7;7769:23;7765:32;7762:52;;;7810:1;7807;7800:12;7762:52;7850:9;7837:23;-1:-1:-1;;;;;7875:6:43;7872:30;7869:50;;;7915:1;7912;7905:12;7869:50;7938:61;7991:7;7982:6;7971:9;7967:22;7938:61;:::i;:::-;7928:71;7657:348;-1:-1:-1;;;;7657:348:43:o;8471:493::-;8522:5;8570:4;8558:9;8553:3;8549:19;8545:30;8542:50;;;8588:1;8585;8578:12;8542:50;8610:22;;:::i;:::-;8601:31;;8669:9;8656:23;8688:47;8727:7;8688:47;:::i;:::-;8744:22;;8817:2;8802:18;;8789:32;-1:-1:-1;;;;;8833:30:43;;8830:50;;;8876:1;8873;8866:12;8830:50;8912:45;8953:3;8944:6;8933:9;8929:22;8912:45;:::i;:::-;8907:2;8900:5;8896:14;8889:69;;8471:493;;;;:::o;8969:1459::-;9036:5;9089:3;9082:4;9074:6;9070:17;9066:27;9056:55;;9107:1;9104;9097:12;9056:55;9143:6;9130:20;9169:4;9193:60;9209:43;9249:2;9209:43;:::i;9193:60::-;9287:15;;;9373:1;9369:10;;;;9357:23;;9353:32;;;9318:12;;;;9397:15;;;9394:35;;;9425:1;9422;9415:12;9394:35;9461:2;9453:6;9449:15;9473:926;9489:6;9484:3;9481:15;9473:926;;;9575:3;9562:17;-1:-1:-1;;;;;9652:2:43;9639:11;9636:19;9633:109;;;9696:1;9725:2;9721;9714:14;9633:109;9765:24;;;;9812:4;9840:12;;;-1:-1:-1;;9836:26:43;9832:35;-1:-1:-1;9829:125:43;;;9908:1;9937:2;9933;9926:14;9829:125;9980:22;;:::i;:::-;10042:11;;;10029:25;10015:40;;10097:11;;;10084:25;;10125:16;;;10122:106;;;10182:1;10211:2;10207;10200:14;10122:106;10264:61;10321:3;10316:2;10305:8;10301:2;10297:17;10293:26;10264:61;:::i;:::-;10248:14;;;10241:85;10339:18;;-1:-1:-1;;;10377:12:43;;;;9506;;9473:926;;10433:938;10502:5;10550:4;10538:9;10533:3;10529:19;10525:30;10522:50;;;10568:1;10565;10558:12;10522:50;10590:22;;:::i;:::-;10581:31;;10635:29;10654:9;10635:29;:::i;:::-;10628:5;10621:44;10725:2;10714:9;10710:18;10697:32;10692:2;10685:5;10681:14;10674:56;10781:2;10770:9;10766:18;10753:32;-1:-1:-1;;;;;10845:2:43;10837:6;10834:14;10831:34;;;10861:1;10858;10851:12;10831:34;10897:70;10963:3;10954:6;10943:9;10939:22;10897:70;:::i;:::-;10892:2;10885:5;10881:14;10874:94;11021:2;11010:9;11006:18;10993:32;10977:48;;11050:2;11040:8;11037:16;11034:36;;;11066:1;11063;11056:12;11034:36;11102:72;11170:3;11159:8;11148:9;11144:24;11102:72;:::i;:::-;11097:2;11090:5;11086:14;11079:96;11228:3;11217:9;11213:19;11200:33;11184:49;;11258:2;11248:8;11245:16;11242:36;;;11274:1;11271;11264:12;11242:36;;11311:53;11360:3;11349:8;11338:9;11334:24;11311:53;:::i;:::-;11305:3;11298:5;11294:15;11287:78;;10433:938;;;;:::o;11376:1060::-;11592:6;11600;11608;11616;11624;11632;11685:3;11673:9;11664:7;11660:23;11656:33;11653:53;;;11702:1;11699;11692:12;11653:53;11742:9;11729:23;-1:-1:-1;;;;;11812:2:43;11804:6;11801:14;11798:34;;;11828:1;11825;11818:12;11798:34;11851:55;11898:7;11889:6;11878:9;11874:22;11851:55;:::i;:::-;11841:65;;11956:2;11945:9;11941:18;11928:32;11915:45;;11969;12008:5;11969:45;:::i;:::-;12033:5;12023:15;;12057:52;12101:7;12096:2;12085:9;12081:18;12057:52;:::i;:::-;12047:62;;12128:53;12173:7;12167:3;12156:9;12152:19;12128:53;:::i;:::-;12118:63;;12228:3;12217:9;12213:19;12200:33;12190:43;;12286:3;12275:9;12271:19;12258:33;12242:49;;12316:2;12306:8;12303:16;12300:36;;;12332:1;12329;12322:12;12300:36;;12355:75;12422:7;12411:8;12400:9;12396:24;12355:75;:::i;:::-;12345:85;;;11376:1060;;;;;;;;:::o;12633:998::-;12848:6;12856;12864;12872;12880;12888;12941:3;12929:9;12920:7;12916:23;12912:33;12909:53;;;12958:1;12955;12948:12;12909:53;12997:9;12984:23;13016:45;13055:5;13016:45;:::i;:::-;13080:5;-1:-1:-1;13137:2:43;13122:18;;13109:32;13150:47;13109:32;13150:47;:::i;:::-;13216:7;-1:-1:-1;13242:52:43;13286:7;13281:2;13266:18;;13242:52;:::i;:::-;13232:62;;13313:53;13358:7;13352:3;13341:9;13337:19;13313:53;:::i;:::-;13303:63;;13413:3;13402:9;13398:19;13385:33;13375:43;;13469:3;13458:9;13454:19;13441:33;-1:-1:-1;;;;;13489:6:43;13486:30;13483:50;;;13529:1;13526;13519:12;13483:50;13552:73;13617:7;13608:6;13597:9;13593:22;13552:73;:::i;13636:1981::-;13867:6;13875;13883;13891;13899;13907;13915;13923;13976:3;13964:9;13955:7;13951:23;13947:33;13944:53;;;13993:1;13990;13983:12;13944:53;14029:9;14016:23;14006:33;;14089:2;14078:9;14074:18;14061:32;14102:45;14141:5;14102:45;:::i;:::-;14166:5;-1:-1:-1;14190:52:43;14234:7;14229:2;14214:18;;14190:52;:::i;:::-;14180:62;;14261:53;14306:7;14300:3;14289:9;14285:19;14261:53;:::i;:::-;14251:63;;14361:3;14350:9;14346:19;14333:33;14323:43;;14413:3;14402:9;14398:19;14385:33;14375:43;;14470:3;14459:9;14455:19;14442:33;14484:47;14523:7;14484:47;:::i;:::-;14550:7;-1:-1:-1;14608:3:43;14593:19;;14580:33;-1:-1:-1;;;;;14662:14:43;;;14659:34;;;14689:1;14686;14679:12;14659:34;14712:22;;;;14768:3;14750:16;;;14746:26;14743:46;;;14785:1;14782;14775:12;14743:46;14813:22;;:::i;:::-;14860;14879:2;14860:22;:::i;:::-;14851:7;14844:39;14938:2;14934;14930:11;14917:25;14912:2;14903:7;14899:16;14892:51;14998:2;14994;14990:11;14977:25;14972:2;14963:7;14959:16;14952:51;15049:2;15045;15041:11;15028:25;15078:2;15068:8;15065:16;15062:36;;;15094:1;15091;15084:12;15062:36;15132:69;15193:7;15182:8;15178:2;15174:17;15132:69;:::i;:::-;15127:2;15118:7;15114:16;15107:95;;15248:3;15244:2;15240:12;15227:26;15278:2;15268:8;15265:16;15262:36;;;15294:1;15291;15284:12;15262:36;15333:69;15394:7;15383:8;15379:2;15375:17;15333:69;:::i;:::-;15327:3;15318:7;15314:17;15307:96;;15449:3;15445:2;15441:12;15428:26;15479:2;15469:8;15466:16;15463:36;;;15495:1;15492;15485:12;15463:36;15534:50;15576:7;15565:8;15561:2;15557:17;15534:50;:::i;:::-;15528:3;15519:7;15515:17;15508:77;;15604:7;15594:17;;;;;13636:1981;;;;;;;;;;;:::o;15622:1358::-;15789:6;15797;15805;15813;15821;15829;15882:3;15870:9;15861:7;15857:23;15853:33;15850:53;;;15899:1;15896;15889:12;15850:53;15922:43;15957:7;15946:9;15922:43;:::i;:::-;15912:53;;16015:3;16004:9;16000:19;15987:33;16029:45;16068:5;16029:45;:::i;:::-;16093:5;-1:-1:-1;16150:3:43;16135:19;;16122:33;16164:47;16122:33;16164:47;:::i;:::-;16230:7;-1:-1:-1;16284:3:43;16269:19;;16256:33;;-1:-1:-1;16336:3:43;16321:19;;16308:33;;-1:-1:-1;16392:3:43;16377:19;;16364:33;-1:-1:-1;;;;;16446:14:43;;;16443:34;;;16473:1;16470;16463:12;16443:34;16496:22;;;;16552:4;16534:16;;;16530:27;16527:47;;;16570:1;16567;16560:12;16527:47;16598:22;;:::i;:::-;16657:2;16644:16;16669:47;16708:7;16669:47;:::i;:::-;16725:24;;16795:2;16787:11;;16774:25;16811:16;;;16808:36;;;16840:1;16837;16830:12;16808:36;16878:69;16939:7;16928:8;16924:2;16920:17;16878:69;:::i;:::-;16873:2;16864:7;16860:16;16853:95;;16967:7;16957:17;;;;;15622:1358;;;;;;;;:::o;17264:250::-;17349:1;17359:113;17373:6;17370:1;17367:13;17359:113;;;17449:11;;;17443:18;17430:11;;;17423:39;17395:2;17388:10;17359:113;;;-1:-1:-1;;17506:1:43;17488:16;;17481:27;17264:250::o;17519:384::-;-1:-1:-1;;;;;;17704:33:43;;17692:46;;17761:13;;17674:3;;17783:74;17761:13;17846:1;17837:11;;17830:4;17818:17;;17783:74;:::i;:::-;17877:16;;;;17895:1;17873:24;;17519:384;-1:-1:-1;;;17519:384:43:o;17908:287::-;18037:3;18075:6;18069:13;18091:66;18150:6;18145:3;18138:4;18130:6;18126:17;18091:66;:::i;:::-;18173:16;;;;;17908:287;-1:-1:-1;;17908:287:43:o;18200:277::-;18267:6;18320:2;18308:9;18299:7;18295:23;18291:32;18288:52;;;18336:1;18333;18326:12;18288:52;18368:9;18362:16;18421:5;18414:13;18407:21;18400:5;18397:32;18387:60;;18443:1;18440;18433:12;18826:648;18906:6;18959:2;18947:9;18938:7;18934:23;18930:32;18927:52;;;18975:1;18972;18965:12;18927:52;19008:9;19002:16;-1:-1:-1;;;;;19033:6:43;19030:30;19027:50;;;19073:1;19070;19063:12;19027:50;19096:22;;19149:4;19141:13;;19137:27;-1:-1:-1;19127:55:43;;19178:1;19175;19168:12;19127:55;19207:2;19201:9;19232:48;19248:31;19276:2;19248:31;:::i;19232:48::-;19303:2;19296:5;19289:17;19343:7;19338:2;19333;19329;19325:11;19321:20;19318:33;19315:53;;;19364:1;19361;19354:12;19315:53;19377:67;19441:2;19436;19429:5;19425:14;19420:2;19416;19412:11;19377:67;:::i;:::-;19463:5;18826:648;-1:-1:-1;;;;;18826:648:43:o;19479:271::-;19521:3;19559:5;19553:12;19586:6;19581:3;19574:19;19602:76;19671:6;19664:4;19659:3;19655:14;19648:4;19641:5;19637:16;19602:76;:::i;:::-;19732:2;19711:15;-1:-1:-1;;19707:29:43;19698:39;;;;19739:4;19694:50;;19479:271;-1:-1:-1;;19479:271:43:o;19755:291::-;19932:2;19921:9;19914:21;19895:4;19952:45;19993:2;19982:9;19978:18;19970:6;19952:45;:::i;:::-;19944:53;;20033:6;20028:2;20017:9;20013:18;20006:34;19755:291;;;;;:::o;20051:184::-;20121:6;20174:2;20162:9;20153:7;20149:23;20145:32;20142:52;;;20190:1;20187;20180:12;20142:52;-1:-1:-1;20213:16:43;;20051:184;-1:-1:-1;20051:184:43:o;20636:315::-;-1:-1:-1;;;;;20811:32:43;;20793:51;;20880:2;20875;20860:18;;20853:30;;;-1:-1:-1;;20900:45:43;;20926:18;;20918:6;20900:45;:::i;20956:127::-;21017:10;21012:3;21008:20;21005:1;20998:31;21048:4;21045:1;21038:15;21072:4;21069:1;21062:15;21088:128;21155:9;;;21176:11;;;21173:37;;;21190:18;;:::i;21601:127::-;21662:10;21657:3;21653:20;21650:1;21643:31;21693:4;21690:1;21683:15;21717:4;21714:1;21707:15;21733:175;21770:3;21814:4;21807:5;21803:16;21843:4;21834:7;21831:17;21828:43;;21851:18;;:::i;:::-;21900:1;21887:15;;21733:175;-1:-1:-1;;21733:175:43:o;22545:435::-;22598:3;22636:5;22630:12;22663:6;22658:3;22651:19;22689:4;22718:2;22713:3;22709:12;22702:19;;22755:2;22748:5;22744:14;22776:1;22786:169;22800:6;22797:1;22794:13;22786:169;;;22861:13;;22849:26;;22895:12;;;;22930:15;;;;22822:1;22815:9;22786:169;;;-1:-1:-1;22971:3:43;;22545:435;-1:-1:-1;;;;;22545:435:43:o;22985:889::-;-1:-1:-1;;;;;23436:15:43;;;23418:34;;23488:15;;23483:2;23468:18;;23461:43;23398:3;23535:2;23520:18;;23513:31;;;23361:4;;23567:57;;23604:19;;23596:6;23567:57;:::i;:::-;23672:9;23664:6;23660:22;23655:2;23644:9;23640:18;23633:50;23706:44;23743:6;23735;23706:44;:::i;:::-;23787:22;;;23781:3;23766:19;;;23759:51;;;;-1:-1:-1;;23834:1:43;23819:17;;23865:2;23853:15;;22985:889;-1:-1:-1;;;;22985:889:43:o;23879:265::-;23949:6;24002:2;23990:9;23981:7;23977:23;23973:32;23970:52;;;24018:1;24015;24008:12;23970:52;24050:9;24044:16;24069:45;24108:5;24069:45;:::i;24149:135::-;24188:3;24209:17;;;24206:43;;24229:18;;:::i;:::-;-1:-1:-1;24276:1:43;24265:13;;24149:135::o;24568:125::-;24633:9;;;24654:10;;;24651:36;;;24667:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "USDC()": "89a30271",
    "USDC_Token()": "cc83c9ec",
    "WETH()": "ad5c4648",
    "WETH_Token()": "56aa0ea6",
    "bindLimitSwapFills(bytes32[])": "61ebbca8",
    "createSeaportListing(bytes32)": "6fc4fde7",
    "defaultBlock()": "f9e3e2fc",
    "failed()": "ba414fa6",
    "invertLimitSwapFills(bytes32,bytes32)": "193a0f62",
    "limitSwap(bytes32,address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,uint256,address,(address,uint256,uint256,(uint256,bytes32[])[],(uint256,bytes32[])[],(address,bytes)))": "f0f6ee2a",
    "mainnetFork()": "40362fea",
    "marketSwapExactInput((address,bytes),address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,(address,uint256,(uint256,bytes32[])[],(uint256,bytes32[])[],(address,bytes)))": "a06669bc",
    "marketSwapExactOutput(address,address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,(address,uint256,(uint256,bytes32[])[],(uint256,bytes32[])[],(address,bytes)))": "be330dbd",
    "maxRuns(bytes32,uint256)": "b4caf1cb",
    "requireBitNotUsed(uint256,uint256)": "181233ee",
    "requireBitUsed(uint256,uint256)": "47244b0d",
    "requireBlockMined(uint256)": "02908ed3",
    "requireBlockNotMined(uint256)": "502929ff",
    "requireBlocksElapsed(bytes32,uint256)": "65c8efda",
    "requireLimitSwapFilled(bytes32)": "4ef935ca",
    "requireLimitSwapOpen(bytes32)": "0f984250",
    "requirePriceDecrease(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,uint256,uint256)": "333aa2fc",
    "requirePriceIncrease(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,uint256,uint256)": "db5b273a",
    "requirePriceLowerBound(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256)": "8129ef95",
    "requirePriceUpperBound(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256)": "1ccf3c0c",
    "requireStake((bytes))": "48213e22",
    "setUp()": "0a9254e4",
    "setupFork()": "d46b8d2c",
    "setupFork(uint256)": "f0c27e3d",
    "testMarketSwapExactInput()": "6c73d637",
    "transfer((uint8,address,bytes32,uint256),address,address,uint256,uint256,(address,(uint256,bytes32[])[]))": "f7440e16",
    "useBit(uint256,uint256)": "a9aa5f7e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BlockMined\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BlockNotMined\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleProofAndAmountMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleProofsRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftIdAlreadyOwned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftIdNotReceived\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"NotEnoughTokenReceived\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedTokenStandard\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_Token\",\"outputs\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH_Token\",\"outputs\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"swapsIds\",\"type\":\"bytes32[]\"}],\"name\":\"bindLimitSwapFills\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"createSeaportListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"swap0\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"swap1\",\"type\":\"bytes32\"}],\"name\":\"invertLimitSwapFills\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenIn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenOut\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenInAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"basePrice\",\"type\":\"uint256\"},{\"internalType\":\"contract IPriceCurve\",\"name\":\"priceCurve\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenInAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenInId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenInIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenOutIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.Call\",\"name\":\"fillCall\",\"type\":\"tuple\"}],\"internalType\":\"struct Primatives01.UnsignedLimitSwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"limitSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainnetFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.Call\",\"name\":\"oraclePriceCall\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenIn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenOut\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenInAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenInId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenInIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenOutIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.Call\",\"name\":\"fillCall\",\"type\":\"tuple\"}],\"internalType\":\"struct Primatives01.UnsignedMarketSwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"marketSwapExactInput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenIn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenOut\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenOutAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenInId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenInIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenOutIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.Call\",\"name\":\"fillCall\",\"type\":\"tuple\"}],\"internalType\":\"struct Primatives01.UnsignedMarketSwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"marketSwapExactOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfRuns\",\"type\":\"uint256\"}],\"name\":\"maxRuns\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bit\",\"type\":\"uint256\"}],\"name\":\"requireBitNotUsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bit\",\"type\":\"uint256\"}],\"name\":\"requireBitUsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"requireBlockMined\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"requireBlockNotMined\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfBlocksElapsed\",\"type\":\"uint256\"}],\"name\":\"requireBlocksElapsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"requireLimitSwapFilled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"requireLimitSwapOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceDeltaOracle\",\"name\":\"priceDeltaOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceDecrease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceDeltaOracle\",\"name\":\"priceDeltaOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceIncrease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceLowerBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceUpperBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"stakerSignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.UnsignedStakeProofData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"requireStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setupFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"setupFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMarketSwapExactInput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"idMerkleProofs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Primatives01.UnsignedTransferData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bit\",\"type\":\"uint256\"}],\"name\":\"useBit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Primatives01_marketSwapExactInput.sol\":\"Primatives01_marketSwapExactInput\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":brink-core/=lib/brink-core/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":uniswap-v3-core/=lib/v3-core/contracts/\",\":v3-core/=lib/v3-core/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd\",\"dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec\",\"dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0\",\"dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc\",\"dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3\",\"dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc\",\"dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51\",\"dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/v3-core/contracts/Interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"lib/v3-core/contracts/Interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/Interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/Interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/Interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/Interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/Interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"src/Interfaces/ICallExecutor.sol\":{\"keccak256\":\"0x8330730889b5974571981232458f574522298c8fc1a9490b9a9d3ea88b1b72ad\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7579e934b5e7fb43c0e5af573fc94fa0d91b82ee68d60619ad7bf3a6d46fbf85\",\"dweb:/ipfs/QmUhyDX2xUSfwa8vkj6nJLpNYpqtwcRYe9cGGkHj3Sup7c\"]},\"src/Interfaces/IPriceCurve.sol\":{\"keccak256\":\"0x9063ca09de1597f770c9ebb6893984f7d51c15e5280c9910787c20c62b9d79d5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fdcc118d4326244a4c53c983db860c3a28b6485b83787f879b76d358c99a47e5\",\"dweb:/ipfs/QmXeY2bY1FL8AdwXR8kr5TRqjrBHiefB5e2bomtYvk5PME\"]},\"src/Interfaces/IPriceDeltaOracle.sol\":{\"keccak256\":\"0x845b060718c518189ec326b5eedbf2d4376ac983b274ae7b9161526141fcb7ef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://60578d5a214e46666a50d49837a0a249d88daf7443ea637e75c7ffaacc6a02d5\",\"dweb:/ipfs/QmVTFR1Hv7fY416qzVKaFYPvXD8ibRddhELk4rUt5Bh47d\"]},\"src/Interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x7d20e9d9824ab1622170b3839d3080c19119ed80884f74b78fc8ee27df54879f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://995379b96ffc1e22521918f7b3319f6ef02be468000d50075b80ced7ea5ee197\",\"dweb:/ipfs/QmYX1VFfXe6Tdv6d4svE5X7b5f4BShmwXBYHXtM9aWhrGo\"]},\"src/Primatives/Primatives01.sol\":{\"keccak256\":\"0x6e67e143868aa1ed3c9450a5874d8ed5e285d94e3d37aca036775cec52feaeb3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ddbe4619a745ca6b0f1280b5cf27fe0bad617c5f1b35f10b8b2e7d5e9db94cf5\",\"dweb:/ipfs/QmZ9J3fKLaKW141tRVTghHaQSFkLEzNPGzDVGJDdoKGDPA\"]},\"src/TokenHelper/TokenHelper.sol\":{\"keccak256\":\"0x71de5b580ade414ab63258413f82c541a2560ad37398f281853a8e73c60a7ff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://220df8edaec7f9a1c17e5f7f862bc7a813d3cf9facf4d51905a2cb7fcf9894e4\",\"dweb:/ipfs/QmXUcmw75mNB2GnYpRmZZgX3s77eTaK3ivCrmfkw4M95ze\"]},\"test/Helper.sol\":{\"keccak256\":\"0xc9adeb8c906e68c689f97ee5e9dc546acaf5493a5f84ba7694bdf76f32d254a0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://36b8ffe37c64626f2d9dc3eaee54da23db360bdc9f87bfbadeb46c95a01bcf8b\",\"dweb:/ipfs/QmRwq9oU4JES5ek32YAN14AdLyqHEZPGdB1sP3PdpNWFYQ\"]},\"test/Primatives01_marketSwapExactInput.sol\":{\"keccak256\":\"0xfd3bdde19f688c545f5dc21ad5738231c8d92c561461ff36e3f7550632c2cbf1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://91603ebee7522938588e1b555024bcce3cfbcf3ca6efd5529ad6606f5217a3f8\",\"dweb:/ipfs/Qmdu2njX8ZUT6afPJjZ4jwhG4M13v3h3sop58qusnsDZYP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "BlockMined"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BlockNotMined"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IdNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MerkleProofAndAmountMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MerkleProofsRequired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NftIdAlreadyOwned"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NftIdNotReceived"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountReceived",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotEnoughTokenReceived"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedTokenStandard"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USDC",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USDC_Token",
          "outputs": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH_Token",
          "outputs": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "swapsIds",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bindLimitSwapFills"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createSeaportListing"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "swap0",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "swap1",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "invertLimitSwapFills"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenIn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenOut",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "tokenInAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "basePrice",
              "type": "uint256"
            },
            {
              "internalType": "contract IPriceCurve",
              "name": "priceCurve",
              "type": "address"
            },
            {
              "internalType": "struct Primatives01.UnsignedLimitSwapData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenInIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenOutIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct Primatives01.Call",
                  "name": "fillCall",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "limitSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mainnetFork",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Primatives01.Call",
              "name": "oraclePriceCall",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenIn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenOut",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "tokenInAmount",
              "type": "uint256"
            },
            {
              "internalType": "struct Primatives01.UnsignedMarketSwapData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenInIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenOutIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct Primatives01.Call",
                  "name": "fillCall",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "marketSwapExactInput"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenIn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenOut",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "tokenOutAmount",
              "type": "uint256"
            },
            {
              "internalType": "struct Primatives01.UnsignedMarketSwapData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenInIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenOutIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct Primatives01.Call",
                  "name": "fillCall",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "marketSwapExactOutput"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "numberOfRuns",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "maxRuns"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bitmapIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireBitNotUsed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bitmapIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireBitUsed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requireBlockMined"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requireBlockNotMined"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "numberOfBlocksElapsed",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireBlocksElapsed"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireLimitSwapFilled"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireLimitSwapOpen"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceDeltaOracle",
              "name": "priceDeltaOracle",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceDecrease"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceDeltaOracle",
              "name": "priceDeltaOracle",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceIncrease"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceLowerBound"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceUpperBound"
        },
        {
          "inputs": [
            {
              "internalType": "struct Primatives01.UnsignedStakeProofData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "stakerSignature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireStake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setupFork"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setupFork"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMarketSwapExactInput"
        },
        {
          "inputs": [
            {
              "internalType": "struct Token",
              "name": "token",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "struct Primatives01.UnsignedTransferData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "idMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bitmapIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "useBit"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":brink-core/=lib/brink-core/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":uniswap-v3-core/=lib/v3-core/contracts/",
        ":v3-core/=lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Primatives01_marketSwapExactInput.sol": "Primatives01_marketSwapExactInput"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213",
        "urls": [
          "bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd",
          "dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524",
        "urls": [
          "bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec",
          "dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606",
        "urls": [
          "bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0",
          "dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269",
        "urls": [
          "bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc",
          "dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d",
        "urls": [
          "bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3",
          "dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf",
        "urls": [
          "bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc",
          "dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521",
        "urls": [
          "bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51",
          "dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/Interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
        "urls": [
          "bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
          "dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/Interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/Interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/Interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/Interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/Interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/Interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/Interfaces/ICallExecutor.sol": {
        "keccak256": "0x8330730889b5974571981232458f574522298c8fc1a9490b9a9d3ea88b1b72ad",
        "urls": [
          "bzz-raw://7579e934b5e7fb43c0e5af573fc94fa0d91b82ee68d60619ad7bf3a6d46fbf85",
          "dweb:/ipfs/QmUhyDX2xUSfwa8vkj6nJLpNYpqtwcRYe9cGGkHj3Sup7c"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Interfaces/IPriceCurve.sol": {
        "keccak256": "0x9063ca09de1597f770c9ebb6893984f7d51c15e5280c9910787c20c62b9d79d5",
        "urls": [
          "bzz-raw://fdcc118d4326244a4c53c983db860c3a28b6485b83787f879b76d358c99a47e5",
          "dweb:/ipfs/QmXeY2bY1FL8AdwXR8kr5TRqjrBHiefB5e2bomtYvk5PME"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Interfaces/IPriceDeltaOracle.sol": {
        "keccak256": "0x845b060718c518189ec326b5eedbf2d4376ac983b274ae7b9161526141fcb7ef",
        "urls": [
          "bzz-raw://60578d5a214e46666a50d49837a0a249d88daf7443ea637e75c7ffaacc6a02d5",
          "dweb:/ipfs/QmVTFR1Hv7fY416qzVKaFYPvXD8ibRddhELk4rUt5Bh47d"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Interfaces/IPriceOracle.sol": {
        "keccak256": "0x7d20e9d9824ab1622170b3839d3080c19119ed80884f74b78fc8ee27df54879f",
        "urls": [
          "bzz-raw://995379b96ffc1e22521918f7b3319f6ef02be468000d50075b80ced7ea5ee197",
          "dweb:/ipfs/QmYX1VFfXe6Tdv6d4svE5X7b5f4BShmwXBYHXtM9aWhrGo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Primatives/Primatives01.sol": {
        "keccak256": "0x6e67e143868aa1ed3c9450a5874d8ed5e285d94e3d37aca036775cec52feaeb3",
        "urls": [
          "bzz-raw://ddbe4619a745ca6b0f1280b5cf27fe0bad617c5f1b35f10b8b2e7d5e9db94cf5",
          "dweb:/ipfs/QmZ9J3fKLaKW141tRVTghHaQSFkLEzNPGzDVGJDdoKGDPA"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/TokenHelper/TokenHelper.sol": {
        "keccak256": "0x71de5b580ade414ab63258413f82c541a2560ad37398f281853a8e73c60a7ff6",
        "urls": [
          "bzz-raw://220df8edaec7f9a1c17e5f7f862bc7a813d3cf9facf4d51905a2cb7fcf9894e4",
          "dweb:/ipfs/QmXUcmw75mNB2GnYpRmZZgX3s77eTaK3ivCrmfkw4M95ze"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/Helper.sol": {
        "keccak256": "0xc9adeb8c906e68c689f97ee5e9dc546acaf5493a5f84ba7694bdf76f32d254a0",
        "urls": [
          "bzz-raw://36b8ffe37c64626f2d9dc3eaee54da23db360bdc9f87bfbadeb46c95a01bcf8b",
          "dweb:/ipfs/QmRwq9oU4JES5ek32YAN14AdLyqHEZPGdB1sP3PdpNWFYQ"
        ],
        "license": "UNLICENSED"
      },
      "test/Primatives01_marketSwapExactInput.sol": {
        "keccak256": "0xfd3bdde19f688c545f5dc21ad5738231c8d92c561461ff36e3f7550632c2cbf1",
        "urls": [
          "bzz-raw://91603ebee7522938588e1b555024bcce3cfbcf3ca6efd5529ad6606f5217a3f8",
          "dweb:/ipfs/Qmdu2njX8ZUT6afPJjZ4jwhG4M13v3h3sop58qusnsDZYP"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Primatives01_marketSwapExactInput.sol",
    "id": 27686,
    "exportedSymbols": {
      "BlockMined": [
        26351
      ],
      "BlockNotMined": [
        26353
      ],
      "DSTest": [
        1786
      ],
      "ERC1155IdNotProvided": [
        27089
      ],
      "Helper": [
        27613
      ],
      "ICallExecutor": [
        26255
      ],
      "IERC1155": [
        25597
      ],
      "IERC165": [
        25803
      ],
      "IERC20": [
        25675
      ],
      "IERC721": [
        25791
      ],
      "IPriceCurve": [
        26271
      ],
      "IPriceDeltaOracle": [
        26279
      ],
      "IPriceOracle": [
        26291
      ],
      "IUniswapV3Pool": [
        25825
      ],
      "IUniswapV3PoolActions": [
        28188
      ],
      "IUniswapV3PoolDerivedState": [
        28219
      ],
      "IUniswapV3PoolEvents": [
        28338
      ],
      "IUniswapV3PoolImmutables": [
        28378
      ],
      "IUniswapV3PoolOwnerActions": [
        28404
      ],
      "IUniswapV3PoolState": [
        28512
      ],
      "IdMerkleProof": [
        27081
      ],
      "IdNotAllowed": [
        27085
      ],
      "MerkleProofAndAmountMismatch": [
        26349
      ],
      "MerkleProofsRequired": [
        27087
      ],
      "NftIdAlreadyOwned": [
        26341
      ],
      "NftIdNotReceived": [
        26343
      ],
      "NotEnoughTokenReceived": [
        26347
      ],
      "OwnerHasNft": [
        27091
      ],
      "Primatives01": [
        27055
      ],
      "Primatives01_marketSwapExactInput": [
        27685
      ],
      "StdAssertions": [
        2671
      ],
      "StdChains": [
        3207
      ],
      "StdCheats": [
        5144
      ],
      "StdStorage": [
        6051
      ],
      "StdUtils": [
        8116
      ],
      "Test": [
        8158
      ],
      "TestBase": [
        1843
      ],
      "Token": [
        27075
      ],
      "TokenHelper": [
        27537
      ],
      "TokenStandard": [
        27065
      ],
      "UnsupportedTokenStandard": [
        27083
      ],
      "Vm": [
        9315
      ],
      "console": [
        17379
      ],
      "console2": [
        25475
      ],
      "stdError": [
        5210
      ],
      "stdJson": [
        5877
      ],
      "stdMath": [
        6019
      ],
      "stdStorage": [
        7485
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:632:39",
    "nodes": [
      {
        "id": 27615,
        "nodeType": "PragmaDirective",
        "src": "39:24:39",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 27616,
        "nodeType": "ImportDirective",
        "src": "65:28:39",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27686,
        "sourceUnit": 8159,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27617,
        "nodeType": "ImportDirective",
        "src": "94:44:39",
        "nodes": [],
        "absolutePath": "src/Primatives/Primatives01.sol",
        "file": "../src/Primatives/Primatives01.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27686,
        "sourceUnit": 27056,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27618,
        "nodeType": "ImportDirective",
        "src": "139:22:39",
        "nodes": [],
        "absolutePath": "test/Helper.sol",
        "file": "./Helper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27686,
        "sourceUnit": 27614,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27685,
        "nodeType": "ContractDefinition",
        "src": "163:507:39",
        "nodes": [
          {
            "id": 27631,
            "nodeType": "FunctionDefinition",
            "src": "242:47:39",
            "nodes": [],
            "body": {
              "id": 27630,
              "nodeType": "Block",
              "src": "267:22:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27627,
                      "name": "setupFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        27589,
                        27612
                      ],
                      "referencedDeclaration": 27589,
                      "src": "273:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 27628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "273:11:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27629,
                  "nodeType": "ExpressionStatement",
                  "src": "273:11:39"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "251:5:39",
            "parameters": {
              "id": 27625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "257:2:39"
            },
            "returnParameters": {
              "id": 27626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "267:0:39"
            },
            "scope": 27685,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27684,
            "nodeType": "FunctionDefinition",
            "src": "293:374:39",
            "nodes": [],
            "body": {
              "id": 27683,
              "nodeType": "Block",
              "src": "337:330:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 27638,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "384:1:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 27637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "376:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 27636,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "376:7:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 27639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "376:10:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 27642,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "398:1:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 27641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "388:9:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 27640,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "392:5:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 27643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "388:12:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 27635,
                          "name": "Call",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26410,
                          "src": "371:4:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Call_$26410_storage_ptr_$",
                            "typeString": "type(struct Primatives01.Call storage pointer)"
                          }
                        },
                        "id": 27644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "371:30:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Call_$26410_memory_ptr",
                          "typeString": "struct Primatives01.Call memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 27647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "417:1:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 27646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "409:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27645,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "409:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "409:10:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 27649,
                        "name": "WETH_Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27565,
                        "src": "427:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$27075_storage",
                          "typeString": "struct Token storage ref"
                        }
                      },
                      {
                        "id": 27650,
                        "name": "USDC_Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27575,
                        "src": "445:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$27075_storage",
                          "typeString": "struct Token storage ref"
                        }
                      },
                      {
                        "hexValue": "315f333030303030303030303030303030303030",
                        "id": 27651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "463:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1300000000000000000_by_1",
                          "typeString": "int_const 1300000000000000000"
                        },
                        "value": "1_300000000000000000"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 27655,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "531:1:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 27654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "523:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 27653,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "523:7:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 27656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "523:10:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 27657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "543:1:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 27662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "574:1:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 27661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "554:19:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_IdMerkleProof_$27081_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (struct IdMerkleProof memory[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 27659,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 27658,
                                    "name": "IdMerkleProof",
                                    "nameLocations": [
                                      "558:13:39"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 27081,
                                    "src": "558:13:39"
                                  },
                                  "referencedDeclaration": 27081,
                                  "src": "558:13:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IdMerkleProof_$27081_storage_ptr",
                                    "typeString": "struct IdMerkleProof"
                                  }
                                },
                                "id": 27660,
                                "nodeType": "ArrayTypeName",
                                "src": "558:15:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_IdMerkleProof_$27081_storage_$dyn_storage_ptr",
                                  "typeString": "struct IdMerkleProof[]"
                                }
                              }
                            },
                            "id": 27663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "554:22:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_IdMerkleProof_$27081_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IdMerkleProof memory[] memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 27668,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "606:1:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 27667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "586:19:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_IdMerkleProof_$27081_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (struct IdMerkleProof memory[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 27665,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 27664,
                                    "name": "IdMerkleProof",
                                    "nameLocations": [
                                      "590:13:39"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 27081,
                                    "src": "590:13:39"
                                  },
                                  "referencedDeclaration": 27081,
                                  "src": "590:13:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IdMerkleProof_$27081_storage_ptr",
                                    "typeString": "struct IdMerkleProof"
                                  }
                                },
                                "id": 27666,
                                "nodeType": "ArrayTypeName",
                                "src": "590:15:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_IdMerkleProof_$27081_storage_$dyn_storage_ptr",
                                  "typeString": "struct IdMerkleProof[]"
                                }
                              }
                            },
                            "id": 27669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "586:22:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_IdMerkleProof_$27081_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IdMerkleProof memory[] memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 27673,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "631:1:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 27672,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "623:7:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 27671,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "623:7:39",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 27674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "623:10:39",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 27677,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "645:1:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 27676,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "635:9:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (bytes memory)"
                                  },
                                  "typeName": {
                                    "id": 27675,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "639:5:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  }
                                },
                                "id": 27678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "635:12:39",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 27670,
                              "name": "Call",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26410,
                              "src": "618:4:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Call_$26410_storage_ptr_$",
                                "typeString": "type(struct Primatives01.Call storage pointer)"
                              }
                            },
                            "id": 27679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "618:30:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Call_$26410_memory_ptr",
                              "typeString": "struct Primatives01.Call memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_IdMerkleProof_$27081_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IdMerkleProof memory[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_IdMerkleProof_$27081_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IdMerkleProof memory[] memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_Call_$26410_memory_ptr",
                              "typeString": "struct Primatives01.Call memory"
                            }
                          ],
                          "id": 27652,
                          "name": "UnsignedMarketSwapData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26384,
                          "src": "491:22:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_UnsignedMarketSwapData_$26384_storage_ptr_$",
                            "typeString": "type(struct Primatives01.UnsignedMarketSwapData storage pointer)"
                          }
                        },
                        "id": 27680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "491:165:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnsignedMarketSwapData_$26384_memory_ptr",
                          "typeString": "struct Primatives01.UnsignedMarketSwapData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Call_$26410_memory_ptr",
                          "typeString": "struct Primatives01.Call memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Token_$27075_storage",
                          "typeString": "struct Token storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_Token_$27075_storage",
                          "typeString": "struct Token storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_1300000000000000000_by_1",
                          "typeString": "int_const 1300000000000000000"
                        },
                        {
                          "typeIdentifier": "t_struct$_UnsignedMarketSwapData_$26384_memory_ptr",
                          "typeString": "struct Primatives01.UnsignedMarketSwapData memory"
                        }
                      ],
                      "id": 27634,
                      "name": "marketSwapExactInput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26636,
                      "src": "343:20:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Call_$26410_memory_ptr_$_t_address_$_t_struct$_Token_$27075_memory_ptr_$_t_struct$_Token_$27075_memory_ptr_$_t_uint256_$_t_struct$_UnsignedMarketSwapData_$26384_memory_ptr_$returns$__$",
                        "typeString": "function (struct Primatives01.Call memory,address,struct Token memory,struct Token memory,uint256,struct Primatives01.UnsignedMarketSwapData memory)"
                      }
                    },
                    "id": 27681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "343:319:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27682,
                  "nodeType": "ExpressionStatement",
                  "src": "343:319:39"
                }
              ]
            },
            "functionSelector": "6c73d637",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMarketSwapExactInput",
            "nameLocation": "302:24:39",
            "parameters": {
              "id": 27632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "327:2:39"
            },
            "returnParameters": {
              "id": 27633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "337:0:39"
            },
            "scope": 27685,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 27619,
              "name": "Primatives01",
              "nameLocations": [
                "209:12:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27055,
              "src": "209:12:39"
            },
            "id": 27620,
            "nodeType": "InheritanceSpecifier",
            "src": "209:12:39"
          },
          {
            "baseName": {
              "id": 27621,
              "name": "Test",
              "nameLocations": [
                "223:4:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8158,
              "src": "223:4:39"
            },
            "id": 27622,
            "nodeType": "InheritanceSpecifier",
            "src": "223:4:39"
          },
          {
            "baseName": {
              "id": 27623,
              "name": "Helper",
              "nameLocations": [
                "229:6:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27613,
              "src": "229:6:39"
            },
            "id": 27624,
            "nodeType": "InheritanceSpecifier",
            "src": "229:6:39"
          }
        ],
        "canonicalName": "Primatives01_marketSwapExactInput",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          27685,
          27613,
          8158,
          1843,
          1840,
          8116,
          5144,
          4755,
          3207,
          2671,
          1786,
          27055,
          27537
        ],
        "name": "Primatives01_marketSwapExactInput",
        "nameLocation": "172:33:39",
        "scope": 27686,
        "usedErrors": [
          26341,
          26343,
          26347,
          26349,
          26351,
          26353,
          27083,
          27085,
          27087
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 39
}