{
  "abi": [
    {
      "inputs": [],
      "name": "BlockMined",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BlockNotMined",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IdNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MerkleProofAndAmountMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MerkleProofsRequired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NftIdAlreadyOwned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NftIdNotReceived",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "NotEnoughTokenReceived",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedTokenStandard",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC_Token",
      "outputs": [
        {
          "internalType": "enum TokenStandard",
          "name": "standard",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "idsMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH_Token",
      "outputs": [
        {
          "internalType": "enum TokenStandard",
          "name": "standard",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "idsMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "swapsIds",
          "type": "bytes32[]"
        }
      ],
      "name": "bindLimitSwapFills",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "createSeaportListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "swap0",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "swap1",
          "type": "bytes32"
        }
      ],
      "name": "invertLimitSwapFills",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenIn",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenOut",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenInAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "basePrice",
          "type": "uint256"
        },
        {
          "internalType": "contract IPriceCurve",
          "name": "priceCurve",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenInAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenInId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenInIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenOutIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Primatives01.Call",
              "name": "fillCall",
              "type": "tuple"
            }
          ],
          "internalType": "struct Primatives01.UnsignedLimitSwapData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "limitSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mainnetFork",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oracleContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "oracleCall",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenIn",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenOut",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenInAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenInId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenInIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenOutIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Primatives01.Call",
              "name": "fillCall",
              "type": "tuple"
            }
          ],
          "internalType": "struct Primatives01.UnsignedMarketSwapData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "marketSwapExactInput",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenIn",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenOut",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenOutAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenInId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenInIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "tokenOutIdMerkleProofs",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Primatives01.Call",
              "name": "fillCall",
              "type": "tuple"
            }
          ],
          "internalType": "struct Primatives01.UnsignedMarketSwapData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "marketSwapExactOutput",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "numberOfRuns",
          "type": "uint256"
        }
      ],
      "name": "maxRuns",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bitmapIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bit",
          "type": "uint256"
        }
      ],
      "name": "requireBitNotUsed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bitmapIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bit",
          "type": "uint256"
        }
      ],
      "name": "requireBitUsed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "requireBlockMined",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "requireBlockNotMined",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "numberOfBlocksElapsed",
          "type": "uint256"
        }
      ],
      "name": "requireBlocksElapsed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "requireLimitSwapFilled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "requireLimitSwapOpen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceDeltaOracle",
          "name": "priceDeltaOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceDecrease",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceDeltaOracle",
          "name": "priceDeltaOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceIncrease",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceLowerBound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenA",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "tokenB",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "requirePriceUpperBound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "stakerSignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Primatives01.UnsignedStakeProofData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "requireStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupFork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "setupFork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMarketSwapExactInput",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct Token",
          "name": "token",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IdMerkleProof[]",
              "name": "idMerkleProofs",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Primatives01.UnsignedTransferData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bitmapIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bit",
          "type": "uint256"
        }
      ],
      "name": "useBit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6000805460ff1916600117815562fb8aed601355601580546001600160a01b031990811673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc29081179092556016805490911673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48908117909155608083905260a09190915260c082905260e0829052601780546001600160a81b031990811674c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200179091556018839055601983905561018060405261010083905261012091909152610140829052610160829052601a805490911674a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800179055601b819055601c553480156100fc57600080fd5b506121c78061010c6000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80636c73d6371161011a578063be330dbd116100ad578063f0c27e3d1161007c578063f0c27e3d1461039b578063f0f6ee2a146103ae578063f7440e16146103c1578063f9e3e2fc146103d4578063fa7626d4146103dd57600080fd5b8063be330dbd1461035b578063cc83c9ec1461036e578063d46b8d2c14610393578063db5b273a1461025457600080fd5b8063a9aa5f7e116100e9578063a9aa5f7e1461022e578063ad5c464814610330578063b4caf1cb1461022e578063ba414fa61461034357600080fd5b80636c73d637146102fd5780636fc4fde71461021d5780638129ef951461024057806389a302711461030557600080fd5b806347244b0d1161019257806356aa0ea61161016157806356aa0ea6146102a757806361ebbca8146102dc57806365c8efda1461022e57806367fde9df146102ea57600080fd5b806347244b0d1461022e57806348213e22146102865780634ef935ca1461021d578063502929ff1461029457600080fd5b8063193a0f62116101ce578063193a0f621461022e5780631ccf3c0c14610240578063333aa2fc1461025457806340362fea1461026a57600080fd5b806302908ed3146102005780630a9254e4146102155780630f9842501461021d578063181233ee1461022e575b600080fd5b61021361020e366004611534565b6103ea565b005b61021361040b565b61021361022b366004611534565b50565b61021361023c36600461154d565b5050565b61021361024e3660046116bc565b50505050565b61021361026236600461170d565b505050505050565b61027360145481565b6040519081526020015b60405180910390f35b61021361022b3660046117f1565b6102136102a2366004611534565b610415565b6017546018546019546102cc9260ff8116926101009091046001600160a01b03169184565b60405161027d9493929190611889565b61021361022b366004611959565b6102136102f8366004611b5e565b610435565b61021361047b565b601654610318906001600160a01b031681565b6040516001600160a01b03909116815260200161027d565b601554610318906001600160a01b031681565b61034b610672565b604051901515815260200161027d565b610213610369366004611c19565b61079d565b601a54601b54601c546102cc9260ff8116926101009091046001600160a01b03169184565b6102136107ce565b6102136103a9366004611534565b6107d5565b6102136103bc366004611ca9565b610943565b6102136103cf366004611dee565b610a14565b61027360135481565b60005461034b9060ff1681565b4381111561022b5760405163281f6f0d60e01b815260040160405180910390fd5b6104136107ce565b565b43811161022b5760405163c64743d560e01b815260040160405180910390fd5b6000610442888885610a4c565b90506104716040518060400160405280600b81526020016a52455155495245443a257360a81b81525082610a59565b5050505050505050565b60408051600080825260a08201909252601780546104139392918391602084019190829060ff1660038111156104b3576104b3611873565b60038111156104c4576104c4611873565b8152815461010090046001600160a01b031660208201526001820154604080830191909152600290920154606090910152805160808101909152601a8054829060ff16600381111561051857610518611873565b600381111561052957610529611873565b81526020016000820160019054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820154815260200160028201548152505067120a871cc00200006040518060a0016040528060006001600160a01b031681526020016000815260200160006001600160401b038111156105b4576105b4611584565b6040519080825280602002602001820160405280156105fa57816020015b6040805180820190915260008152606060208201528152602001906001900390816105d25790505b508152602001600060405190808252806020026020018201604052801561064857816020015b6040805180820190915260008152606060208201528152602001906001900390816106205790505b50815260408051808201825260008082528251908152602080820190935282820152910152610435565b60008054610100900460ff16156106925750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107985760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610720917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611ede565b60408051601f198184030181529082905261073a91611f0f565b6000604051808303816000865af19150503d8060008114610777576040519150601f19603f3d011682016040523d82523d6000602084013e61077c565b606091505b50915050808060200190518101906107949190611f2b565b9150505b919050565b60006107c585858885600001518588886020015189604001518a606001518b60800151610a9e565b50505050505050565b6104136013545b60405163f877cb1960e01b815260206004820152600f60248201526e1350525393915517d49410d7d55493608a1b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636ba3ba2b90829063f877cb1990606401600060405180830381865afa15801561084c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108749190810190611f4d565b836040518363ffffffff1660e01b8152600401610892929190611fef565b6020604051808303816000875af11580156108b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d59190612011565b6014819055604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b15801561092857600080fd5b505af115801561093c573d6000803e3d6000fd5b5050505050565b61094d8682610bf6565b60008060208301516040516306e5639760e21b815260048101889052602481018790526044810183905260648101919091529091506000906001600160a01b03851690631b958e5c906084016020604051808303816000875af11580156109b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dc9190612011565b9050610a0888888b866000015187602001518689604001518a606001518b608001518c60a00151610a9e565b50505050505050505050565b610a1f868483610c96565b60006001600160a01b038516610a36578151610a38565b845b90506107c587878387878760200151610cd1565b6303516c4c5b9392505050565b61023c8282604051602401610a6f929190611fef565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526110d2565b610aac8a8989898888610cd1565b6000806000610abc8b8d876110f3565b90935083925090508015610ae35760405163170fb50d60e01b815260040160405180910390fd5b505081516020830151604051630a8c7dad60e21b8152736fe756b9c61cf7e9f11d96740b096e51b64ebf1392632a31f6b492610b219260040161202a565b600060405180830381600087803b158015610b3b57600080fd5b505af1158015610b4f573d6000803e3d6000fd5b50505050600080610b618b8d876110f3565b9150915060008c60600151118015610b795750600181105b80610b92575060408c015115801590610b925750845181105b15610bb05760405163e904550160e01b815260040160405180910390fd5b6000610bbc8484612064565b905088811015610be657604051634c19cdaf60e11b81526004810182905260240160405180910390fd5b5050505050505050505050505050565b6040820151158015610c0b5750606082015115155b8015610c1f57508060400151826060015114155b15610c3d576040516369443e5560e11b815260040160405180910390fd5b60408201511561023c57806060015151600003610c6d576040516308bf63cd60e01b815260040160405180910390fd5b80602001518160600151511461023c5760405163024c78fd60e51b815260040160405180910390fd5b604083015115801590610cae57508181602001515114155b15610ccc5760405163024c78fd60e51b815260040160405180910390fd5b505050565b600086516003811115610ce657610ce6611873565b03610d725760208601516040516323b872dd60e01b81526001600160a01b038781166004830152868116602483015260448201869052909116906323b872dd906064016020604051808303816000875af1158015610d48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6c9190611f2b565b50610262565b600186516003811115610d8757610d87611873565b03610f08576040860151610e0b5760208601516040516323b872dd60e01b81526001600160a01b038781166004830152868116602483015260448201859052909116906323b872dd906064015b600060405180830381600087803b158015610dee57600080fd5b505af1158015610e02573d6000803e3d6000fd5b50505050610262565b60005b81518160ff161015610d6c57610e588760400151838360ff1681518110610e3757610e3761207d565b602002602001015160200151848460ff168151811061024e5761024e61207d565b86602001516001600160a01b03166323b872dd8787858560ff1681518110610e8257610e8261207d565b6020908102919091010151516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015610edd57600080fd5b505af1158015610ef1573d6000803e3d6000fd5b505050508080610f0090612093565b915050610e0e565b600286516003811115610f1d57610f1d611873565b036110b9576040860151610f83576020860151604051637921219560e11b81526001600160a01b0387811660048301528681166024830152604482018590526064820186905260a06084830152600060a48301529091169063f242432a9060c401610dd4565b60608060005b83518160ff16101561104957610fd38960400151858360ff1681518110610fb257610fb261207d565b602002602001015160200151868460ff168151811061024e5761024e61207d565b838160ff1681518110610fe857610fe861207d565b602002602001015160000151838260ff16815181106110095761100961207d565b6020026020010181815250506001828260ff168151811061102c5761102c61207d565b60209081029190910101528061104181612093565b915050610f89565b5087602001516001600160a01b0316632eb2c2d6888885856040518563ffffffff1660e01b815260040161108094939291906120ed565b600060405180830381600087803b15801561109a57600080fd5b505af11580156110ae573d6000803e3d6000fd5b505050505050610262565b604051639a9d6f4f60e01b815260040160405180910390fd5b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008060018451600381111561110b5761110b611873565b0361129857600084606001511180156111a15750602084015160608501516040516331a9108f60e11b815260048101919091526001600160a01b03878116921690636352211e90602401602060405180830381865afa158015611172573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111969190612148565b6001600160a01b0316145b156111ae57506001611298565b6040840151156112985760005b83518160ff16101561129657856001600160a01b031685602001516001600160a01b0316636352211e868460ff16815181106111f9576111f961207d565b6020026020010151600001516040518263ffffffff1660e01b815260040161122391815260200190565b602060405180830381865afa158015611240573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112649190612148565b6001600160a01b031603611284578161127c81612165565b925050611296565b8061128e81612093565b9150506111bb565b505b6112a38486856112da565b91506002845160038111156112ba576112ba611873565b1480156112ca5750604084015115155b156112d25750805b935093915050565b60006003845160038111156112f1576112f1611873565b0361130757506001600160a01b03821631610a52565b60008451600381111561131c5761131c611873565b036113995760208401516040516370a0823160e01b81526001600160a01b038581166004830152909116906370a08231906024015b602060405180830381865afa15801561136e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113929190612011565b9050610a52565b6001845160038111156113ae576113ae611873565b036113e75760208401516040516370a0823160e01b81526001600160a01b038581166004830152909116906370a0823190602401611351565b6002845160038111156113fc576113fc611873565b036110b9576060840151156114495760208401516060850151604051627eeac760e11b81526001600160a01b038681166004830152602482019290925291169062fdd58e90604401611351565b6000805b83518160ff16101561152c57600086602001516001600160a01b031662fdd58e87878560ff16815181106114835761148361207d565b6020908102919091010151516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa1580156114d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fc9190612011565b1161150857600061150b565b60015b6115189060ff168361217e565b91508061152481612093565b91505061144d565b509050610a52565b60006020828403121561154657600080fd5b5035919050565b6000806040838503121561156057600080fd5b50508035926020909101359150565b6001600160a01b038116811461022b57600080fd5b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156115bc576115bc611584565b60405290565b60405160a081016001600160401b03811182821017156115bc576115bc611584565b60405160c081016001600160401b03811182821017156115bc576115bc611584565b604051601f8201601f191681016001600160401b038111828210171561162e5761162e611584565b604052919050565b80356107988161156f565b60006080828403121561165357600080fd5b604051608081018181106001600160401b038211171561167557611675611584565b60405290508082356004811061168a57600080fd5b8152602083013561169a8161156f565b8060208301525060408301356040820152606083013560608201525092915050565b60008060008061014085870312156116d357600080fd5b84356116de8161156f565b93506116ed8660208701611641565b92506116fc8660a08701611641565b939692955092936101200135925050565b600080600080600080610180878903121561172757600080fd5b86356117328161156f565b95506117418860208901611641565b94506117508860a08901611641565b93506101208701359250610140870135915061016087013590509295509295509295565b60006001600160401b0382111561178d5761178d611584565b50601f01601f191660200190565b600082601f8301126117ac57600080fd5b81356117bf6117ba82611774565b611606565b8181528460208386010111156117d457600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561180357600080fd5b81356001600160401b038082111561181a57600080fd5b908301906020828603121561182e57600080fd5b60405160208101818110838211171561184957611849611584565b60405282358281111561185b57600080fd5b6118678782860161179b565b82525095945050505050565b634e487b7160e01b600052602160045260246000fd5b60808101600486106118ab57634e487b7160e01b600052602160045260246000fd5b9481526001600160a01b03939093166020840152604083019190915260609091015290565b60006001600160401b038211156118e9576118e9611584565b5060051b60200190565b600082601f83011261190457600080fd5b813560206119146117ba836118d0565b82815260059290921b8401810191818101908684111561193357600080fd5b8286015b8481101561194e5780358352918301918301611937565b509695505050505050565b60006020828403121561196b57600080fd5b81356001600160401b0381111561198157600080fd5b61198d848285016118f3565b949350505050565b600082601f8301126119a657600080fd5b813560206119b66117ba836118d0565b82815260059290921b840181019181810190868411156119d557600080fd5b8286015b8481101561194e5780356001600160401b03808211156119f95760008081fd5b908801906040828b03601f1901811315611a135760008081fd5b611a1b61159a565b838801358152908301359082821115611a345760008081fd5b611a428c89848701016118f3565b8189015286525050509183019183016119d9565b600060408284031215611a6857600080fd5b611a7061159a565b90508135611a7d8161156f565b815260208201356001600160401b03811115611a9857600080fd5b611aa48482850161179b565b60208301525092915050565b600060a08284031215611ac257600080fd5b611aca6115c2565b9050611ad582611636565b81526020820135602082015260408201356001600160401b0380821115611afb57600080fd5b611b0785838601611995565b60408401526060840135915080821115611b2057600080fd5b611b2c85838601611995565b60608401526080840135915080821115611b4557600080fd5b50611b5284828501611a56565b60808301525092915050565b60008060008060008060006101a0888a031215611b7a57600080fd5b8735611b858161156f565b965060208801356001600160401b0380821115611ba157600080fd5b611bad8b838c0161179b565b975060408a01359150611bbf8261156f565b819650611bcf8b60608c01611641565b9550611bde8b60e08c01611641565b94506101608a013593506101808a0135915080821115611bfd57600080fd5b50611c0a8a828b01611ab0565b91505092959891949750929550565b6000806000806000806101808789031215611c3357600080fd5b8635611c3e8161156f565b95506020870135611c4e8161156f565b9450611c5d8860408901611641565b9350611c6c8860c08901611641565b925061014087013591506101608701356001600160401b03811115611c9057600080fd5b611c9c89828a01611ab0565b9150509295509295509295565b6000806000806000806000806101c0898b031215611cc657600080fd5b883597506020890135611cd88161156f565b9650611ce78a60408b01611641565b9550611cf68a60c08b01611641565b945061014089013593506101608901359250610180890135611d178161156f565b91506101a08901356001600160401b0380821115611d3457600080fd5b908a019060c0828d031215611d4857600080fd5b611d506115e4565b611d5983611636565b81526020830135602082015260408301356040820152606083013582811115611d8157600080fd5b611d8d8e828601611995565b606083015250608083013582811115611da557600080fd5b611db18e828601611995565b60808301525060a083013582811115611dc957600080fd5b611dd58e828601611a56565b60a0830152508093505050509295985092959890939650565b6000806000806000806101208789031215611e0857600080fd5b611e128888611641565b95506080870135611e228161156f565b945060a0870135611e328161156f565b935060c0870135925060e087013591506101008701356001600160401b0380821115611e5d57600080fd5b908801906040828b031215611e7157600080fd5b611e7961159a565b8235611e848161156f565b8152602083013582811115611e9857600080fd5b611ea48c828601611995565b6020830152508093505050509295509295509295565b60005b83811015611ed5578181015183820152602001611ebd565b50506000910152565b6001600160e01b0319831681528151600090611f01816004850160208701611eba565b919091016004019392505050565b60008251611f21818460208701611eba565b9190910192915050565b600060208284031215611f3d57600080fd5b81518015158114610a5257600080fd5b600060208284031215611f5f57600080fd5b81516001600160401b03811115611f7557600080fd5b8201601f81018413611f8657600080fd5b8051611f946117ba82611774565b818152856020838501011115611fa957600080fd5b611fba826020830160208601611eba565b95945050505050565b60008151808452611fdb816020860160208601611eba565b601f01601f19169290920160200192915050565b6040815260006120026040830185611fc3565b90508260208301529392505050565b60006020828403121561202357600080fd5b5051919050565b6001600160a01b038316815260406020820181905260009061198d90830184611fc3565b634e487b7160e01b600052601160045260246000fd5b818103818111156120775761207761204e565b92915050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81036120a9576120a961204e565b60010192915050565b600081518084526020808501945080840160005b838110156120e2578151875295820195908201906001016120c6565b509495945050505050565b6001600160a01b0385811682528416602082015260a060408201819052600090612119908301856120b2565b828103606084015261212b81856120b2565b838103608090940193909352505060008152602001949350505050565b60006020828403121561215a57600080fd5b8151610a528161156f565b6000600182016121775761217761204e565b5060010190565b808201808211156120775761207761204e56fea2646970667358221220ea857fe42781224685f387f94d918f0b6316cdfff405d47ce256da9a4028784864736f6c63430008110033",
    "sourceMap": "1572:26:0:-:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;199:10:24;169:40;;244:64;;;-1:-1:-1;;;;;;244:64:24;;;266:42;244:64;;;;;;312;;;;;;334:42;312:64;;;;;;163:507:25;407:40:24;;;;;;;;;;;;;;;;381:66;;;-1:-1:-1;;;;;;381:66:24;;;;;;;;;;;;;;;;477:40;163:507:25;477:40:24;1572:26:0;477:40:24;;;;;;;;;;;;;;;;451:66;;;;;;;;;;;;;;;;163:507:25;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "163:507:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1664:137:22;;;;;;:::i;:::-;;:::i;:::-;;242:47:25;;;:::i;6352:55:22:-;;;;;;:::i;:::-;1664:137;;1317:69;;;;;;:::i;:::-;;;;2471:126;;;;;;:::i;:::-;;;;;;2720:165;;;;;;:::i;:::-;;;;;;;;213:26:24;;;;;;;;;4613:25:28;;;4601:2;4586:18;213:26:24;;;;;;;;3267:72:22;;;;;;:::i;1805:138::-;;;;;;:::i;:::-;;:::i;381:66:24:-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;381:66:24;;;;;;;;;;;;;;:::i;7032:73:22:-;;;;;;:::i;3839:677::-;;;;;;:::i;:::-;;:::i;293:374:25:-;;;:::i;312:64:24:-;;;;;-1:-1:-1;;;;;312:64:24;;;;;;-1:-1:-1;;;;;12532:32:28;;;12514:51;;12502:2;12487:18;312:64:24;12368:203:28;244:64:24;;;;;-1:-1:-1;;;;;244:64:24;;;1819:584:0;;;:::i;:::-;;;12741:14:28;;12734:22;12716:41;;12704:2;12689:18;1819:584:0;12576:187:28;4635:563:22;;;;;;:::i;:::-;;:::i;451:66:24:-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;451:66:24;;;;522:63;;;:::i;589:161::-;;;;;;:::i;:::-;;:::i;5304:1006:22:-;;;;;;:::i;:::-;;:::i;3343:378::-;;;;;;:::i;:::-;;:::i;169:40:24:-;;;;;;1572:26:0;;;;;;;;;1664:137:22;1746:12;1732:11;:26;1728:69;;;1775:15;;-1:-1:-1;;;1775:15:22;;;;;;;;;;;242:47:25;273:11;:9;:11::i;:::-;242:47::o;1805:138:22:-;1891:12;1876:11;:27;1872:67;;1920:12;;-1:-1:-1;;;1920:12:22;;;;;;;;;;;3839:677;4080:27;4110:59;4127:14;4143:10;4155:13;4110:16;:59::i;:::-;4080:89;;4175:50;;;;;;;;;;;;;;-1:-1:-1;;;4175:50:22;;;4202:22;4175:11;:50::i;:::-;4074:442;3839:677;;;;;;;:::o;293:374:25:-;389:12;;;379:1;389:12;;;343:319;;;;;;427:10;343:319;;;;379:1;389:12;379:1;;389:12;;;;427:10;389:12;;343:319;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;343:319:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:10;343:319;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;343:319:25;-1:-1:-1;;;;;343:319:25;-1:-1:-1;;;;;343:319:25;;;;;;;;;;;;;;;;;;;;;463:20;491:165;;;;;;;;531:1;-1:-1:-1;;;;;491:165:25;;;;;543:1;491:165;;;;574:1;-1:-1:-1;;;;;554:22:25;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;554:22:25;;;;;;;;;;;;;;;-1:-1:-1;491:165:25;;;;606:1;586:22;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;586:22:25;;;;;;;;;;;;;;;-1:-1:-1;491:165:25;;618:30;;;;;;;;-1:-1:-1;618:30:25;;;635:12;;;;;491:165;635:12;;;;;;618:30;;;;491:165;;;343:20;:319::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;17294:51:28;;;-1:-1:-1;;;17361:18:28;;;17354:34;2196:43:0;;;;;;;;;17267:18:28;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;4635:563:22:-;4851:26;4949:244;4966:7;4981:8;4997:5;5010:4;:14;;;5032:21;5061:14;5083:4;:14;;;5105:4;:26;;;5139:4;:27;;;5174:4;:13;;;4949:9;:244::i;:::-;4845:353;4635:563;;;;;;:::o;522:63:24:-;557:23;567:12;;589:161;668:31;;-1:-1:-1;;;668:31:24;;18819:2:28;668:31:24;;;18801:21:28;18858:2;18838:18;;;18831:30;-1:-1:-1;;;18877:18:28;;;18870:45;654:13:24;;;;;;668:12;;18932:18:28;;668:31:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;668:31:24;;;;;;;;;;;;:::i;:::-;701:11;654:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;640:11;:73;;;719:26;;-1:-1:-1;;;719:26:24;;;;;4613:25:28;;;;719:13:24;;;;4586:18:28;;719:26:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;589:161;:::o;5304:1006:22:-;5540:42;5568:7;5577:4;5540:27;:42::i;:::-;5744:17;;5967:18;;;;5906:80;;-1:-1:-1;;;5906:80:22;;;;;20606:25:28;;;20647:18;;;20640:34;;;20690:18;;;20683:34;;;20733:18;;;20726:34;;;;5744:49:22;;-1:-1:-1;5876:27:22;;-1:-1:-1;;;;;5906:20:22;;;;;20578:19:28;;5906:80:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5876:110;;5993:249;6010:7;6025:8;6041:5;6054:4;:14;;;6076:4;:18;;;6102:22;6132:4;:14;;;6154:4;:26;;;6188:4;:27;;;6223:4;:13;;;5993:9;:249::i;:::-;5534:776;;5304:1006;;;;;;;;:::o;3343:378::-;3513:47;3540:5;3547:6;3555:4;3513:26;:47::i;:::-;3566:18;-1:-1:-1;;;;;3587:23:22;;:52;;3625:14;;3587:52;;;3613:9;3587:52;3566:73;;3645:71;3658:5;3665;3672:10;3684:6;3692:2;3696:4;:19;;;3645:12;:71::i;10427:179::-;10570:8;10427:179;;;;;;:::o;6548:139:12:-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:12;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:12;-1:-1:-1;;;6628:51:12;;;6612:15;:68::i;8955:1356:22:-;9284:88;9297:7;9306:5;9313:9;9324:13;9339:9;9350:21;9284:12;:88::i;:::-;9379:27;9421:28;9451:24;9479:60;9499:5;9506:8;9516:22;9479:19;:60::i;:::-;9420:119;;-1:-1:-1;9420:119:22;;-1:-1:-1;9420:119:22;-1:-1:-1;9607:23:22;;9603:74;;9649:19;;-1:-1:-1;;;9649:19:22;;;;;;;;;;;9603:74;-1:-1:-1;;9716:23:22;;9741:13;;;;9689:66;;-1:-1:-1;;;9689:66:22;;599:42;;9689:26;;:66;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9763:25;9790:22;9816:60;9836:5;9843:8;9853:22;9816:19;:60::i;:::-;9762:114;;;;9909:1;9895:8;:11;;;:15;:40;;;;;9934:1;9914:17;:21;9895:40;9894:143;;;-1:-1:-1;9947:22:22;;;;:36;;;;:89;;;10007:22;:29;9987:17;:49;9947:89;9883:424;;;10059:18;;-1:-1:-1;;;10059:18:22;;;;;;;;;;;9883:424;10098:30;10131:45;10154:22;10131:20;:45;:::i;:::-;10098:78;;10213:14;10188:22;:39;10184:117;;;10246:46;;-1:-1:-1;;;10246:46:22;;;;;4613:25:28;;;4586:18;;10246:46:22;;;;;;;10184:117;10090:217;9278:1033;;;8955:1356;;;;;;;;;;:::o;8039:634::-;8170:19;;;;:33;:56;;;;-1:-1:-1;8213:8:22;;;;:13;;8170:56;:100;;;;;8248:12;:22;;;8236:5;:8;;;:34;;8170:100;8159:154;;;8292:14;;-1:-1:-1;;;8292:14:22;;;;;;;;;;;8159:154;8323:19;;;;:33;8319:350;;8370:12;:34;;;:41;8415:1;8370:46;8366:100;;8435:22;;-1:-1:-1;;;8435:22:22;;;;;;;;;;;8366:100;8522:12;:26;;;8477:12;:34;;;:41;:71;8473:133;;8567:30;;-1:-1:-1;;;8567:30:22;;;;;;;;;;;8677:274;8812:19;;;;:33;;;;:81;;;8887:6;8849:12;:27;;;:34;:44;;8812:81;8808:139;;;8910:30;;-1:-1:-1;;;8910:30:22;;;;;;;;;;;8808:139;8677:274;;;:::o;616:1333:23:-;783:19;765:14;;:37;;;;;;;;:::i;:::-;;761:121;;819:10;;;;812:49;;-1:-1:-1;;;812:49:23;;-1:-1:-1;;;;;21614:15:28;;;812:49:23;;;21596:34:28;21666:15;;;21646:18;;;21639:43;21698:18;;;21691:34;;;812:31:23;;;;;;21531:18:28;;812:49:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;869:7;;761:121;914:20;896:14;;:38;;;;;;;;:::i;:::-;;892:1013;;948:19;;;;944:358;;1001:10;;;;993:46;;-1:-1:-1;;;993:46:23;;-1:-1:-1;;;;;21614:15:28;;;993:46:23;;;21596:34:28;21666:15;;;21646:18;;;21639:43;21698:18;;;21691:34;;;993:32:23;;;;;;21531:18:28;;993:46:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1309:7;;944:358;1069:7;1064:230;1082:14;:21;1080:1;:23;;;1064:230;;;1122:85;1140:5;:19;;;1161:14;1176:1;1161:17;;;;;;;;;;:::i;:::-;;;;;;;:23;;;1186:14;1201:1;1186:17;;;;;;;;;;:::i;1122:85::-;1227:5;:10;;;-1:-1:-1;;;;;1219:32:23;;1252:4;1258:2;1262:14;1277:1;1262:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;:20;1219:64;;-1:-1:-1;;;;;;1219:64:23;;;;;;;-1:-1:-1;;;;;21614:15:28;;;1219:64:23;;;21596:34:28;21666:15;;;;21646:18;;;21639:43;21698:18;;;21691:34;21531:18;;1219:64:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1105:3;;;;;:::i;:::-;;;;1064:230;;892:1013;1350:21;1332:14;;:39;;;;;;;;:::i;:::-;;1328:577;;1385:19;;;;1381:504;;1439:10;;;;1430:63;;-1:-1:-1;;;1430:63:23;;-1:-1:-1;;;;;22399:15:28;;;1430:63:23;;;22381:34:28;22451:15;;;22431:18;;;22424:43;22483:18;;;22476:34;;;22526:18;;;22519:34;;;22361:3;22569:19;;;22562:32;-1:-1:-1;22610:19:28;;;22603:30;1430:37:23;;;;;;22650:19:28;;1430:63:23;22048:627:28;1381:504:23;1518:17;1545:21;1581:7;1576:221;1594:14;:21;1592:1;:23;;;1576:221;;;1634:85;1652:5;:19;;;1673:14;1688:1;1673:17;;;;;;;;;;:::i;:::-;;;;;;;:23;;;1698:14;1713:1;1698:17;;;;;;;;;;:::i;1634:85::-;1740:14;1755:1;1740:17;;;;;;;;;;:::i;:::-;;;;;;;:20;;;1731:3;1735:1;1731:6;;;;;;;;;;:::i;:::-;;;;;;:29;;;;;1785:1;1772:7;1780:1;1772:10;;;;;;;;;;:::i;:::-;;;;;;;;;;:14;1617:3;;;;:::i;:::-;;;;1576:221;;;;1815:5;:10;;;-1:-1:-1;;;;;1806:42:23;;1849:4;1855:2;1859:3;1864:7;1806:70;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:377;;1892:7;;1328:577;1918:26;;-1:-1:-1;;;1918:26:23;;;;;;;;;;;181:376:12;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;2865:783:23:-;3008:12;;3069:20;3051:14;;:38;;;;;;;;:::i;:::-;;3047:416;;3114:1;3103:5;:8;;;:12;:62;;;;-1:-1:-1;3127:10:23;;;;3147:8;;;;3119:37;;-1:-1:-1;;;3119:37:23;;;;;4613:25:28;;;;-1:-1:-1;;;;;3119:46:23;;;;:27;;;;4586:18:28;;3119:37:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3119:46:23;;3103:62;3099:358;;;-1:-1:-1;3192:1:23;3099:358;;;3212:19;;;;:33;3208:249;;3262:7;3257:192;3275:14;:21;3273:1;:23;;;3257:192;;;3372:5;-1:-1:-1;;;;;3319:58:23;3327:5;:10;;;-1:-1:-1;;;;;3319:27:23;;3347:14;3362:1;3347:17;;;;;;;;;;:::i;:::-;;;;;;;:20;;;3319:49;;;;;;;;;;;;;4613:25:28;;4601:2;4586:18;;4467:177;3319:49:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3319:58:23;;3315:124;;3393:14;;;;:::i;:::-;;;;3421:5;;3315:124;3298:3;;;;:::i;:::-;;;;3257:192;;;;3208:249;3479:39;3489:5;3496;3503:14;3479:9;:39::i;:::-;3469:49;-1:-1:-1;3547:21:23;3529:14;;:39;;;;;;;;:::i;:::-;;:76;;;;-1:-1:-1;3572:19:23;;;;:33;;3529:76;3525:119;;;-1:-1:-1;3630:7:23;3525:119;2865:783;;;;;;:::o;1953:853::-;2069:4;2103:17;2085:14;;:35;;;;;;;;:::i;:::-;;2081:76;;-1:-1:-1;;;;;;2137:13:23;;;2130:20;;2081:76;2189:19;2171:14;;:37;;;;;;;;:::i;:::-;;2167:100;;2232:10;;;;2225:35;;-1:-1:-1;;;2225:35:23;;-1:-1:-1;;;;;12532:32:28;;;2225:35:23;;;12514:51:28;2225:28:23;;;;;;12487:18:28;;2225:35:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2218:42;;;;2167:100;2299:20;2281:14;;:38;;;;;;;;:::i;:::-;;2277:102;;2344:10;;;;2336:36;;-1:-1:-1;;;2336:36:23;;-1:-1:-1;;;;;12532:32:28;;;2336:36:23;;;12514:51:28;2336:29:23;;;;;;12487:18:28;;2336:36:23;12368:203:28;2277:102:23;2411:21;2393:14;;:39;;;;;;;;:::i;:::-;;2389:373;;2446:8;;;;:12;2442:314;;2486:10;;;;2515:8;;;;2477:47;;-1:-1:-1;;;2477:47:23;;-1:-1:-1;;;;;17312:32:28;;;2477:47:23;;;17294:51:28;17361:18;;;17354:34;;;;2477:30:23;;;;;17267:18:28;;2477:47:23;17120:274:28;2442:314:23;2549:12;;2571:153;2589:14;:21;2587:1;:23;;;2571:153;;;2703:1;2650:5;:10;;;-1:-1:-1;;;;;2641:30:23;;2672:5;2679:14;2694:1;2679:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;:20;2641:59;;-1:-1:-1;;;;;;2641:59:23;;;;;;;-1:-1:-1;;;;;17312:32:28;;;2641:59:23;;;17294:51:28;17361:18;;;17354:34;17267:18;;2641:59:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;:71;;2711:1;2641:71;;;2707:1;2641:71;2629:84;;;;;;:::i;:::-;;-1:-1:-1;2612:3:23;;;;:::i;:::-;;;;2571:153;;;-1:-1:-1;2740:7:23;-1:-1:-1;2733:14:23;;14:180:28;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:28;;14:180;-1:-1:-1;14:180:28:o;384:248::-;452:6;460;513:2;501:9;492:7;488:23;484:32;481:52;;;529:1;526;519:12;481:52;-1:-1:-1;;552:23:28;;;622:2;607:18;;;594:32;;-1:-1:-1;384:248:28:o;890:145::-;-1:-1:-1;;;;;979:31:28;;969:42;;959:70;;1025:1;1022;1015:12;1040:127;1101:10;1096:3;1092:20;1089:1;1082:31;1132:4;1129:1;1122:15;1156:4;1153:1;1146:15;1172:257;1244:4;1238:11;;;1276:17;;-1:-1:-1;;;;;1308:34:28;;1344:22;;;1305:62;1302:88;;;1370:18;;:::i;:::-;1406:4;1399:24;1172:257;:::o;1434:253::-;1506:2;1500:9;1548:4;1536:17;;-1:-1:-1;;;;;1568:34:28;;1604:22;;;1565:62;1562:88;;;1630:18;;:::i;1692:252::-;1764:2;1758:9;1806:3;1794:16;;-1:-1:-1;;;;;1825:34:28;;1861:22;;;1822:62;1819:88;;;1887:18;;:::i;1949:275::-;2020:2;2014:9;2085:2;2066:13;;-1:-1:-1;;2062:27:28;2050:40;;-1:-1:-1;;;;;2105:34:28;;2141:22;;;2102:62;2099:88;;;2167:18;;:::i;:::-;2203:2;2196:22;1949:275;;-1:-1:-1;1949:275:28:o;2229:148::-;2297:20;;2326:45;2297:20;2326:45;:::i;2382:771::-;2434:5;2482:4;2470:9;2465:3;2461:19;2457:30;2454:50;;;2500:1;2497;2490:12;2454:50;2533:2;2527:9;2575:4;2567:6;2563:17;2646:6;2634:10;2631:22;-1:-1:-1;;;;;2598:10:28;2595:34;2592:62;2589:88;;;2657:18;;:::i;:::-;2693:2;2686:22;2726:6;-1:-1:-1;2726:6:28;2756:23;;2810:1;2798:14;;2788:42;;2826:1;2823;2816:12;2788:42;2839:23;;2914:2;2899:18;;2886:32;2927:47;2886:32;2927:47;:::i;:::-;3007:7;3002:2;2994:6;2990:15;2983:32;;3076:2;3065:9;3061:18;3048:32;3043:2;3035:6;3031:15;3024:57;3142:2;3131:9;3127:18;3114:32;3109:2;3101:6;3097:15;3090:57;;2382:771;;;;:::o;3158:578::-;3314:6;3322;3330;3338;3391:3;3379:9;3370:7;3366:23;3362:33;3359:53;;;3408:1;3405;3398:12;3359:53;3447:9;3434:23;3466:45;3505:5;3466:45;:::i;:::-;3530:5;-1:-1:-1;3554:52:28;3598:7;3593:2;3578:18;;3554:52;:::i;:::-;3544:62;;3625:53;3670:7;3664:3;3653:9;3649:19;3625:53;:::i;:::-;3158:578;;;;-1:-1:-1;3615:63:28;;3725:3;3710:19;3697:33;;-1:-1:-1;;3158:578:28:o;3741:721::-;3920:6;3928;3936;3944;3952;3960;4013:3;4001:9;3992:7;3988:23;3984:33;3981:53;;;4030:1;4027;4020:12;3981:53;4069:9;4056:23;4088:45;4127:5;4088:45;:::i;:::-;4152:5;-1:-1:-1;4176:52:28;4220:7;4215:2;4200:18;;4176:52;:::i;:::-;4166:62;;4247:53;4292:7;4286:3;4275:9;4271:19;4247:53;:::i;:::-;4237:63;;4347:3;4336:9;4332:19;4319:33;4309:43;;4399:3;4388:9;4384:19;4371:33;4361:43;;4451:3;4440:9;4436:19;4423:33;4413:43;;3741:721;;;;;;;;:::o;4649:186::-;4697:4;-1:-1:-1;;;;;4722:6:28;4719:30;4716:56;;;4752:18;;:::i;:::-;-1:-1:-1;4818:2:28;4797:15;-1:-1:-1;;4793:29:28;4824:4;4789:40;;4649:186::o;4840:462::-;4882:5;4935:3;4928:4;4920:6;4916:17;4912:27;4902:55;;4953:1;4950;4943:12;4902:55;4989:6;4976:20;5020:48;5036:31;5064:2;5036:31;:::i;:::-;5020:48;:::i;:::-;5093:2;5084:7;5077:19;5139:3;5132:4;5127:2;5119:6;5115:15;5111:26;5108:35;5105:55;;;5156:1;5153;5146:12;5105:55;5221:2;5214:4;5206:6;5202:17;5195:4;5186:7;5182:18;5169:55;5269:1;5244:16;;;5262:4;5240:27;5233:38;;;;5248:7;4840:462;-1:-1:-1;;;4840:462:28:o;5307:766::-;5407:6;5460:2;5448:9;5439:7;5435:23;5431:32;5428:52;;;5476:1;5473;5466:12;5428:52;5516:9;5503:23;-1:-1:-1;;;;;5586:2:28;5578:6;5575:14;5572:34;;;5602:1;5599;5592:12;5572:34;5625:22;;;;5681:2;5663:16;;;5659:25;5656:45;;;5697:1;5694;5687:12;5656:45;5730:2;5724:9;5772:2;5764:6;5760:15;5825:6;5813:10;5810:22;5805:2;5793:10;5790:18;5787:46;5784:72;;;5836:18;;:::i;:::-;5872:2;5865:22;5912:16;;5940;;;5937:36;;;5969:1;5966;5959:12;5937:36;5997:44;6033:7;6022:8;6018:2;6014:17;5997:44;:::i;:::-;5982:60;;-1:-1:-1;5989:6:28;5307:766;-1:-1:-1;;;;;5307:766:28:o;6078:127::-;6139:10;6134:3;6130:20;6127:1;6120:31;6170:4;6167:1;6160:15;6194:4;6191:1;6184:15;6210:587;6445:3;6430:19;;6479:1;6468:13;;6458:144;;6524:10;6519:3;6515:20;6512:1;6505:31;6559:4;6556:1;6549:15;6587:4;6584:1;6577:15;6458:144;6611:25;;;-1:-1:-1;;;;;6672:32:28;;;;6667:2;6652:18;;6645:60;6736:2;6721:18;;6714:34;;;;6779:2;6764:18;;;6757:34;6210:587;:::o;6802:183::-;6862:4;-1:-1:-1;;;;;6887:6:28;6884:30;6881:56;;;6917:18;;:::i;:::-;-1:-1:-1;6962:1:28;6958:14;6974:4;6954:25;;6802:183::o;6990:662::-;7044:5;7097:3;7090:4;7082:6;7078:17;7074:27;7064:55;;7115:1;7112;7105:12;7064:55;7151:6;7138:20;7177:4;7201:60;7217:43;7257:2;7217:43;:::i;7201:60::-;7295:15;;;7381:1;7377:10;;;;7365:23;;7361:32;;;7326:12;;;;7405:15;;;7402:35;;;7433:1;7430;7423:12;7402:35;7469:2;7461:6;7457:15;7481:142;7497:6;7492:3;7489:15;7481:142;;;7563:17;;7551:30;;7601:12;;;;7514;;7481:142;;;-1:-1:-1;7641:5:28;6990:662;-1:-1:-1;;;;;;6990:662:28:o;7657:348::-;7741:6;7794:2;7782:9;7773:7;7769:23;7765:32;7762:52;;;7810:1;7807;7800:12;7762:52;7850:9;7837:23;-1:-1:-1;;;;;7875:6:28;7872:30;7869:50;;;7915:1;7912;7905:12;7869:50;7938:61;7991:7;7982:6;7971:9;7967:22;7938:61;:::i;:::-;7928:71;7657:348;-1:-1:-1;;;;7657:348:28:o;8263:1459::-;8330:5;8383:3;8376:4;8368:6;8364:17;8360:27;8350:55;;8401:1;8398;8391:12;8350:55;8437:6;8424:20;8463:4;8487:60;8503:43;8543:2;8503:43;:::i;8487:60::-;8581:15;;;8667:1;8663:10;;;;8651:23;;8647:32;;;8612:12;;;;8691:15;;;8688:35;;;8719:1;8716;8709:12;8688:35;8755:2;8747:6;8743:15;8767:926;8783:6;8778:3;8775:15;8767:926;;;8869:3;8856:17;-1:-1:-1;;;;;8946:2:28;8933:11;8930:19;8927:109;;;8990:1;9019:2;9015;9008:14;8927:109;9059:24;;;;9106:4;9134:12;;;-1:-1:-1;;9130:26:28;9126:35;-1:-1:-1;9123:125:28;;;9202:1;9231:2;9227;9220:14;9123:125;9274:22;;:::i;:::-;9336:11;;;9323:25;9309:40;;9391:11;;;9378:25;;9419:16;;;9416:106;;;9476:1;9505:2;9501;9494:14;9416:106;9558:61;9615:3;9610:2;9599:8;9595:2;9591:17;9587:26;9558:61;:::i;:::-;9542:14;;;9535:85;9633:18;;-1:-1:-1;;;9671:12:28;;;;8800;;8767:926;;9727:493;9778:5;9826:4;9814:9;9809:3;9805:19;9801:30;9798:50;;;9844:1;9841;9834:12;9798:50;9866:22;;:::i;:::-;9857:31;;9925:9;9912:23;9944:47;9983:7;9944:47;:::i;:::-;10000:22;;10073:2;10058:18;;10045:32;-1:-1:-1;;;;;10089:30:28;;10086:50;;;10132:1;10129;10122:12;10086:50;10168:45;10209:3;10200:6;10189:9;10185:22;10168:45;:::i;:::-;10163:2;10156:5;10152:14;10145:69;;9727:493;;;;:::o;10225:938::-;10294:5;10342:4;10330:9;10325:3;10321:19;10317:30;10314:50;;;10360:1;10357;10350:12;10314:50;10382:22;;:::i;:::-;10373:31;;10427:29;10446:9;10427:29;:::i;:::-;10420:5;10413:44;10517:2;10506:9;10502:18;10489:32;10484:2;10477:5;10473:14;10466:56;10573:2;10562:9;10558:18;10545:32;-1:-1:-1;;;;;10637:2:28;10629:6;10626:14;10623:34;;;10653:1;10650;10643:12;10623:34;10689:70;10755:3;10746:6;10735:9;10731:22;10689:70;:::i;:::-;10684:2;10677:5;10673:14;10666:94;10813:2;10802:9;10798:18;10785:32;10769:48;;10842:2;10832:8;10829:16;10826:36;;;10858:1;10855;10848:12;10826:36;10894:72;10962:3;10951:8;10940:9;10936:24;10894:72;:::i;:::-;10889:2;10882:5;10878:14;10871:96;11020:3;11009:9;11005:19;10992:33;10976:49;;11050:2;11040:8;11037:16;11034:36;;;11066:1;11063;11056:12;11034:36;;11103:53;11152:3;11141:8;11130:9;11126:24;11103:53;:::i;:::-;11097:3;11090:5;11086:15;11079:78;;10225:938;;;;:::o;11168:1195::-;11379:6;11387;11395;11403;11411;11419;11427;11480:3;11468:9;11459:7;11455:23;11451:33;11448:53;;;11497:1;11494;11487:12;11448:53;11536:9;11523:23;11555:45;11594:5;11555:45;:::i;:::-;11619:5;-1:-1:-1;11675:2:28;11660:18;;11647:32;-1:-1:-1;;;;;11728:14:28;;;11725:34;;;11755:1;11752;11745:12;11725:34;11778:49;11819:7;11810:6;11799:9;11795:22;11778:49;:::i;:::-;11768:59;;11879:2;11868:9;11864:18;11851:32;11836:47;;11892;11931:7;11892:47;:::i;:::-;11958:7;11948:17;;11984:52;12028:7;12023:2;12012:9;12008:18;11984:52;:::i;:::-;11974:62;;12055:53;12100:7;12094:3;12083:9;12079:19;12055:53;:::i;:::-;12045:63;;12155:3;12144:9;12140:19;12127:33;12117:43;;12213:3;12202:9;12198:19;12185:33;12169:49;;12243:2;12233:8;12230:16;12227:36;;;12259:1;12256;12249:12;12227:36;;12282:75;12349:7;12338:8;12327:9;12323:24;12282:75;:::i;:::-;12272:85;;;11168:1195;;;;;;;;;;:::o;12768:998::-;12983:6;12991;12999;13007;13015;13023;13076:3;13064:9;13055:7;13051:23;13047:33;13044:53;;;13093:1;13090;13083:12;13044:53;13132:9;13119:23;13151:45;13190:5;13151:45;:::i;:::-;13215:5;-1:-1:-1;13272:2:28;13257:18;;13244:32;13285:47;13244:32;13285:47;:::i;:::-;13351:7;-1:-1:-1;13377:52:28;13421:7;13416:2;13401:18;;13377:52;:::i;:::-;13367:62;;13448:53;13493:7;13487:3;13476:9;13472:19;13448:53;:::i;:::-;13438:63;;13548:3;13537:9;13533:19;13520:33;13510:43;;13604:3;13593:9;13589:19;13576:33;-1:-1:-1;;;;;13624:6:28;13621:30;13618:50;;;13664:1;13661;13654:12;13618:50;13687:73;13752:7;13743:6;13732:9;13728:22;13687:73;:::i;:::-;13677:83;;;12768:998;;;;;;;;:::o;13771:1981::-;14002:6;14010;14018;14026;14034;14042;14050;14058;14111:3;14099:9;14090:7;14086:23;14082:33;14079:53;;;14128:1;14125;14118:12;14079:53;14164:9;14151:23;14141:33;;14224:2;14213:9;14209:18;14196:32;14237:45;14276:5;14237:45;:::i;:::-;14301:5;-1:-1:-1;14325:52:28;14369:7;14364:2;14349:18;;14325:52;:::i;:::-;14315:62;;14396:53;14441:7;14435:3;14424:9;14420:19;14396:53;:::i;:::-;14386:63;;14496:3;14485:9;14481:19;14468:33;14458:43;;14548:3;14537:9;14533:19;14520:33;14510:43;;14605:3;14594:9;14590:19;14577:33;14619:47;14658:7;14619:47;:::i;:::-;14685:7;-1:-1:-1;14743:3:28;14728:19;;14715:33;-1:-1:-1;;;;;14797:14:28;;;14794:34;;;14824:1;14821;14814:12;14794:34;14847:22;;;;14903:3;14885:16;;;14881:26;14878:46;;;14920:1;14917;14910:12;14878:46;14948:22;;:::i;:::-;14995;15014:2;14995:22;:::i;:::-;14986:7;14979:39;15073:2;15069;15065:11;15052:25;15047:2;15038:7;15034:16;15027:51;15133:2;15129;15125:11;15112:25;15107:2;15098:7;15094:16;15087:51;15184:2;15180;15176:11;15163:25;15213:2;15203:8;15200:16;15197:36;;;15229:1;15226;15219:12;15197:36;15267:69;15328:7;15317:8;15313:2;15309:17;15267:69;:::i;:::-;15262:2;15253:7;15249:16;15242:95;;15383:3;15379:2;15375:12;15362:26;15413:2;15403:8;15400:16;15397:36;;;15429:1;15426;15419:12;15397:36;15468:69;15529:7;15518:8;15514:2;15510:17;15468:69;:::i;:::-;15462:3;15453:7;15449:17;15442:96;;15584:3;15580:2;15576:12;15563:26;15614:2;15604:8;15601:16;15598:36;;;15630:1;15627;15620:12;15598:36;15669:50;15711:7;15700:8;15696:2;15692:17;15669:50;:::i;:::-;15663:3;15654:7;15650:17;15643:77;;15739:7;15729:17;;;;;13771:1981;;;;;;;;;;;:::o;15757:1358::-;15924:6;15932;15940;15948;15956;15964;16017:3;16005:9;15996:7;15992:23;15988:33;15985:53;;;16034:1;16031;16024:12;15985:53;16057:43;16092:7;16081:9;16057:43;:::i;:::-;16047:53;;16150:3;16139:9;16135:19;16122:33;16164:45;16203:5;16164:45;:::i;:::-;16228:5;-1:-1:-1;16285:3:28;16270:19;;16257:33;16299:47;16257:33;16299:47;:::i;:::-;16365:7;-1:-1:-1;16419:3:28;16404:19;;16391:33;;-1:-1:-1;16471:3:28;16456:19;;16443:33;;-1:-1:-1;16527:3:28;16512:19;;16499:33;-1:-1:-1;;;;;16581:14:28;;;16578:34;;;16608:1;16605;16598:12;16578:34;16631:22;;;;16687:4;16669:16;;;16665:27;16662:47;;;16705:1;16702;16695:12;16662:47;16733:22;;:::i;:::-;16792:2;16779:16;16804:47;16843:7;16804:47;:::i;:::-;16860:24;;16930:2;16922:11;;16909:25;16946:16;;;16943:36;;;16975:1;16972;16965:12;16943:36;17013:69;17074:7;17063:8;17059:2;17055:17;17013:69;:::i;:::-;17008:2;16999:7;16995:16;16988:95;;17102:7;17092:17;;;;;15757:1358;;;;;;;;:::o;17399:250::-;17484:1;17494:113;17508:6;17505:1;17502:13;17494:113;;;17584:11;;;17578:18;17565:11;;;17558:39;17530:2;17523:10;17494:113;;;-1:-1:-1;;17641:1:28;17623:16;;17616:27;17399:250::o;17654:384::-;-1:-1:-1;;;;;;17839:33:28;;17827:46;;17896:13;;17809:3;;17918:74;17896:13;17981:1;17972:11;;17965:4;17953:17;;17918:74;:::i;:::-;18012:16;;;;18030:1;18008:24;;17654:384;-1:-1:-1;;;17654:384:28:o;18043:287::-;18172:3;18210:6;18204:13;18226:66;18285:6;18280:3;18273:4;18265:6;18261:17;18226:66;:::i;:::-;18308:16;;;;;18043:287;-1:-1:-1;;18043:287:28:o;18335:277::-;18402:6;18455:2;18443:9;18434:7;18430:23;18426:32;18423:52;;;18471:1;18468;18461:12;18423:52;18503:9;18497:16;18556:5;18549:13;18542:21;18535:5;18532:32;18522:60;;18578:1;18575;18568:12;18961:648;19041:6;19094:2;19082:9;19073:7;19069:23;19065:32;19062:52;;;19110:1;19107;19100:12;19062:52;19143:9;19137:16;-1:-1:-1;;;;;19168:6:28;19165:30;19162:50;;;19208:1;19205;19198:12;19162:50;19231:22;;19284:4;19276:13;;19272:27;-1:-1:-1;19262:55:28;;19313:1;19310;19303:12;19262:55;19342:2;19336:9;19367:48;19383:31;19411:2;19383:31;:::i;19367:48::-;19438:2;19431:5;19424:17;19478:7;19473:2;19468;19464;19460:11;19456:20;19453:33;19450:53;;;19499:1;19496;19489:12;19450:53;19512:67;19576:2;19571;19564:5;19560:14;19555:2;19551;19547:11;19512:67;:::i;:::-;19598:5;18961:648;-1:-1:-1;;;;;18961:648:28:o;19614:271::-;19656:3;19694:5;19688:12;19721:6;19716:3;19709:19;19737:76;19806:6;19799:4;19794:3;19790:14;19783:4;19776:5;19772:16;19737:76;:::i;:::-;19867:2;19846:15;-1:-1:-1;;19842:29:28;19833:39;;;;19874:4;19829:50;;19614:271;-1:-1:-1;;19614:271:28:o;19890:291::-;20067:2;20056:9;20049:21;20030:4;20087:45;20128:2;20117:9;20113:18;20105:6;20087:45;:::i;:::-;20079:53;;20168:6;20163:2;20152:9;20148:18;20141:34;19890:291;;;;;:::o;20186:184::-;20256:6;20309:2;20297:9;20288:7;20284:23;20280:32;20277:52;;;20325:1;20322;20315:12;20277:52;-1:-1:-1;20348:16:28;;20186:184;-1:-1:-1;20186:184:28:o;20771:315::-;-1:-1:-1;;;;;20946:32:28;;20928:51;;21015:2;21010;20995:18;;20988:30;;;-1:-1:-1;;21035:45:28;;21061:18;;21053:6;21035:45;:::i;21091:127::-;21152:10;21147:3;21143:20;21140:1;21133:31;21183:4;21180:1;21173:15;21207:4;21204:1;21197:15;21223:128;21290:9;;;21311:11;;;21308:37;;;21325:18;;:::i;:::-;21223:128;;;;:::o;21736:127::-;21797:10;21792:3;21788:20;21785:1;21778:31;21828:4;21825:1;21818:15;21852:4;21849:1;21842:15;21868:175;21905:3;21949:4;21942:5;21938:16;21978:4;21969:7;21966:17;21963:43;;21986:18;;:::i;:::-;22035:1;22022:15;;21868:175;-1:-1:-1;;21868:175:28:o;22680:435::-;22733:3;22771:5;22765:12;22798:6;22793:3;22786:19;22824:4;22853:2;22848:3;22844:12;22837:19;;22890:2;22883:5;22879:14;22911:1;22921:169;22935:6;22932:1;22929:13;22921:169;;;22996:13;;22984:26;;23030:12;;;;23065:15;;;;22957:1;22950:9;22921:169;;;-1:-1:-1;23106:3:28;;22680:435;-1:-1:-1;;;;;22680:435:28:o;23120:889::-;-1:-1:-1;;;;;23571:15:28;;;23553:34;;23623:15;;23618:2;23603:18;;23596:43;23533:3;23670:2;23655:18;;23648:31;;;23496:4;;23702:57;;23739:19;;23731:6;23702:57;:::i;:::-;23807:9;23799:6;23795:22;23790:2;23779:9;23775:18;23768:50;23841:44;23878:6;23870;23841:44;:::i;:::-;23922:22;;;23916:3;23901:19;;;23894:51;;;;-1:-1:-1;;23969:1:28;23954:17;;24000:2;23988:15;;23120:889;-1:-1:-1;;;;23120:889:28:o;24014:265::-;24084:6;24137:2;24125:9;24116:7;24112:23;24108:32;24105:52;;;24153:1;24150;24143:12;24105:52;24185:9;24179:16;24204:45;24243:5;24204:45;:::i;24284:135::-;24323:3;24344:17;;;24341:43;;24364:18;;:::i;:::-;-1:-1:-1;24411:1:28;24400:13;;24284:135::o;24703:125::-;24768:9;;;24789:10;;;24786:36;;;24802:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "USDC()": "89a30271",
    "USDC_Token()": "cc83c9ec",
    "WETH()": "ad5c4648",
    "WETH_Token()": "56aa0ea6",
    "bindLimitSwapFills(bytes32[])": "61ebbca8",
    "createSeaportListing(bytes32)": "6fc4fde7",
    "defaultBlock()": "f9e3e2fc",
    "failed()": "ba414fa6",
    "invertLimitSwapFills(bytes32,bytes32)": "193a0f62",
    "limitSwap(bytes32,address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,uint256,address,(address,uint256,uint256,(uint256,bytes32[])[],(uint256,bytes32[])[],(address,bytes)))": "f0f6ee2a",
    "mainnetFork()": "40362fea",
    "marketSwapExactInput(address,bytes,address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,(address,uint256,(uint256,bytes32[])[],(uint256,bytes32[])[],(address,bytes)))": "67fde9df",
    "marketSwapExactOutput(address,address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,(address,uint256,(uint256,bytes32[])[],(uint256,bytes32[])[],(address,bytes)))": "be330dbd",
    "maxRuns(bytes32,uint256)": "b4caf1cb",
    "requireBitNotUsed(uint256,uint256)": "181233ee",
    "requireBitUsed(uint256,uint256)": "47244b0d",
    "requireBlockMined(uint256)": "02908ed3",
    "requireBlockNotMined(uint256)": "502929ff",
    "requireBlocksElapsed(bytes32,uint256)": "65c8efda",
    "requireLimitSwapFilled(bytes32)": "4ef935ca",
    "requireLimitSwapOpen(bytes32)": "0f984250",
    "requirePriceDecrease(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,uint256,uint256)": "333aa2fc",
    "requirePriceIncrease(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256,uint256,uint256)": "db5b273a",
    "requirePriceLowerBound(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256)": "8129ef95",
    "requirePriceUpperBound(address,(uint8,address,bytes32,uint256),(uint8,address,bytes32,uint256),uint256)": "1ccf3c0c",
    "requireStake((bytes))": "48213e22",
    "setUp()": "0a9254e4",
    "setupFork()": "d46b8d2c",
    "setupFork(uint256)": "f0c27e3d",
    "testMarketSwapExactInput()": "6c73d637",
    "transfer((uint8,address,bytes32,uint256),address,address,uint256,uint256,(address,(uint256,bytes32[])[]))": "f7440e16",
    "useBit(uint256,uint256)": "a9aa5f7e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BlockMined\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BlockNotMined\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleProofAndAmountMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleProofsRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftIdAlreadyOwned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftIdNotReceived\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"NotEnoughTokenReceived\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedTokenStandard\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_Token\",\"outputs\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH_Token\",\"outputs\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"swapsIds\",\"type\":\"bytes32[]\"}],\"name\":\"bindLimitSwapFills\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"createSeaportListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"swap0\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"swap1\",\"type\":\"bytes32\"}],\"name\":\"invertLimitSwapFills\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenIn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenOut\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenInAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"basePrice\",\"type\":\"uint256\"},{\"internalType\":\"contract IPriceCurve\",\"name\":\"priceCurve\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenInAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenInId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenInIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenOutIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.Call\",\"name\":\"fillCall\",\"type\":\"tuple\"}],\"internalType\":\"struct Primatives01.UnsignedLimitSwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"limitSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainnetFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracleContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"oracleCall\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenIn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenOut\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenInAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenInId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenInIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenOutIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.Call\",\"name\":\"fillCall\",\"type\":\"tuple\"}],\"internalType\":\"struct Primatives01.UnsignedMarketSwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"marketSwapExactInput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenIn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenOut\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenOutAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenInId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenInIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"tokenOutIdMerkleProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.Call\",\"name\":\"fillCall\",\"type\":\"tuple\"}],\"internalType\":\"struct Primatives01.UnsignedMarketSwapData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"marketSwapExactOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfRuns\",\"type\":\"uint256\"}],\"name\":\"maxRuns\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bit\",\"type\":\"uint256\"}],\"name\":\"requireBitNotUsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bit\",\"type\":\"uint256\"}],\"name\":\"requireBitUsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"requireBlockMined\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"requireBlockNotMined\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfBlocksElapsed\",\"type\":\"uint256\"}],\"name\":\"requireBlocksElapsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"requireLimitSwapFilled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"requireLimitSwapOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceDeltaOracle\",\"name\":\"priceDeltaOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceDecrease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceDeltaOracle\",\"name\":\"priceDeltaOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceIncrease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceLowerBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"tokenB\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"requirePriceUpperBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"stakerSignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Primatives01.UnsignedStakeProofData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"requireStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setupFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"setupFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMarketSwapExactInput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum TokenStandard\",\"name\":\"standard\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Token\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IdMerkleProof[]\",\"name\":\"idMerkleProofs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Primatives01.UnsignedTransferData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bit\",\"type\":\"uint256\"}],\"name\":\"useBit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Primatives01_marketSwapExactInput.sol\":\"Primatives01_marketSwapExactInput\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":brink-core/=lib/brink-core/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd\",\"dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec\",\"dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0\",\"dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc\",\"dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3\",\"dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc\",\"dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51\",\"dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/Interfaces/ICallExecutor.sol\":{\"keccak256\":\"0x8330730889b5974571981232458f574522298c8fc1a9490b9a9d3ea88b1b72ad\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7579e934b5e7fb43c0e5af573fc94fa0d91b82ee68d60619ad7bf3a6d46fbf85\",\"dweb:/ipfs/QmUhyDX2xUSfwa8vkj6nJLpNYpqtwcRYe9cGGkHj3Sup7c\"]},\"src/Interfaces/IPriceCurve.sol\":{\"keccak256\":\"0x9063ca09de1597f770c9ebb6893984f7d51c15e5280c9910787c20c62b9d79d5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fdcc118d4326244a4c53c983db860c3a28b6485b83787f879b76d358c99a47e5\",\"dweb:/ipfs/QmXeY2bY1FL8AdwXR8kr5TRqjrBHiefB5e2bomtYvk5PME\"]},\"src/Interfaces/IPriceDeltaOracle.sol\":{\"keccak256\":\"0x845b060718c518189ec326b5eedbf2d4376ac983b274ae7b9161526141fcb7ef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://60578d5a214e46666a50d49837a0a249d88daf7443ea637e75c7ffaacc6a02d5\",\"dweb:/ipfs/QmVTFR1Hv7fY416qzVKaFYPvXD8ibRddhELk4rUt5Bh47d\"]},\"src/Interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x7d20e9d9824ab1622170b3839d3080c19119ed80884f74b78fc8ee27df54879f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://995379b96ffc1e22521918f7b3319f6ef02be468000d50075b80ced7ea5ee197\",\"dweb:/ipfs/QmYX1VFfXe6Tdv6d4svE5X7b5f4BShmwXBYHXtM9aWhrGo\"]},\"src/Primatives/Primatives01.sol\":{\"keccak256\":\"0x049d8d7d0f651a2b28f7621436638937208cc398dbf486b5bb419e399ca77b74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5981994c57c71f046a8eca2ac3f7cf0f4cb7dd0ffd9ac7d393d891c96389b1f8\",\"dweb:/ipfs/QmXQX3cetNdUNKyw8NpXN5wBKDebRY4Go6rb6AxtzjdcH3\"]},\"src/TokenHelper/TokenHelper.sol\":{\"keccak256\":\"0x71de5b580ade414ab63258413f82c541a2560ad37398f281853a8e73c60a7ff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://220df8edaec7f9a1c17e5f7f862bc7a813d3cf9facf4d51905a2cb7fcf9894e4\",\"dweb:/ipfs/QmXUcmw75mNB2GnYpRmZZgX3s77eTaK3ivCrmfkw4M95ze\"]},\"test/Helper.sol\":{\"keccak256\":\"0xd7b6b97473a2e1847e8949af2f3473f318ac14523ad9cc355aa734a1cc29f173\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8a5102a0ed405d83dc03989a8178b9c944e2ac4f42a7fa8027ea342b68818df8\",\"dweb:/ipfs/QmQoLEqh1gH7YrtP7294tDxW71cR9TDhoDPRv4R7h4Fs1E\"]},\"test/Primatives01_marketSwapExactInput.sol\":{\"keccak256\":\"0x31ff637566b87d29764cf47f23fcade31803d401da62199cddc116f4fccf0508\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://42e57f1e3876bdb4a0c869dc5741e8af6379b593e11df515ea36689d3ac1e89c\",\"dweb:/ipfs/QmRn6PXkxg2NkZs9HDxLRnYUWwVroi3aX2d6onBe4z7dvC\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "BlockMined"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BlockNotMined"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IdNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MerkleProofAndAmountMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MerkleProofsRequired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NftIdAlreadyOwned"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NftIdNotReceived"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountReceived",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotEnoughTokenReceived"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedTokenStandard"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USDC",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USDC_Token",
          "outputs": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH_Token",
          "outputs": [
            {
              "internalType": "enum TokenStandard",
              "name": "standard",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "idsMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "swapsIds",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bindLimitSwapFills"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createSeaportListing"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "swap0",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "swap1",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "invertLimitSwapFills"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenIn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenOut",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "tokenInAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "basePrice",
              "type": "uint256"
            },
            {
              "internalType": "contract IPriceCurve",
              "name": "priceCurve",
              "type": "address"
            },
            {
              "internalType": "struct Primatives01.UnsignedLimitSwapData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenInIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenOutIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct Primatives01.Call",
                  "name": "fillCall",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "limitSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mainnetFork",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oracleContract",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "oracleCall",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenIn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenOut",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "tokenInAmount",
              "type": "uint256"
            },
            {
              "internalType": "struct Primatives01.UnsignedMarketSwapData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenInIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenOutIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct Primatives01.Call",
                  "name": "fillCall",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "marketSwapExactInput"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenIn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenOut",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "tokenOutAmount",
              "type": "uint256"
            },
            {
              "internalType": "struct Primatives01.UnsignedMarketSwapData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenInId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenInIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "tokenOutIdMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "struct Primatives01.Call",
                  "name": "fillCall",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "marketSwapExactOutput"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "numberOfRuns",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "maxRuns"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bitmapIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireBitNotUsed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bitmapIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireBitUsed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requireBlockMined"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requireBlockNotMined"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "numberOfBlocksElapsed",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireBlocksElapsed"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireLimitSwapFilled"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireLimitSwapOpen"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceDeltaOracle",
              "name": "priceDeltaOracle",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceDecrease"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceDeltaOracle",
              "name": "priceDeltaOracle",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceIncrease"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceLowerBound"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "struct Token",
              "name": "tokenA",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Token",
              "name": "tokenB",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requirePriceUpperBound"
        },
        {
          "inputs": [
            {
              "internalType": "struct Primatives01.UnsignedStakeProofData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "stakerSignature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requireStake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setupFork"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setupFork"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMarketSwapExactInput"
        },
        {
          "inputs": [
            {
              "internalType": "struct Token",
              "name": "token",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum TokenStandard",
                  "name": "standard",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "idsMerkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "struct Primatives01.UnsignedTransferData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "struct IdMerkleProof[]",
                  "name": "idMerkleProofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bitmapIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "useBit"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":brink-core/=lib/brink-core/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Primatives01_marketSwapExactInput.sol": "Primatives01_marketSwapExactInput"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213",
        "urls": [
          "bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd",
          "dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524",
        "urls": [
          "bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec",
          "dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606",
        "urls": [
          "bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0",
          "dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269",
        "urls": [
          "bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc",
          "dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d",
        "urls": [
          "bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3",
          "dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf",
        "urls": [
          "bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc",
          "dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521",
        "urls": [
          "bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51",
          "dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/Interfaces/ICallExecutor.sol": {
        "keccak256": "0x8330730889b5974571981232458f574522298c8fc1a9490b9a9d3ea88b1b72ad",
        "urls": [
          "bzz-raw://7579e934b5e7fb43c0e5af573fc94fa0d91b82ee68d60619ad7bf3a6d46fbf85",
          "dweb:/ipfs/QmUhyDX2xUSfwa8vkj6nJLpNYpqtwcRYe9cGGkHj3Sup7c"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Interfaces/IPriceCurve.sol": {
        "keccak256": "0x9063ca09de1597f770c9ebb6893984f7d51c15e5280c9910787c20c62b9d79d5",
        "urls": [
          "bzz-raw://fdcc118d4326244a4c53c983db860c3a28b6485b83787f879b76d358c99a47e5",
          "dweb:/ipfs/QmXeY2bY1FL8AdwXR8kr5TRqjrBHiefB5e2bomtYvk5PME"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Interfaces/IPriceDeltaOracle.sol": {
        "keccak256": "0x845b060718c518189ec326b5eedbf2d4376ac983b274ae7b9161526141fcb7ef",
        "urls": [
          "bzz-raw://60578d5a214e46666a50d49837a0a249d88daf7443ea637e75c7ffaacc6a02d5",
          "dweb:/ipfs/QmVTFR1Hv7fY416qzVKaFYPvXD8ibRddhELk4rUt5Bh47d"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Interfaces/IPriceOracle.sol": {
        "keccak256": "0x7d20e9d9824ab1622170b3839d3080c19119ed80884f74b78fc8ee27df54879f",
        "urls": [
          "bzz-raw://995379b96ffc1e22521918f7b3319f6ef02be468000d50075b80ced7ea5ee197",
          "dweb:/ipfs/QmYX1VFfXe6Tdv6d4svE5X7b5f4BShmwXBYHXtM9aWhrGo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/Primatives/Primatives01.sol": {
        "keccak256": "0x049d8d7d0f651a2b28f7621436638937208cc398dbf486b5bb419e399ca77b74",
        "urls": [
          "bzz-raw://5981994c57c71f046a8eca2ac3f7cf0f4cb7dd0ffd9ac7d393d891c96389b1f8",
          "dweb:/ipfs/QmXQX3cetNdUNKyw8NpXN5wBKDebRY4Go6rb6AxtzjdcH3"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/TokenHelper/TokenHelper.sol": {
        "keccak256": "0x71de5b580ade414ab63258413f82c541a2560ad37398f281853a8e73c60a7ff6",
        "urls": [
          "bzz-raw://220df8edaec7f9a1c17e5f7f862bc7a813d3cf9facf4d51905a2cb7fcf9894e4",
          "dweb:/ipfs/QmXUcmw75mNB2GnYpRmZZgX3s77eTaK3ivCrmfkw4M95ze"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/Helper.sol": {
        "keccak256": "0xd7b6b97473a2e1847e8949af2f3473f318ac14523ad9cc355aa734a1cc29f173",
        "urls": [
          "bzz-raw://8a5102a0ed405d83dc03989a8178b9c944e2ac4f42a7fa8027ea342b68818df8",
          "dweb:/ipfs/QmQoLEqh1gH7YrtP7294tDxW71cR9TDhoDPRv4R7h4Fs1E"
        ],
        "license": "UNLICENSED"
      },
      "test/Primatives01_marketSwapExactInput.sol": {
        "keccak256": "0x31ff637566b87d29764cf47f23fcade31803d401da62199cddc116f4fccf0508",
        "urls": [
          "bzz-raw://42e57f1e3876bdb4a0c869dc5741e8af6379b593e11df515ea36689d3ac1e89c",
          "dweb:/ipfs/QmRn6PXkxg2NkZs9HDxLRnYUWwVroi3aX2d6onBe4z7dvC"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Primatives01_marketSwapExactInput.sol",
    "id": 27198,
    "exportedSymbols": {
      "BlockMined": [
        25869
      ],
      "BlockNotMined": [
        25871
      ],
      "DSTest": [
        1786
      ],
      "ERC1155IdNotProvided": [
        26610
      ],
      "Helper": [
        27127
      ],
      "ICallExecutor": [
        25813
      ],
      "IERC1155": [
        25597
      ],
      "IERC165": [
        25803
      ],
      "IERC20": [
        25675
      ],
      "IERC721": [
        25791
      ],
      "IPriceCurve": [
        25829
      ],
      "IPriceDeltaOracle": [
        25837
      ],
      "IPriceOracle": [
        25849
      ],
      "IdMerkleProof": [
        26602
      ],
      "IdNotAllowed": [
        26606
      ],
      "MerkleProofAndAmountMismatch": [
        25867
      ],
      "MerkleProofsRequired": [
        26608
      ],
      "NftIdAlreadyOwned": [
        25859
      ],
      "NftIdNotReceived": [
        25861
      ],
      "NotEnoughTokenReceived": [
        25865
      ],
      "OwnerHasNft": [
        26612
      ],
      "Primatives01": [
        26576
      ],
      "Primatives01_marketSwapExactInput": [
        27197
      ],
      "StdAssertions": [
        2671
      ],
      "StdChains": [
        3207
      ],
      "StdCheats": [
        5144
      ],
      "StdStorage": [
        6051
      ],
      "StdUtils": [
        8116
      ],
      "Test": [
        8158
      ],
      "TestBase": [
        1843
      ],
      "Token": [
        26596
      ],
      "TokenHelper": [
        27058
      ],
      "TokenStandard": [
        26586
      ],
      "UnsupportedTokenStandard": [
        26604
      ],
      "Vm": [
        9315
      ],
      "console": [
        17379
      ],
      "console2": [
        25475
      ],
      "stdError": [
        5210
      ],
      "stdJson": [
        5877
      ],
      "stdMath": [
        6019
      ],
      "stdStorage": [
        7485
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:632:25",
    "nodes": [
      {
        "id": 27129,
        "nodeType": "PragmaDirective",
        "src": "39:24:25",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 27130,
        "nodeType": "ImportDirective",
        "src": "65:28:25",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27198,
        "sourceUnit": 8159,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27131,
        "nodeType": "ImportDirective",
        "src": "94:44:25",
        "nodes": [],
        "absolutePath": "src/Primatives/Primatives01.sol",
        "file": "../src/Primatives/Primatives01.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27198,
        "sourceUnit": 26577,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27132,
        "nodeType": "ImportDirective",
        "src": "139:22:25",
        "nodes": [],
        "absolutePath": "test/Helper.sol",
        "file": "./Helper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27198,
        "sourceUnit": 27128,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27197,
        "nodeType": "ContractDefinition",
        "src": "163:507:25",
        "nodes": [
          {
            "id": 27145,
            "nodeType": "FunctionDefinition",
            "src": "242:47:25",
            "nodes": [],
            "body": {
              "id": 27144,
              "nodeType": "Block",
              "src": "267:22:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27141,
                      "name": "setupFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        27103,
                        27126
                      ],
                      "referencedDeclaration": 27103,
                      "src": "273:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 27142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "273:11:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27143,
                  "nodeType": "ExpressionStatement",
                  "src": "273:11:25"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "251:5:25",
            "parameters": {
              "id": 27139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "257:2:25"
            },
            "returnParameters": {
              "id": 27140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "267:0:25"
            },
            "scope": 27197,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27196,
            "nodeType": "FunctionDefinition",
            "src": "293:374:25",
            "nodes": [],
            "body": {
              "id": 27195,
              "nodeType": "Block",
              "src": "337:330:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 27151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "379:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 27150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "371:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27149,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "371:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "371:10:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 27155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "399:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 27154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "389:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 27153,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "393:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 27156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "389:12:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 27159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "417:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 27158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "409:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27157,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "409:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "409:10:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 27161,
                        "name": "WETH_Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27085,
                        "src": "427:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$26596_storage",
                          "typeString": "struct Token storage ref"
                        }
                      },
                      {
                        "id": 27162,
                        "name": "USDC_Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27095,
                        "src": "445:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$26596_storage",
                          "typeString": "struct Token storage ref"
                        }
                      },
                      {
                        "hexValue": "315f333030303030303030303030303030303030",
                        "id": 27163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "463:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1300000000000000000_by_1",
                          "typeString": "int_const 1300000000000000000"
                        },
                        "value": "1_300000000000000000"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 27167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "531:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 27166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "523:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 27165,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "523:7:25",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 27168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "523:10:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 27169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "543:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 27174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "574:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 27173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "554:19:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_IdMerkleProof_$26602_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (struct IdMerkleProof memory[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 27171,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 27170,
                                    "name": "IdMerkleProof",
                                    "nameLocations": [
                                      "558:13:25"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 26602,
                                    "src": "558:13:25"
                                  },
                                  "referencedDeclaration": 26602,
                                  "src": "558:13:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IdMerkleProof_$26602_storage_ptr",
                                    "typeString": "struct IdMerkleProof"
                                  }
                                },
                                "id": 27172,
                                "nodeType": "ArrayTypeName",
                                "src": "558:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_IdMerkleProof_$26602_storage_$dyn_storage_ptr",
                                  "typeString": "struct IdMerkleProof[]"
                                }
                              }
                            },
                            "id": 27175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "554:22:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_IdMerkleProof_$26602_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IdMerkleProof memory[] memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 27180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "606:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 27179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "586:19:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_IdMerkleProof_$26602_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (struct IdMerkleProof memory[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 27177,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 27176,
                                    "name": "IdMerkleProof",
                                    "nameLocations": [
                                      "590:13:25"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 26602,
                                    "src": "590:13:25"
                                  },
                                  "referencedDeclaration": 26602,
                                  "src": "590:13:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IdMerkleProof_$26602_storage_ptr",
                                    "typeString": "struct IdMerkleProof"
                                  }
                                },
                                "id": 27178,
                                "nodeType": "ArrayTypeName",
                                "src": "590:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_IdMerkleProof_$26602_storage_$dyn_storage_ptr",
                                  "typeString": "struct IdMerkleProof[]"
                                }
                              }
                            },
                            "id": 27181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "586:22:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_IdMerkleProof_$26602_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IdMerkleProof memory[] memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 27185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "631:1:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 27184,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "623:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 27183,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "623:7:25",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 27186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "623:10:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 27189,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "645:1:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 27188,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "635:9:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (bytes memory)"
                                  },
                                  "typeName": {
                                    "id": 27187,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "639:5:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  }
                                },
                                "id": 27190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "635:12:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 27182,
                              "name": "Call",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25928,
                              "src": "618:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Call_$25928_storage_ptr_$",
                                "typeString": "type(struct Primatives01.Call storage pointer)"
                              }
                            },
                            "id": 27191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "618:30:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Call_$25928_memory_ptr",
                              "typeString": "struct Primatives01.Call memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_IdMerkleProof_$26602_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IdMerkleProof memory[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_IdMerkleProof_$26602_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IdMerkleProof memory[] memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_Call_$25928_memory_ptr",
                              "typeString": "struct Primatives01.Call memory"
                            }
                          ],
                          "id": 27164,
                          "name": "UnsignedMarketSwapData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25902,
                          "src": "491:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_UnsignedMarketSwapData_$25902_storage_ptr_$",
                            "typeString": "type(struct Primatives01.UnsignedMarketSwapData storage pointer)"
                          }
                        },
                        "id": 27192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "491:165:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnsignedMarketSwapData_$25902_memory_ptr",
                          "typeString": "struct Primatives01.UnsignedMarketSwapData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Token_$26596_storage",
                          "typeString": "struct Token storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_Token_$26596_storage",
                          "typeString": "struct Token storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_1300000000000000000_by_1",
                          "typeString": "int_const 1300000000000000000"
                        },
                        {
                          "typeIdentifier": "t_struct$_UnsignedMarketSwapData_$25902_memory_ptr",
                          "typeString": "struct Primatives01.UnsignedMarketSwapData memory"
                        }
                      ],
                      "id": 27148,
                      "name": "marketSwapExactInput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26156,
                      "src": "343:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_address_$_t_struct$_Token_$26596_memory_ptr_$_t_struct$_Token_$26596_memory_ptr_$_t_uint256_$_t_struct$_UnsignedMarketSwapData_$25902_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,address,struct Token memory,struct Token memory,uint256,struct Primatives01.UnsignedMarketSwapData memory)"
                      }
                    },
                    "id": 27193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "343:319:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27194,
                  "nodeType": "ExpressionStatement",
                  "src": "343:319:25"
                }
              ]
            },
            "functionSelector": "6c73d637",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMarketSwapExactInput",
            "nameLocation": "302:24:25",
            "parameters": {
              "id": 27146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "327:2:25"
            },
            "returnParameters": {
              "id": 27147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "337:0:25"
            },
            "scope": 27197,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 27133,
              "name": "Primatives01",
              "nameLocations": [
                "209:12:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26576,
              "src": "209:12:25"
            },
            "id": 27134,
            "nodeType": "InheritanceSpecifier",
            "src": "209:12:25"
          },
          {
            "baseName": {
              "id": 27135,
              "name": "Test",
              "nameLocations": [
                "223:4:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8158,
              "src": "223:4:25"
            },
            "id": 27136,
            "nodeType": "InheritanceSpecifier",
            "src": "223:4:25"
          },
          {
            "baseName": {
              "id": 27137,
              "name": "Helper",
              "nameLocations": [
                "229:6:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27127,
              "src": "229:6:25"
            },
            "id": 27138,
            "nodeType": "InheritanceSpecifier",
            "src": "229:6:25"
          }
        ],
        "canonicalName": "Primatives01_marketSwapExactInput",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          27197,
          27127,
          8158,
          1843,
          1840,
          8116,
          5144,
          4755,
          3207,
          2671,
          1786,
          26576,
          27058
        ],
        "name": "Primatives01_marketSwapExactInput",
        "nameLocation": "172:33:25",
        "scope": 27198,
        "usedErrors": [
          25859,
          25861,
          25865,
          25867,
          25869,
          25871,
          26604,
          26606,
          26608
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 25
}